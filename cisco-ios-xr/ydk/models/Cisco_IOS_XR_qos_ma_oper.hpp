#ifndef _CISCO_IOS_XR_QOS_MA_OPER_
#define _CISCO_IOS_XR_QOS_MA_OPER_

#include <memory>
#include <vector>
#include <string>
#include "ydk/types.hpp"
#include "ydk/errors.hpp"

namespace ydk {
namespace Cisco_IOS_XR_qos_ma_oper {

class Qos : public Entity
{
    public:
        Qos();
        ~Qos();

        bool has_data() const override;
        bool has_operation() const override;
        EntityPath get_entity_path(Entity* parent) const override;
        std::string get_segment_path() const override;
        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
        void set_value(const std::string & value_path, std::string value) override;
        std::map<std::string, Entity*> & get_children() override;
        std::unique_ptr<Entity> clone_ptr() override;



    class NvInterfaceTable : public Entity
    {
        public:
            NvInterfaceTable();
            ~NvInterfaceTable();

            bool has_data() const override;
            bool has_operation() const override;
            EntityPath get_entity_path(Entity* parent) const override;
            std::string get_segment_path() const override;
            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
            void set_value(const std::string & value_path, std::string value) override;
            std::map<std::string, Entity*> & get_children() override;



        class Interface : public Entity
        {
            public:
                Interface();
                ~Interface();

                bool has_data() const override;
                bool has_operation() const override;
                EntityPath get_entity_path(Entity* parent) const override;
                std::string get_segment_path() const override;
                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                void set_value(const std::string & value_path, std::string value) override;
                std::map<std::string, Entity*> & get_children() override;


                YLeaf interface_name; //type: string

            class Nodes : public Entity
            {
                public:
                    Nodes();
                    ~Nodes();

                    bool has_data() const override;
                    bool has_operation() const override;
                    EntityPath get_entity_path(Entity* parent) const override;
                    std::string get_segment_path() const override;
                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                    void set_value(const std::string & value_path, std::string value) override;
                    std::map<std::string, Entity*> & get_children() override;



                class Node : public Entity
                {
                    public:
                        Node();
                        ~Node();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;


                        YLeaf node_name; //type: string

                    class Input : public Entity
                    {
                        public:
                            Input();
                            ~Input();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class Statistics : public Entity
                        {
                            public:
                                Statistics();
                                ~Statistics();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf policy_name; //type: string
                                YLeaf state; //type: PolicyStateEnum
                                YLeaf state_description; //type: string
                                YLeaf satid; //type: uint32

                            class ClassStat : public Entity
                            {
                                public:
                                    ClassStat();
                                    ~ClassStat();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf counter_validity_bitmask; //type: uint64
                                    YLeaf class_name; //type: string
                                    YLeaf shared_queue_id; //type: uint32
                                    YLeaf queue_descr; //type: string
                                    YLeaf cac_state; //type: CacStateEnum

                                class GeneralStats : public Entity
                                {
                                    public:
                                        GeneralStats();
                                        ~GeneralStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf transmit_packets; //type: uint64
                                        YLeaf transmit_bytes; //type: uint64
                                        YLeaf total_drop_packets; //type: uint64
                                        YLeaf total_drop_bytes; //type: uint64
                                        YLeaf total_drop_rate; //type: uint32
                                        YLeaf match_data_rate; //type: uint32
                                        YLeaf total_transmit_rate; //type: uint32
                                        YLeaf pre_policy_matched_packets; //type: uint64
                                        YLeaf pre_policy_matched_bytes; //type: uint64



                                }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::GeneralStats


                                class IphcStats : public Entity
                                {
                                    public:
                                        IphcStats();
                                        ~IphcStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf non_tcp_total_out_packets; //type: uint64
                                        YLeaf non_tcp_total_out_bytes; //type: uint64
                                        YLeaf non_tcp_bytes_saved; //type: uint64
                                        YLeaf non_tcp_compressed_packets_out; //type: uint64
                                        YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                        YLeaf non_tcp_full_header_packets_out; //type: uint64
                                        YLeaf tcp_total_out_packets; //type: uint64
                                        YLeaf tcp_total_out_bytes; //type: uint64
                                        YLeaf tcp_bytes_saved; //type: uint64
                                        YLeaf tcp_compressed_packets_out; //type: uint64
                                        YLeaf tcp_bytes_sent_rate; //type: uint32
                                        YLeaf tcp_full_header_packets_out; //type: uint64



                                }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::IphcStats


                                class ChildPolicy : public Entity
                                {
                                    public:
                                        ChildPolicy();
                                        ~ChildPolicy();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;





                                }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::ChildPolicy


                                class CacStats : public Entity
                                {
                                    public:
                                        CacStats();
                                        ~CacStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf drop_rates; //type: uint32
                                        YLeaf admitpackets; //type: uint64
                                        YLeaf admit_bytes; //type: uint64
                                        YLeaf admit_rates; //type: uint32



                                }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::CacStats


                                class QueueStatsArray : public Entity
                                {
                                    public:
                                        QueueStatsArray();
                                        ~QueueStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf queue_id; //type: uint32
                                        YLeaf tail_drop_packets; //type: uint64
                                        YLeaf tail_drop_bytes; //type: uint64
                                        YLeaf atm_clp0_drop_packets; //type: uint64
                                        YLeaf atm_clp0_drop_bytes; //type: uint64
                                        YLeaf atm_clp1_drop_packets; //type: uint64
                                        YLeaf atm_clp1_drop_bytes; //type: uint64
                                        YLeaf queue_drop_threshold; //type: uint32
                                        YLeaf forced_wred_stats_display; //type: boolean
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32

                                    class QueueInstanceLength : public Entity
                                    {
                                        public:
                                            QueueInstanceLength();
                                            ~QueueInstanceLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                    class QueueAverageLength : public Entity
                                    {
                                        public:
                                            QueueAverageLength();
                                            ~QueueAverageLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                    class QueueMaxLength : public Entity
                                    {
                                        public:
                                            QueueMaxLength();
                                            ~QueueMaxLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray


                                class PoliceStatsArray : public Entity
                                {
                                    public:
                                        PoliceStatsArray();
                                        ~PoliceStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf violate_packets; //type: uint64
                                        YLeaf violate_bytes; //type: uint64
                                        YLeaf parent_drop_packets; //type: uint64
                                        YLeaf parent_drop_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32
                                        YLeaf violate_rate; //type: uint32

                                    class ColorClassStats : public Entity
                                    {
                                        public:
                                            ColorClassStats();
                                            ~ColorClassStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf conform_class_conform_packets; //type: uint64
                                            YLeaf conform_class_conform_bytes; //type: uint64
                                            YLeaf conform_class_conform_rate; //type: uint32
                                            YLeaf conform_class_exceed_packets; //type: uint64
                                            YLeaf conform_class_exceed_bytes; //type: uint64
                                            YLeaf conform_class_exceed_rate; //type: uint32
                                            YLeaf conform_class_violate_packets; //type: uint64
                                            YLeaf conform_class_violate_bytes; //type: uint64
                                            YLeaf conform_class_violate_rate; //type: uint32
                                            YLeaf exceed_class_exceed_packets; //type: uint64
                                            YLeaf exceed_class_exceed_bytes; //type: uint64
                                            YLeaf exceed_class_exceed_rate; //type: uint32
                                            YLeaf exceed_class_violate_packets; //type: uint64
                                            YLeaf exceed_class_violate_bytes; //type: uint64
                                            YLeaf exceed_class_violate_rate; //type: uint32
                                            YLeaf violate_class_violate_packets; //type: uint64
                                            YLeaf violate_class_violate_bytes; //type: uint64
                                            YLeaf violate_class_violate_rate; //type: uint32



                                    }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::PoliceStatsArray


                                class WredStatsArray : public Entity
                                {
                                    public:
                                        WredStatsArray();
                                        ~WredStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf profile_title; //type: string
                                        YLeaf red_transmit_packets; //type: uint64
                                        YLeaf red_transmit_bytes; //type: uint64
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf red_ecn_marked_packets; //type: uint64
                                        YLeaf red_ecn_marked_bytes; //type: uint64

                                    class RedLabel : public Entity
                                    {
                                        public:
                                            RedLabel();
                                            ~RedLabel();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf wred_type; //type: WredEnum
                                            YLeaf value_; //type: uint8



                                    }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::WredStatsArray


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::CacStats> cac_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                            }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat> > class_stat;


                        }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input::Statistics> statistics;


                    }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Input


                    class Output : public Entity
                    {
                        public:
                            Output();
                            ~Output();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class Statistics : public Entity
                        {
                            public:
                                Statistics();
                                ~Statistics();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf policy_name; //type: string
                                YLeaf state; //type: PolicyStateEnum
                                YLeaf state_description; //type: string
                                YLeaf satid; //type: uint32

                            class ClassStat : public Entity
                            {
                                public:
                                    ClassStat();
                                    ~ClassStat();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf counter_validity_bitmask; //type: uint64
                                    YLeaf class_name; //type: string
                                    YLeaf shared_queue_id; //type: uint32
                                    YLeaf queue_descr; //type: string
                                    YLeaf cac_state; //type: CacStateEnum

                                class GeneralStats : public Entity
                                {
                                    public:
                                        GeneralStats();
                                        ~GeneralStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf transmit_packets; //type: uint64
                                        YLeaf transmit_bytes; //type: uint64
                                        YLeaf total_drop_packets; //type: uint64
                                        YLeaf total_drop_bytes; //type: uint64
                                        YLeaf total_drop_rate; //type: uint32
                                        YLeaf match_data_rate; //type: uint32
                                        YLeaf total_transmit_rate; //type: uint32
                                        YLeaf pre_policy_matched_packets; //type: uint64
                                        YLeaf pre_policy_matched_bytes; //type: uint64



                                }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::GeneralStats


                                class IphcStats : public Entity
                                {
                                    public:
                                        IphcStats();
                                        ~IphcStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf non_tcp_total_out_packets; //type: uint64
                                        YLeaf non_tcp_total_out_bytes; //type: uint64
                                        YLeaf non_tcp_bytes_saved; //type: uint64
                                        YLeaf non_tcp_compressed_packets_out; //type: uint64
                                        YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                        YLeaf non_tcp_full_header_packets_out; //type: uint64
                                        YLeaf tcp_total_out_packets; //type: uint64
                                        YLeaf tcp_total_out_bytes; //type: uint64
                                        YLeaf tcp_bytes_saved; //type: uint64
                                        YLeaf tcp_compressed_packets_out; //type: uint64
                                        YLeaf tcp_bytes_sent_rate; //type: uint32
                                        YLeaf tcp_full_header_packets_out; //type: uint64



                                }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::IphcStats


                                class ChildPolicy : public Entity
                                {
                                    public:
                                        ChildPolicy();
                                        ~ChildPolicy();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;





                                }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::ChildPolicy


                                class CacStats : public Entity
                                {
                                    public:
                                        CacStats();
                                        ~CacStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf drop_rates; //type: uint32
                                        YLeaf admitpackets; //type: uint64
                                        YLeaf admit_bytes; //type: uint64
                                        YLeaf admit_rates; //type: uint32



                                }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::CacStats


                                class QueueStatsArray : public Entity
                                {
                                    public:
                                        QueueStatsArray();
                                        ~QueueStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf queue_id; //type: uint32
                                        YLeaf tail_drop_packets; //type: uint64
                                        YLeaf tail_drop_bytes; //type: uint64
                                        YLeaf atm_clp0_drop_packets; //type: uint64
                                        YLeaf atm_clp0_drop_bytes; //type: uint64
                                        YLeaf atm_clp1_drop_packets; //type: uint64
                                        YLeaf atm_clp1_drop_bytes; //type: uint64
                                        YLeaf queue_drop_threshold; //type: uint32
                                        YLeaf forced_wred_stats_display; //type: boolean
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32

                                    class QueueInstanceLength : public Entity
                                    {
                                        public:
                                            QueueInstanceLength();
                                            ~QueueInstanceLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                    class QueueAverageLength : public Entity
                                    {
                                        public:
                                            QueueAverageLength();
                                            ~QueueAverageLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                    class QueueMaxLength : public Entity
                                    {
                                        public:
                                            QueueMaxLength();
                                            ~QueueMaxLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray


                                class PoliceStatsArray : public Entity
                                {
                                    public:
                                        PoliceStatsArray();
                                        ~PoliceStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf violate_packets; //type: uint64
                                        YLeaf violate_bytes; //type: uint64
                                        YLeaf parent_drop_packets; //type: uint64
                                        YLeaf parent_drop_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32
                                        YLeaf violate_rate; //type: uint32

                                    class ColorClassStats : public Entity
                                    {
                                        public:
                                            ColorClassStats();
                                            ~ColorClassStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf conform_class_conform_packets; //type: uint64
                                            YLeaf conform_class_conform_bytes; //type: uint64
                                            YLeaf conform_class_conform_rate; //type: uint32
                                            YLeaf conform_class_exceed_packets; //type: uint64
                                            YLeaf conform_class_exceed_bytes; //type: uint64
                                            YLeaf conform_class_exceed_rate; //type: uint32
                                            YLeaf conform_class_violate_packets; //type: uint64
                                            YLeaf conform_class_violate_bytes; //type: uint64
                                            YLeaf conform_class_violate_rate; //type: uint32
                                            YLeaf exceed_class_exceed_packets; //type: uint64
                                            YLeaf exceed_class_exceed_bytes; //type: uint64
                                            YLeaf exceed_class_exceed_rate; //type: uint32
                                            YLeaf exceed_class_violate_packets; //type: uint64
                                            YLeaf exceed_class_violate_bytes; //type: uint64
                                            YLeaf exceed_class_violate_rate; //type: uint32
                                            YLeaf violate_class_violate_packets; //type: uint64
                                            YLeaf violate_class_violate_bytes; //type: uint64
                                            YLeaf violate_class_violate_rate; //type: uint32



                                    }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::PoliceStatsArray


                                class WredStatsArray : public Entity
                                {
                                    public:
                                        WredStatsArray();
                                        ~WredStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf profile_title; //type: string
                                        YLeaf red_transmit_packets; //type: uint64
                                        YLeaf red_transmit_bytes; //type: uint64
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf red_ecn_marked_packets; //type: uint64
                                        YLeaf red_ecn_marked_bytes; //type: uint64

                                    class RedLabel : public Entity
                                    {
                                        public:
                                            RedLabel();
                                            ~RedLabel();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf wred_type; //type: WredEnum
                                            YLeaf value_; //type: uint8



                                    }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::WredStatsArray


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::CacStats> cac_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                            }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat> > class_stat;


                        }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output::Statistics> statistics;


                    }; // Qos::NvInterfaceTable::Interface::Nodes::Node::Output


                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Input> input;
                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node::Output> output;


                }; // Qos::NvInterfaceTable::Interface::Nodes::Node


                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes::Node> > node;


            }; // Qos::NvInterfaceTable::Interface::Nodes


            class MemberInterfaces : public Entity
            {
                public:
                    MemberInterfaces();
                    ~MemberInterfaces();

                    bool has_data() const override;
                    bool has_operation() const override;
                    EntityPath get_entity_path(Entity* parent) const override;
                    std::string get_segment_path() const override;
                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                    void set_value(const std::string & value_path, std::string value) override;
                    std::map<std::string, Entity*> & get_children() override;



                class MemberInterface : public Entity
                {
                    public:
                        MemberInterface();
                        ~MemberInterface();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;


                        YLeaf interface_name; //type: string

                    class SatelliteIds : public Entity
                    {
                        public:
                            SatelliteIds();
                            ~SatelliteIds();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class SatelliteId : public Entity
                        {
                            public:
                                SatelliteId();
                                ~SatelliteId();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf nv_satellite_id; //type: int32

                            class Input : public Entity
                            {
                                public:
                                    Input();
                                    ~Input();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;



                                class Statistics : public Entity
                                {
                                    public:
                                        Statistics();
                                        ~Statistics();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf policy_name; //type: string
                                        YLeaf state; //type: PolicyStateEnum
                                        YLeaf state_description; //type: string
                                        YLeaf satid; //type: uint32

                                    class ClassStat : public Entity
                                    {
                                        public:
                                            ClassStat();
                                            ~ClassStat();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf counter_validity_bitmask; //type: uint64
                                            YLeaf class_name; //type: string
                                            YLeaf shared_queue_id; //type: uint32
                                            YLeaf queue_descr; //type: string
                                            YLeaf cac_state; //type: CacStateEnum

                                        class GeneralStats : public Entity
                                        {
                                            public:
                                                GeneralStats();
                                                ~GeneralStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf transmit_packets; //type: uint64
                                                YLeaf transmit_bytes; //type: uint64
                                                YLeaf total_drop_packets; //type: uint64
                                                YLeaf total_drop_bytes; //type: uint64
                                                YLeaf total_drop_rate; //type: uint32
                                                YLeaf match_data_rate; //type: uint32
                                                YLeaf total_transmit_rate; //type: uint32
                                                YLeaf pre_policy_matched_packets; //type: uint64
                                                YLeaf pre_policy_matched_bytes; //type: uint64



                                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats


                                        class IphcStats : public Entity
                                        {
                                            public:
                                                IphcStats();
                                                ~IphcStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf non_tcp_total_out_packets; //type: uint64
                                                YLeaf non_tcp_total_out_bytes; //type: uint64
                                                YLeaf non_tcp_bytes_saved; //type: uint64
                                                YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                YLeaf tcp_total_out_packets; //type: uint64
                                                YLeaf tcp_total_out_bytes; //type: uint64
                                                YLeaf tcp_bytes_saved; //type: uint64
                                                YLeaf tcp_compressed_packets_out; //type: uint64
                                                YLeaf tcp_bytes_sent_rate; //type: uint32
                                                YLeaf tcp_full_header_packets_out; //type: uint64



                                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats


                                        class ChildPolicy : public Entity
                                        {
                                            public:
                                                ChildPolicy();
                                                ~ChildPolicy();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;





                                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy


                                        class CacStats : public Entity
                                        {
                                            public:
                                                CacStats();
                                                ~CacStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf drop_packets; //type: uint64
                                                YLeaf drop_bytes; //type: uint64
                                                YLeaf drop_rates; //type: uint32
                                                YLeaf admitpackets; //type: uint64
                                                YLeaf admit_bytes; //type: uint64
                                                YLeaf admit_rates; //type: uint32



                                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats


                                        class QueueStatsArray : public Entity
                                        {
                                            public:
                                                QueueStatsArray();
                                                ~QueueStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf queue_id; //type: uint32
                                                YLeaf tail_drop_packets; //type: uint64
                                                YLeaf tail_drop_bytes; //type: uint64
                                                YLeaf atm_clp0_drop_packets; //type: uint64
                                                YLeaf atm_clp0_drop_bytes; //type: uint64
                                                YLeaf atm_clp1_drop_packets; //type: uint64
                                                YLeaf atm_clp1_drop_bytes; //type: uint64
                                                YLeaf queue_drop_threshold; //type: uint32
                                                YLeaf forced_wred_stats_display; //type: boolean
                                                YLeaf random_drop_packets; //type: uint64
                                                YLeaf random_drop_bytes; //type: uint64
                                                YLeaf max_threshold_packets; //type: uint64
                                                YLeaf max_threshold_bytes; //type: uint64
                                                YLeaf conform_packets; //type: uint64
                                                YLeaf conform_bytes; //type: uint64
                                                YLeaf exceed_packets; //type: uint64
                                                YLeaf exceed_bytes; //type: uint64
                                                YLeaf conform_rate; //type: uint32
                                                YLeaf exceed_rate; //type: uint32

                                            class QueueInstanceLength : public Entity
                                            {
                                                public:
                                                    QueueInstanceLength();
                                                    ~QueueInstanceLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                            class QueueAverageLength : public Entity
                                            {
                                                public:
                                                    QueueAverageLength();
                                                    ~QueueAverageLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                            class QueueMaxLength : public Entity
                                            {
                                                public:
                                                    QueueMaxLength();
                                                    ~QueueMaxLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray


                                        class PoliceStatsArray : public Entity
                                        {
                                            public:
                                                PoliceStatsArray();
                                                ~PoliceStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf drop_packets; //type: uint64
                                                YLeaf drop_bytes; //type: uint64
                                                YLeaf conform_packets; //type: uint64
                                                YLeaf conform_bytes; //type: uint64
                                                YLeaf exceed_packets; //type: uint64
                                                YLeaf exceed_bytes; //type: uint64
                                                YLeaf violate_packets; //type: uint64
                                                YLeaf violate_bytes; //type: uint64
                                                YLeaf parent_drop_packets; //type: uint64
                                                YLeaf parent_drop_bytes; //type: uint64
                                                YLeaf conform_rate; //type: uint32
                                                YLeaf exceed_rate; //type: uint32
                                                YLeaf violate_rate; //type: uint32

                                            class ColorClassStats : public Entity
                                            {
                                                public:
                                                    ColorClassStats();
                                                    ~ColorClassStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf conform_class_conform_packets; //type: uint64
                                                    YLeaf conform_class_conform_bytes; //type: uint64
                                                    YLeaf conform_class_conform_rate; //type: uint32
                                                    YLeaf conform_class_exceed_packets; //type: uint64
                                                    YLeaf conform_class_exceed_bytes; //type: uint64
                                                    YLeaf conform_class_exceed_rate; //type: uint32
                                                    YLeaf conform_class_violate_packets; //type: uint64
                                                    YLeaf conform_class_violate_bytes; //type: uint64
                                                    YLeaf conform_class_violate_rate; //type: uint32
                                                    YLeaf exceed_class_exceed_packets; //type: uint64
                                                    YLeaf exceed_class_exceed_bytes; //type: uint64
                                                    YLeaf exceed_class_exceed_rate; //type: uint32
                                                    YLeaf exceed_class_violate_packets; //type: uint64
                                                    YLeaf exceed_class_violate_bytes; //type: uint64
                                                    YLeaf exceed_class_violate_rate; //type: uint32
                                                    YLeaf violate_class_violate_packets; //type: uint64
                                                    YLeaf violate_class_violate_bytes; //type: uint64
                                                    YLeaf violate_class_violate_rate; //type: uint32



                                            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray


                                        class WredStatsArray : public Entity
                                        {
                                            public:
                                                WredStatsArray();
                                                ~WredStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf profile_title; //type: string
                                                YLeaf red_transmit_packets; //type: uint64
                                                YLeaf red_transmit_bytes; //type: uint64
                                                YLeaf random_drop_packets; //type: uint64
                                                YLeaf random_drop_bytes; //type: uint64
                                                YLeaf max_threshold_packets; //type: uint64
                                                YLeaf max_threshold_bytes; //type: uint64
                                                YLeaf red_ecn_marked_packets; //type: uint64
                                                YLeaf red_ecn_marked_bytes; //type: uint64

                                            class RedLabel : public Entity
                                            {
                                                public:
                                                    RedLabel();
                                                    ~RedLabel();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf wred_type; //type: WredEnum
                                                    YLeaf value_; //type: uint8



                                            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats> cac_stats;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat> > class_stat;


                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics> statistics;


                            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input


                            class Output : public Entity
                            {
                                public:
                                    Output();
                                    ~Output();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;



                                class Statistics : public Entity
                                {
                                    public:
                                        Statistics();
                                        ~Statistics();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf policy_name; //type: string
                                        YLeaf state; //type: PolicyStateEnum
                                        YLeaf state_description; //type: string
                                        YLeaf satid; //type: uint32

                                    class ClassStat : public Entity
                                    {
                                        public:
                                            ClassStat();
                                            ~ClassStat();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf counter_validity_bitmask; //type: uint64
                                            YLeaf class_name; //type: string
                                            YLeaf shared_queue_id; //type: uint32
                                            YLeaf queue_descr; //type: string
                                            YLeaf cac_state; //type: CacStateEnum

                                        class GeneralStats : public Entity
                                        {
                                            public:
                                                GeneralStats();
                                                ~GeneralStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf transmit_packets; //type: uint64
                                                YLeaf transmit_bytes; //type: uint64
                                                YLeaf total_drop_packets; //type: uint64
                                                YLeaf total_drop_bytes; //type: uint64
                                                YLeaf total_drop_rate; //type: uint32
                                                YLeaf match_data_rate; //type: uint32
                                                YLeaf total_transmit_rate; //type: uint32
                                                YLeaf pre_policy_matched_packets; //type: uint64
                                                YLeaf pre_policy_matched_bytes; //type: uint64



                                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats


                                        class IphcStats : public Entity
                                        {
                                            public:
                                                IphcStats();
                                                ~IphcStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf non_tcp_total_out_packets; //type: uint64
                                                YLeaf non_tcp_total_out_bytes; //type: uint64
                                                YLeaf non_tcp_bytes_saved; //type: uint64
                                                YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                YLeaf tcp_total_out_packets; //type: uint64
                                                YLeaf tcp_total_out_bytes; //type: uint64
                                                YLeaf tcp_bytes_saved; //type: uint64
                                                YLeaf tcp_compressed_packets_out; //type: uint64
                                                YLeaf tcp_bytes_sent_rate; //type: uint32
                                                YLeaf tcp_full_header_packets_out; //type: uint64



                                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats


                                        class ChildPolicy : public Entity
                                        {
                                            public:
                                                ChildPolicy();
                                                ~ChildPolicy();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;





                                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy


                                        class CacStats : public Entity
                                        {
                                            public:
                                                CacStats();
                                                ~CacStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf drop_packets; //type: uint64
                                                YLeaf drop_bytes; //type: uint64
                                                YLeaf drop_rates; //type: uint32
                                                YLeaf admitpackets; //type: uint64
                                                YLeaf admit_bytes; //type: uint64
                                                YLeaf admit_rates; //type: uint32



                                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats


                                        class QueueStatsArray : public Entity
                                        {
                                            public:
                                                QueueStatsArray();
                                                ~QueueStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf queue_id; //type: uint32
                                                YLeaf tail_drop_packets; //type: uint64
                                                YLeaf tail_drop_bytes; //type: uint64
                                                YLeaf atm_clp0_drop_packets; //type: uint64
                                                YLeaf atm_clp0_drop_bytes; //type: uint64
                                                YLeaf atm_clp1_drop_packets; //type: uint64
                                                YLeaf atm_clp1_drop_bytes; //type: uint64
                                                YLeaf queue_drop_threshold; //type: uint32
                                                YLeaf forced_wred_stats_display; //type: boolean
                                                YLeaf random_drop_packets; //type: uint64
                                                YLeaf random_drop_bytes; //type: uint64
                                                YLeaf max_threshold_packets; //type: uint64
                                                YLeaf max_threshold_bytes; //type: uint64
                                                YLeaf conform_packets; //type: uint64
                                                YLeaf conform_bytes; //type: uint64
                                                YLeaf exceed_packets; //type: uint64
                                                YLeaf exceed_bytes; //type: uint64
                                                YLeaf conform_rate; //type: uint32
                                                YLeaf exceed_rate; //type: uint32

                                            class QueueInstanceLength : public Entity
                                            {
                                                public:
                                                    QueueInstanceLength();
                                                    ~QueueInstanceLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                            class QueueAverageLength : public Entity
                                            {
                                                public:
                                                    QueueAverageLength();
                                                    ~QueueAverageLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                            class QueueMaxLength : public Entity
                                            {
                                                public:
                                                    QueueMaxLength();
                                                    ~QueueMaxLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray


                                        class PoliceStatsArray : public Entity
                                        {
                                            public:
                                                PoliceStatsArray();
                                                ~PoliceStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf drop_packets; //type: uint64
                                                YLeaf drop_bytes; //type: uint64
                                                YLeaf conform_packets; //type: uint64
                                                YLeaf conform_bytes; //type: uint64
                                                YLeaf exceed_packets; //type: uint64
                                                YLeaf exceed_bytes; //type: uint64
                                                YLeaf violate_packets; //type: uint64
                                                YLeaf violate_bytes; //type: uint64
                                                YLeaf parent_drop_packets; //type: uint64
                                                YLeaf parent_drop_bytes; //type: uint64
                                                YLeaf conform_rate; //type: uint32
                                                YLeaf exceed_rate; //type: uint32
                                                YLeaf violate_rate; //type: uint32

                                            class ColorClassStats : public Entity
                                            {
                                                public:
                                                    ColorClassStats();
                                                    ~ColorClassStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf conform_class_conform_packets; //type: uint64
                                                    YLeaf conform_class_conform_bytes; //type: uint64
                                                    YLeaf conform_class_conform_rate; //type: uint32
                                                    YLeaf conform_class_exceed_packets; //type: uint64
                                                    YLeaf conform_class_exceed_bytes; //type: uint64
                                                    YLeaf conform_class_exceed_rate; //type: uint32
                                                    YLeaf conform_class_violate_packets; //type: uint64
                                                    YLeaf conform_class_violate_bytes; //type: uint64
                                                    YLeaf conform_class_violate_rate; //type: uint32
                                                    YLeaf exceed_class_exceed_packets; //type: uint64
                                                    YLeaf exceed_class_exceed_bytes; //type: uint64
                                                    YLeaf exceed_class_exceed_rate; //type: uint32
                                                    YLeaf exceed_class_violate_packets; //type: uint64
                                                    YLeaf exceed_class_violate_bytes; //type: uint64
                                                    YLeaf exceed_class_violate_rate; //type: uint32
                                                    YLeaf violate_class_violate_packets; //type: uint64
                                                    YLeaf violate_class_violate_bytes; //type: uint64
                                                    YLeaf violate_class_violate_rate; //type: uint32



                                            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray


                                        class WredStatsArray : public Entity
                                        {
                                            public:
                                                WredStatsArray();
                                                ~WredStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf profile_title; //type: string
                                                YLeaf red_transmit_packets; //type: uint64
                                                YLeaf red_transmit_bytes; //type: uint64
                                                YLeaf random_drop_packets; //type: uint64
                                                YLeaf random_drop_bytes; //type: uint64
                                                YLeaf max_threshold_packets; //type: uint64
                                                YLeaf max_threshold_bytes; //type: uint64
                                                YLeaf red_ecn_marked_packets; //type: uint64
                                                YLeaf red_ecn_marked_bytes; //type: uint64

                                            class RedLabel : public Entity
                                            {
                                                public:
                                                    RedLabel();
                                                    ~RedLabel();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf wred_type; //type: WredEnum
                                                    YLeaf value_; //type: uint8



                                            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats> cac_stats;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat> > class_stat;


                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics> statistics;


                            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output


                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input> input;
                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output> output;


                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId


                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId> > satellite_id;


                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds


                    class Input : public Entity
                    {
                        public:
                            Input();
                            ~Input();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class Statistics : public Entity
                        {
                            public:
                                Statistics();
                                ~Statistics();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf policy_name; //type: string
                                YLeaf state; //type: PolicyStateEnum
                                YLeaf state_description; //type: string
                                YLeaf satid; //type: uint32

                            class ClassStat : public Entity
                            {
                                public:
                                    ClassStat();
                                    ~ClassStat();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf counter_validity_bitmask; //type: uint64
                                    YLeaf class_name; //type: string
                                    YLeaf shared_queue_id; //type: uint32
                                    YLeaf queue_descr; //type: string
                                    YLeaf cac_state; //type: CacStateEnum

                                class GeneralStats : public Entity
                                {
                                    public:
                                        GeneralStats();
                                        ~GeneralStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf transmit_packets; //type: uint64
                                        YLeaf transmit_bytes; //type: uint64
                                        YLeaf total_drop_packets; //type: uint64
                                        YLeaf total_drop_bytes; //type: uint64
                                        YLeaf total_drop_rate; //type: uint32
                                        YLeaf match_data_rate; //type: uint32
                                        YLeaf total_transmit_rate; //type: uint32
                                        YLeaf pre_policy_matched_packets; //type: uint64
                                        YLeaf pre_policy_matched_bytes; //type: uint64



                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::GeneralStats


                                class IphcStats : public Entity
                                {
                                    public:
                                        IphcStats();
                                        ~IphcStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf non_tcp_total_out_packets; //type: uint64
                                        YLeaf non_tcp_total_out_bytes; //type: uint64
                                        YLeaf non_tcp_bytes_saved; //type: uint64
                                        YLeaf non_tcp_compressed_packets_out; //type: uint64
                                        YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                        YLeaf non_tcp_full_header_packets_out; //type: uint64
                                        YLeaf tcp_total_out_packets; //type: uint64
                                        YLeaf tcp_total_out_bytes; //type: uint64
                                        YLeaf tcp_bytes_saved; //type: uint64
                                        YLeaf tcp_compressed_packets_out; //type: uint64
                                        YLeaf tcp_bytes_sent_rate; //type: uint32
                                        YLeaf tcp_full_header_packets_out; //type: uint64



                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::IphcStats


                                class ChildPolicy : public Entity
                                {
                                    public:
                                        ChildPolicy();
                                        ~ChildPolicy();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;





                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::ChildPolicy


                                class CacStats : public Entity
                                {
                                    public:
                                        CacStats();
                                        ~CacStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf drop_rates; //type: uint32
                                        YLeaf admitpackets; //type: uint64
                                        YLeaf admit_bytes; //type: uint64
                                        YLeaf admit_rates; //type: uint32



                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::CacStats


                                class QueueStatsArray : public Entity
                                {
                                    public:
                                        QueueStatsArray();
                                        ~QueueStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf queue_id; //type: uint32
                                        YLeaf tail_drop_packets; //type: uint64
                                        YLeaf tail_drop_bytes; //type: uint64
                                        YLeaf atm_clp0_drop_packets; //type: uint64
                                        YLeaf atm_clp0_drop_bytes; //type: uint64
                                        YLeaf atm_clp1_drop_packets; //type: uint64
                                        YLeaf atm_clp1_drop_bytes; //type: uint64
                                        YLeaf queue_drop_threshold; //type: uint32
                                        YLeaf forced_wred_stats_display; //type: boolean
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32

                                    class QueueInstanceLength : public Entity
                                    {
                                        public:
                                            QueueInstanceLength();
                                            ~QueueInstanceLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                    class QueueAverageLength : public Entity
                                    {
                                        public:
                                            QueueAverageLength();
                                            ~QueueAverageLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                    class QueueMaxLength : public Entity
                                    {
                                        public:
                                            QueueMaxLength();
                                            ~QueueMaxLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray


                                class PoliceStatsArray : public Entity
                                {
                                    public:
                                        PoliceStatsArray();
                                        ~PoliceStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf violate_packets; //type: uint64
                                        YLeaf violate_bytes; //type: uint64
                                        YLeaf parent_drop_packets; //type: uint64
                                        YLeaf parent_drop_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32
                                        YLeaf violate_rate; //type: uint32

                                    class ColorClassStats : public Entity
                                    {
                                        public:
                                            ColorClassStats();
                                            ~ColorClassStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf conform_class_conform_packets; //type: uint64
                                            YLeaf conform_class_conform_bytes; //type: uint64
                                            YLeaf conform_class_conform_rate; //type: uint32
                                            YLeaf conform_class_exceed_packets; //type: uint64
                                            YLeaf conform_class_exceed_bytes; //type: uint64
                                            YLeaf conform_class_exceed_rate; //type: uint32
                                            YLeaf conform_class_violate_packets; //type: uint64
                                            YLeaf conform_class_violate_bytes; //type: uint64
                                            YLeaf conform_class_violate_rate; //type: uint32
                                            YLeaf exceed_class_exceed_packets; //type: uint64
                                            YLeaf exceed_class_exceed_bytes; //type: uint64
                                            YLeaf exceed_class_exceed_rate; //type: uint32
                                            YLeaf exceed_class_violate_packets; //type: uint64
                                            YLeaf exceed_class_violate_bytes; //type: uint64
                                            YLeaf exceed_class_violate_rate; //type: uint32
                                            YLeaf violate_class_violate_packets; //type: uint64
                                            YLeaf violate_class_violate_bytes; //type: uint64
                                            YLeaf violate_class_violate_rate; //type: uint32



                                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray


                                class WredStatsArray : public Entity
                                {
                                    public:
                                        WredStatsArray();
                                        ~WredStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf profile_title; //type: string
                                        YLeaf red_transmit_packets; //type: uint64
                                        YLeaf red_transmit_bytes; //type: uint64
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf red_ecn_marked_packets; //type: uint64
                                        YLeaf red_ecn_marked_bytes; //type: uint64

                                    class RedLabel : public Entity
                                    {
                                        public:
                                            RedLabel();
                                            ~RedLabel();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf wred_type; //type: WredEnum
                                            YLeaf value_; //type: uint8



                                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::CacStats> cac_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat> > class_stat;


                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics> statistics;


                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input


                    class Output : public Entity
                    {
                        public:
                            Output();
                            ~Output();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class Statistics : public Entity
                        {
                            public:
                                Statistics();
                                ~Statistics();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf policy_name; //type: string
                                YLeaf state; //type: PolicyStateEnum
                                YLeaf state_description; //type: string
                                YLeaf satid; //type: uint32

                            class ClassStat : public Entity
                            {
                                public:
                                    ClassStat();
                                    ~ClassStat();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf counter_validity_bitmask; //type: uint64
                                    YLeaf class_name; //type: string
                                    YLeaf shared_queue_id; //type: uint32
                                    YLeaf queue_descr; //type: string
                                    YLeaf cac_state; //type: CacStateEnum

                                class GeneralStats : public Entity
                                {
                                    public:
                                        GeneralStats();
                                        ~GeneralStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf transmit_packets; //type: uint64
                                        YLeaf transmit_bytes; //type: uint64
                                        YLeaf total_drop_packets; //type: uint64
                                        YLeaf total_drop_bytes; //type: uint64
                                        YLeaf total_drop_rate; //type: uint32
                                        YLeaf match_data_rate; //type: uint32
                                        YLeaf total_transmit_rate; //type: uint32
                                        YLeaf pre_policy_matched_packets; //type: uint64
                                        YLeaf pre_policy_matched_bytes; //type: uint64



                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::GeneralStats


                                class IphcStats : public Entity
                                {
                                    public:
                                        IphcStats();
                                        ~IphcStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf non_tcp_total_out_packets; //type: uint64
                                        YLeaf non_tcp_total_out_bytes; //type: uint64
                                        YLeaf non_tcp_bytes_saved; //type: uint64
                                        YLeaf non_tcp_compressed_packets_out; //type: uint64
                                        YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                        YLeaf non_tcp_full_header_packets_out; //type: uint64
                                        YLeaf tcp_total_out_packets; //type: uint64
                                        YLeaf tcp_total_out_bytes; //type: uint64
                                        YLeaf tcp_bytes_saved; //type: uint64
                                        YLeaf tcp_compressed_packets_out; //type: uint64
                                        YLeaf tcp_bytes_sent_rate; //type: uint32
                                        YLeaf tcp_full_header_packets_out; //type: uint64



                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::IphcStats


                                class ChildPolicy : public Entity
                                {
                                    public:
                                        ChildPolicy();
                                        ~ChildPolicy();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;





                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::ChildPolicy


                                class CacStats : public Entity
                                {
                                    public:
                                        CacStats();
                                        ~CacStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf drop_rates; //type: uint32
                                        YLeaf admitpackets; //type: uint64
                                        YLeaf admit_bytes; //type: uint64
                                        YLeaf admit_rates; //type: uint32



                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::CacStats


                                class QueueStatsArray : public Entity
                                {
                                    public:
                                        QueueStatsArray();
                                        ~QueueStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf queue_id; //type: uint32
                                        YLeaf tail_drop_packets; //type: uint64
                                        YLeaf tail_drop_bytes; //type: uint64
                                        YLeaf atm_clp0_drop_packets; //type: uint64
                                        YLeaf atm_clp0_drop_bytes; //type: uint64
                                        YLeaf atm_clp1_drop_packets; //type: uint64
                                        YLeaf atm_clp1_drop_bytes; //type: uint64
                                        YLeaf queue_drop_threshold; //type: uint32
                                        YLeaf forced_wred_stats_display; //type: boolean
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32

                                    class QueueInstanceLength : public Entity
                                    {
                                        public:
                                            QueueInstanceLength();
                                            ~QueueInstanceLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                    class QueueAverageLength : public Entity
                                    {
                                        public:
                                            QueueAverageLength();
                                            ~QueueAverageLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                    class QueueMaxLength : public Entity
                                    {
                                        public:
                                            QueueMaxLength();
                                            ~QueueMaxLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray


                                class PoliceStatsArray : public Entity
                                {
                                    public:
                                        PoliceStatsArray();
                                        ~PoliceStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf violate_packets; //type: uint64
                                        YLeaf violate_bytes; //type: uint64
                                        YLeaf parent_drop_packets; //type: uint64
                                        YLeaf parent_drop_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32
                                        YLeaf violate_rate; //type: uint32

                                    class ColorClassStats : public Entity
                                    {
                                        public:
                                            ColorClassStats();
                                            ~ColorClassStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf conform_class_conform_packets; //type: uint64
                                            YLeaf conform_class_conform_bytes; //type: uint64
                                            YLeaf conform_class_conform_rate; //type: uint32
                                            YLeaf conform_class_exceed_packets; //type: uint64
                                            YLeaf conform_class_exceed_bytes; //type: uint64
                                            YLeaf conform_class_exceed_rate; //type: uint32
                                            YLeaf conform_class_violate_packets; //type: uint64
                                            YLeaf conform_class_violate_bytes; //type: uint64
                                            YLeaf conform_class_violate_rate; //type: uint32
                                            YLeaf exceed_class_exceed_packets; //type: uint64
                                            YLeaf exceed_class_exceed_bytes; //type: uint64
                                            YLeaf exceed_class_exceed_rate; //type: uint32
                                            YLeaf exceed_class_violate_packets; //type: uint64
                                            YLeaf exceed_class_violate_bytes; //type: uint64
                                            YLeaf exceed_class_violate_rate; //type: uint32
                                            YLeaf violate_class_violate_packets; //type: uint64
                                            YLeaf violate_class_violate_bytes; //type: uint64
                                            YLeaf violate_class_violate_rate; //type: uint32



                                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray


                                class WredStatsArray : public Entity
                                {
                                    public:
                                        WredStatsArray();
                                        ~WredStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf profile_title; //type: string
                                        YLeaf red_transmit_packets; //type: uint64
                                        YLeaf red_transmit_bytes; //type: uint64
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf red_ecn_marked_packets; //type: uint64
                                        YLeaf red_ecn_marked_bytes; //type: uint64

                                    class RedLabel : public Entity
                                    {
                                        public:
                                            RedLabel();
                                            ~RedLabel();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf wred_type; //type: WredEnum
                                            YLeaf value_; //type: uint8



                                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::CacStats> cac_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat> > class_stat;


                        }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics> statistics;


                    }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output


                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Input> input;
                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::Output> output;
                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds> satellite_ids;


                }; // Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface


                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces::MemberInterface> > member_interface;


            }; // Qos::NvInterfaceTable::Interface::MemberInterfaces


            class SatelliteIds : public Entity
            {
                public:
                    SatelliteIds();
                    ~SatelliteIds();

                    bool has_data() const override;
                    bool has_operation() const override;
                    EntityPath get_entity_path(Entity* parent) const override;
                    std::string get_segment_path() const override;
                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                    void set_value(const std::string & value_path, std::string value) override;
                    std::map<std::string, Entity*> & get_children() override;



                class SatelliteId : public Entity
                {
                    public:
                        SatelliteId();
                        ~SatelliteId();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;


                        YLeaf nv_satellite_id; //type: int32

                    class Input : public Entity
                    {
                        public:
                            Input();
                            ~Input();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class Statistics : public Entity
                        {
                            public:
                                Statistics();
                                ~Statistics();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf policy_name; //type: string
                                YLeaf state; //type: PolicyStateEnum
                                YLeaf state_description; //type: string
                                YLeaf satid; //type: uint32

                            class ClassStat : public Entity
                            {
                                public:
                                    ClassStat();
                                    ~ClassStat();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf counter_validity_bitmask; //type: uint64
                                    YLeaf class_name; //type: string
                                    YLeaf shared_queue_id; //type: uint32
                                    YLeaf queue_descr; //type: string
                                    YLeaf cac_state; //type: CacStateEnum

                                class GeneralStats : public Entity
                                {
                                    public:
                                        GeneralStats();
                                        ~GeneralStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf transmit_packets; //type: uint64
                                        YLeaf transmit_bytes; //type: uint64
                                        YLeaf total_drop_packets; //type: uint64
                                        YLeaf total_drop_bytes; //type: uint64
                                        YLeaf total_drop_rate; //type: uint32
                                        YLeaf match_data_rate; //type: uint32
                                        YLeaf total_transmit_rate; //type: uint32
                                        YLeaf pre_policy_matched_packets; //type: uint64
                                        YLeaf pre_policy_matched_bytes; //type: uint64



                                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats


                                class IphcStats : public Entity
                                {
                                    public:
                                        IphcStats();
                                        ~IphcStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf non_tcp_total_out_packets; //type: uint64
                                        YLeaf non_tcp_total_out_bytes; //type: uint64
                                        YLeaf non_tcp_bytes_saved; //type: uint64
                                        YLeaf non_tcp_compressed_packets_out; //type: uint64
                                        YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                        YLeaf non_tcp_full_header_packets_out; //type: uint64
                                        YLeaf tcp_total_out_packets; //type: uint64
                                        YLeaf tcp_total_out_bytes; //type: uint64
                                        YLeaf tcp_bytes_saved; //type: uint64
                                        YLeaf tcp_compressed_packets_out; //type: uint64
                                        YLeaf tcp_bytes_sent_rate; //type: uint32
                                        YLeaf tcp_full_header_packets_out; //type: uint64



                                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats


                                class ChildPolicy : public Entity
                                {
                                    public:
                                        ChildPolicy();
                                        ~ChildPolicy();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;





                                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy


                                class CacStats : public Entity
                                {
                                    public:
                                        CacStats();
                                        ~CacStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf drop_rates; //type: uint32
                                        YLeaf admitpackets; //type: uint64
                                        YLeaf admit_bytes; //type: uint64
                                        YLeaf admit_rates; //type: uint32



                                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats


                                class QueueStatsArray : public Entity
                                {
                                    public:
                                        QueueStatsArray();
                                        ~QueueStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf queue_id; //type: uint32
                                        YLeaf tail_drop_packets; //type: uint64
                                        YLeaf tail_drop_bytes; //type: uint64
                                        YLeaf atm_clp0_drop_packets; //type: uint64
                                        YLeaf atm_clp0_drop_bytes; //type: uint64
                                        YLeaf atm_clp1_drop_packets; //type: uint64
                                        YLeaf atm_clp1_drop_bytes; //type: uint64
                                        YLeaf queue_drop_threshold; //type: uint32
                                        YLeaf forced_wred_stats_display; //type: boolean
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32

                                    class QueueInstanceLength : public Entity
                                    {
                                        public:
                                            QueueInstanceLength();
                                            ~QueueInstanceLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                    class QueueAverageLength : public Entity
                                    {
                                        public:
                                            QueueAverageLength();
                                            ~QueueAverageLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                    class QueueMaxLength : public Entity
                                    {
                                        public:
                                            QueueMaxLength();
                                            ~QueueMaxLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray


                                class PoliceStatsArray : public Entity
                                {
                                    public:
                                        PoliceStatsArray();
                                        ~PoliceStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf violate_packets; //type: uint64
                                        YLeaf violate_bytes; //type: uint64
                                        YLeaf parent_drop_packets; //type: uint64
                                        YLeaf parent_drop_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32
                                        YLeaf violate_rate; //type: uint32

                                    class ColorClassStats : public Entity
                                    {
                                        public:
                                            ColorClassStats();
                                            ~ColorClassStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf conform_class_conform_packets; //type: uint64
                                            YLeaf conform_class_conform_bytes; //type: uint64
                                            YLeaf conform_class_conform_rate; //type: uint32
                                            YLeaf conform_class_exceed_packets; //type: uint64
                                            YLeaf conform_class_exceed_bytes; //type: uint64
                                            YLeaf conform_class_exceed_rate; //type: uint32
                                            YLeaf conform_class_violate_packets; //type: uint64
                                            YLeaf conform_class_violate_bytes; //type: uint64
                                            YLeaf conform_class_violate_rate; //type: uint32
                                            YLeaf exceed_class_exceed_packets; //type: uint64
                                            YLeaf exceed_class_exceed_bytes; //type: uint64
                                            YLeaf exceed_class_exceed_rate; //type: uint32
                                            YLeaf exceed_class_violate_packets; //type: uint64
                                            YLeaf exceed_class_violate_bytes; //type: uint64
                                            YLeaf exceed_class_violate_rate; //type: uint32
                                            YLeaf violate_class_violate_packets; //type: uint64
                                            YLeaf violate_class_violate_bytes; //type: uint64
                                            YLeaf violate_class_violate_rate; //type: uint32



                                    }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray


                                class WredStatsArray : public Entity
                                {
                                    public:
                                        WredStatsArray();
                                        ~WredStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf profile_title; //type: string
                                        YLeaf red_transmit_packets; //type: uint64
                                        YLeaf red_transmit_bytes; //type: uint64
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf red_ecn_marked_packets; //type: uint64
                                        YLeaf red_ecn_marked_bytes; //type: uint64

                                    class RedLabel : public Entity
                                    {
                                        public:
                                            RedLabel();
                                            ~RedLabel();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf wred_type; //type: WredEnum
                                            YLeaf value_; //type: uint8



                                    }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats> cac_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                            }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat> > class_stat;


                        }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics> statistics;


                    }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input


                    class Output : public Entity
                    {
                        public:
                            Output();
                            ~Output();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class Statistics : public Entity
                        {
                            public:
                                Statistics();
                                ~Statistics();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf policy_name; //type: string
                                YLeaf state; //type: PolicyStateEnum
                                YLeaf state_description; //type: string
                                YLeaf satid; //type: uint32

                            class ClassStat : public Entity
                            {
                                public:
                                    ClassStat();
                                    ~ClassStat();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf counter_validity_bitmask; //type: uint64
                                    YLeaf class_name; //type: string
                                    YLeaf shared_queue_id; //type: uint32
                                    YLeaf queue_descr; //type: string
                                    YLeaf cac_state; //type: CacStateEnum

                                class GeneralStats : public Entity
                                {
                                    public:
                                        GeneralStats();
                                        ~GeneralStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf transmit_packets; //type: uint64
                                        YLeaf transmit_bytes; //type: uint64
                                        YLeaf total_drop_packets; //type: uint64
                                        YLeaf total_drop_bytes; //type: uint64
                                        YLeaf total_drop_rate; //type: uint32
                                        YLeaf match_data_rate; //type: uint32
                                        YLeaf total_transmit_rate; //type: uint32
                                        YLeaf pre_policy_matched_packets; //type: uint64
                                        YLeaf pre_policy_matched_bytes; //type: uint64



                                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats


                                class IphcStats : public Entity
                                {
                                    public:
                                        IphcStats();
                                        ~IphcStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf non_tcp_total_out_packets; //type: uint64
                                        YLeaf non_tcp_total_out_bytes; //type: uint64
                                        YLeaf non_tcp_bytes_saved; //type: uint64
                                        YLeaf non_tcp_compressed_packets_out; //type: uint64
                                        YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                        YLeaf non_tcp_full_header_packets_out; //type: uint64
                                        YLeaf tcp_total_out_packets; //type: uint64
                                        YLeaf tcp_total_out_bytes; //type: uint64
                                        YLeaf tcp_bytes_saved; //type: uint64
                                        YLeaf tcp_compressed_packets_out; //type: uint64
                                        YLeaf tcp_bytes_sent_rate; //type: uint32
                                        YLeaf tcp_full_header_packets_out; //type: uint64



                                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats


                                class ChildPolicy : public Entity
                                {
                                    public:
                                        ChildPolicy();
                                        ~ChildPolicy();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;





                                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy


                                class CacStats : public Entity
                                {
                                    public:
                                        CacStats();
                                        ~CacStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf drop_rates; //type: uint32
                                        YLeaf admitpackets; //type: uint64
                                        YLeaf admit_bytes; //type: uint64
                                        YLeaf admit_rates; //type: uint32



                                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats


                                class QueueStatsArray : public Entity
                                {
                                    public:
                                        QueueStatsArray();
                                        ~QueueStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf queue_id; //type: uint32
                                        YLeaf tail_drop_packets; //type: uint64
                                        YLeaf tail_drop_bytes; //type: uint64
                                        YLeaf atm_clp0_drop_packets; //type: uint64
                                        YLeaf atm_clp0_drop_bytes; //type: uint64
                                        YLeaf atm_clp1_drop_packets; //type: uint64
                                        YLeaf atm_clp1_drop_bytes; //type: uint64
                                        YLeaf queue_drop_threshold; //type: uint32
                                        YLeaf forced_wred_stats_display; //type: boolean
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32

                                    class QueueInstanceLength : public Entity
                                    {
                                        public:
                                            QueueInstanceLength();
                                            ~QueueInstanceLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                    class QueueAverageLength : public Entity
                                    {
                                        public:
                                            QueueAverageLength();
                                            ~QueueAverageLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                    class QueueMaxLength : public Entity
                                    {
                                        public:
                                            QueueMaxLength();
                                            ~QueueMaxLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray


                                class PoliceStatsArray : public Entity
                                {
                                    public:
                                        PoliceStatsArray();
                                        ~PoliceStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf violate_packets; //type: uint64
                                        YLeaf violate_bytes; //type: uint64
                                        YLeaf parent_drop_packets; //type: uint64
                                        YLeaf parent_drop_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32
                                        YLeaf violate_rate; //type: uint32

                                    class ColorClassStats : public Entity
                                    {
                                        public:
                                            ColorClassStats();
                                            ~ColorClassStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf conform_class_conform_packets; //type: uint64
                                            YLeaf conform_class_conform_bytes; //type: uint64
                                            YLeaf conform_class_conform_rate; //type: uint32
                                            YLeaf conform_class_exceed_packets; //type: uint64
                                            YLeaf conform_class_exceed_bytes; //type: uint64
                                            YLeaf conform_class_exceed_rate; //type: uint32
                                            YLeaf conform_class_violate_packets; //type: uint64
                                            YLeaf conform_class_violate_bytes; //type: uint64
                                            YLeaf conform_class_violate_rate; //type: uint32
                                            YLeaf exceed_class_exceed_packets; //type: uint64
                                            YLeaf exceed_class_exceed_bytes; //type: uint64
                                            YLeaf exceed_class_exceed_rate; //type: uint32
                                            YLeaf exceed_class_violate_packets; //type: uint64
                                            YLeaf exceed_class_violate_bytes; //type: uint64
                                            YLeaf exceed_class_violate_rate; //type: uint32
                                            YLeaf violate_class_violate_packets; //type: uint64
                                            YLeaf violate_class_violate_bytes; //type: uint64
                                            YLeaf violate_class_violate_rate; //type: uint32



                                    }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray


                                class WredStatsArray : public Entity
                                {
                                    public:
                                        WredStatsArray();
                                        ~WredStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf profile_title; //type: string
                                        YLeaf red_transmit_packets; //type: uint64
                                        YLeaf red_transmit_bytes; //type: uint64
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf red_ecn_marked_packets; //type: uint64
                                        YLeaf red_ecn_marked_bytes; //type: uint64

                                    class RedLabel : public Entity
                                    {
                                        public:
                                            RedLabel();
                                            ~RedLabel();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf wred_type; //type: WredEnum
                                            YLeaf value_; //type: uint8



                                    }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats> cac_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                            }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat> > class_stat;


                        }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics> statistics;


                    }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output


                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Input> input;
                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId::Output> output;


                }; // Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId


                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds::SatelliteId> > satellite_id;


            }; // Qos::NvInterfaceTable::Interface::SatelliteIds


            class Input : public Entity
            {
                public:
                    Input();
                    ~Input();

                    bool has_data() const override;
                    bool has_operation() const override;
                    EntityPath get_entity_path(Entity* parent) const override;
                    std::string get_segment_path() const override;
                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                    void set_value(const std::string & value_path, std::string value) override;
                    std::map<std::string, Entity*> & get_children() override;



                class Statistics : public Entity
                {
                    public:
                        Statistics();
                        ~Statistics();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;


                        YLeaf policy_name; //type: string
                        YLeaf state; //type: PolicyStateEnum
                        YLeaf state_description; //type: string
                        YLeaf satid; //type: uint32

                    class ClassStat : public Entity
                    {
                        public:
                            ClassStat();
                            ~ClassStat();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;


                            YLeaf counter_validity_bitmask; //type: uint64
                            YLeaf class_name; //type: string
                            YLeaf shared_queue_id; //type: uint32
                            YLeaf queue_descr; //type: string
                            YLeaf cac_state; //type: CacStateEnum

                        class GeneralStats : public Entity
                        {
                            public:
                                GeneralStats();
                                ~GeneralStats();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf transmit_packets; //type: uint64
                                YLeaf transmit_bytes; //type: uint64
                                YLeaf total_drop_packets; //type: uint64
                                YLeaf total_drop_bytes; //type: uint64
                                YLeaf total_drop_rate; //type: uint32
                                YLeaf match_data_rate; //type: uint32
                                YLeaf total_transmit_rate; //type: uint32
                                YLeaf pre_policy_matched_packets; //type: uint64
                                YLeaf pre_policy_matched_bytes; //type: uint64



                        }; // Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::GeneralStats


                        class IphcStats : public Entity
                        {
                            public:
                                IphcStats();
                                ~IphcStats();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf non_tcp_total_out_packets; //type: uint64
                                YLeaf non_tcp_total_out_bytes; //type: uint64
                                YLeaf non_tcp_bytes_saved; //type: uint64
                                YLeaf non_tcp_compressed_packets_out; //type: uint64
                                YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                YLeaf non_tcp_full_header_packets_out; //type: uint64
                                YLeaf tcp_total_out_packets; //type: uint64
                                YLeaf tcp_total_out_bytes; //type: uint64
                                YLeaf tcp_bytes_saved; //type: uint64
                                YLeaf tcp_compressed_packets_out; //type: uint64
                                YLeaf tcp_bytes_sent_rate; //type: uint32
                                YLeaf tcp_full_header_packets_out; //type: uint64



                        }; // Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::IphcStats


                        class ChildPolicy : public Entity
                        {
                            public:
                                ChildPolicy();
                                ~ChildPolicy();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;





                        }; // Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::ChildPolicy


                        class CacStats : public Entity
                        {
                            public:
                                CacStats();
                                ~CacStats();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf drop_packets; //type: uint64
                                YLeaf drop_bytes; //type: uint64
                                YLeaf drop_rates; //type: uint32
                                YLeaf admitpackets; //type: uint64
                                YLeaf admit_bytes; //type: uint64
                                YLeaf admit_rates; //type: uint32



                        }; // Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::CacStats


                        class QueueStatsArray : public Entity
                        {
                            public:
                                QueueStatsArray();
                                ~QueueStatsArray();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf queue_id; //type: uint32
                                YLeaf tail_drop_packets; //type: uint64
                                YLeaf tail_drop_bytes; //type: uint64
                                YLeaf atm_clp0_drop_packets; //type: uint64
                                YLeaf atm_clp0_drop_bytes; //type: uint64
                                YLeaf atm_clp1_drop_packets; //type: uint64
                                YLeaf atm_clp1_drop_bytes; //type: uint64
                                YLeaf queue_drop_threshold; //type: uint32
                                YLeaf forced_wred_stats_display; //type: boolean
                                YLeaf random_drop_packets; //type: uint64
                                YLeaf random_drop_bytes; //type: uint64
                                YLeaf max_threshold_packets; //type: uint64
                                YLeaf max_threshold_bytes; //type: uint64
                                YLeaf conform_packets; //type: uint64
                                YLeaf conform_bytes; //type: uint64
                                YLeaf exceed_packets; //type: uint64
                                YLeaf exceed_bytes; //type: uint64
                                YLeaf conform_rate; //type: uint32
                                YLeaf exceed_rate; //type: uint32

                            class QueueInstanceLength : public Entity
                            {
                                public:
                                    QueueInstanceLength();
                                    ~QueueInstanceLength();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf value_; //type: uint32
                                    YLeaf unit; //type: PolicyParamUnitEnum



                            }; // Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                            class QueueAverageLength : public Entity
                            {
                                public:
                                    QueueAverageLength();
                                    ~QueueAverageLength();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf value_; //type: uint32
                                    YLeaf unit; //type: PolicyParamUnitEnum



                            }; // Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                            class QueueMaxLength : public Entity
                            {
                                public:
                                    QueueMaxLength();
                                    ~QueueMaxLength();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf value_; //type: uint32
                                    YLeaf unit; //type: PolicyParamUnitEnum



                            }; // Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                        }; // Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray


                        class PoliceStatsArray : public Entity
                        {
                            public:
                                PoliceStatsArray();
                                ~PoliceStatsArray();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf drop_packets; //type: uint64
                                YLeaf drop_bytes; //type: uint64
                                YLeaf conform_packets; //type: uint64
                                YLeaf conform_bytes; //type: uint64
                                YLeaf exceed_packets; //type: uint64
                                YLeaf exceed_bytes; //type: uint64
                                YLeaf violate_packets; //type: uint64
                                YLeaf violate_bytes; //type: uint64
                                YLeaf parent_drop_packets; //type: uint64
                                YLeaf parent_drop_bytes; //type: uint64
                                YLeaf conform_rate; //type: uint32
                                YLeaf exceed_rate; //type: uint32
                                YLeaf violate_rate; //type: uint32

                            class ColorClassStats : public Entity
                            {
                                public:
                                    ColorClassStats();
                                    ~ColorClassStats();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf conform_class_conform_packets; //type: uint64
                                    YLeaf conform_class_conform_bytes; //type: uint64
                                    YLeaf conform_class_conform_rate; //type: uint32
                                    YLeaf conform_class_exceed_packets; //type: uint64
                                    YLeaf conform_class_exceed_bytes; //type: uint64
                                    YLeaf conform_class_exceed_rate; //type: uint32
                                    YLeaf conform_class_violate_packets; //type: uint64
                                    YLeaf conform_class_violate_bytes; //type: uint64
                                    YLeaf conform_class_violate_rate; //type: uint32
                                    YLeaf exceed_class_exceed_packets; //type: uint64
                                    YLeaf exceed_class_exceed_bytes; //type: uint64
                                    YLeaf exceed_class_exceed_rate; //type: uint32
                                    YLeaf exceed_class_violate_packets; //type: uint64
                                    YLeaf exceed_class_violate_bytes; //type: uint64
                                    YLeaf exceed_class_violate_rate; //type: uint32
                                    YLeaf violate_class_violate_packets; //type: uint64
                                    YLeaf violate_class_violate_bytes; //type: uint64
                                    YLeaf violate_class_violate_rate; //type: uint32



                            }; // Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                        }; // Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::PoliceStatsArray


                        class WredStatsArray : public Entity
                        {
                            public:
                                WredStatsArray();
                                ~WredStatsArray();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf profile_title; //type: string
                                YLeaf red_transmit_packets; //type: uint64
                                YLeaf red_transmit_bytes; //type: uint64
                                YLeaf random_drop_packets; //type: uint64
                                YLeaf random_drop_bytes; //type: uint64
                                YLeaf max_threshold_packets; //type: uint64
                                YLeaf max_threshold_bytes; //type: uint64
                                YLeaf red_ecn_marked_packets; //type: uint64
                                YLeaf red_ecn_marked_bytes; //type: uint64

                            class RedLabel : public Entity
                            {
                                public:
                                    RedLabel();
                                    ~RedLabel();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf wred_type; //type: WredEnum
                                    YLeaf value_; //type: uint8



                            }; // Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                        }; // Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::WredStatsArray


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::CacStats> cac_stats;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::GeneralStats> general_stats;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                    }; // Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat


                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input::Statistics::ClassStat> > class_stat;


                }; // Qos::NvInterfaceTable::Interface::Input::Statistics


                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input::Statistics> statistics;


            }; // Qos::NvInterfaceTable::Interface::Input


            class Output : public Entity
            {
                public:
                    Output();
                    ~Output();

                    bool has_data() const override;
                    bool has_operation() const override;
                    EntityPath get_entity_path(Entity* parent) const override;
                    std::string get_segment_path() const override;
                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                    void set_value(const std::string & value_path, std::string value) override;
                    std::map<std::string, Entity*> & get_children() override;



                class Statistics : public Entity
                {
                    public:
                        Statistics();
                        ~Statistics();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;


                        YLeaf policy_name; //type: string
                        YLeaf state; //type: PolicyStateEnum
                        YLeaf state_description; //type: string
                        YLeaf satid; //type: uint32

                    class ClassStat : public Entity
                    {
                        public:
                            ClassStat();
                            ~ClassStat();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;


                            YLeaf counter_validity_bitmask; //type: uint64
                            YLeaf class_name; //type: string
                            YLeaf shared_queue_id; //type: uint32
                            YLeaf queue_descr; //type: string
                            YLeaf cac_state; //type: CacStateEnum

                        class GeneralStats : public Entity
                        {
                            public:
                                GeneralStats();
                                ~GeneralStats();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf transmit_packets; //type: uint64
                                YLeaf transmit_bytes; //type: uint64
                                YLeaf total_drop_packets; //type: uint64
                                YLeaf total_drop_bytes; //type: uint64
                                YLeaf total_drop_rate; //type: uint32
                                YLeaf match_data_rate; //type: uint32
                                YLeaf total_transmit_rate; //type: uint32
                                YLeaf pre_policy_matched_packets; //type: uint64
                                YLeaf pre_policy_matched_bytes; //type: uint64



                        }; // Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::GeneralStats


                        class IphcStats : public Entity
                        {
                            public:
                                IphcStats();
                                ~IphcStats();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf non_tcp_total_out_packets; //type: uint64
                                YLeaf non_tcp_total_out_bytes; //type: uint64
                                YLeaf non_tcp_bytes_saved; //type: uint64
                                YLeaf non_tcp_compressed_packets_out; //type: uint64
                                YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                YLeaf non_tcp_full_header_packets_out; //type: uint64
                                YLeaf tcp_total_out_packets; //type: uint64
                                YLeaf tcp_total_out_bytes; //type: uint64
                                YLeaf tcp_bytes_saved; //type: uint64
                                YLeaf tcp_compressed_packets_out; //type: uint64
                                YLeaf tcp_bytes_sent_rate; //type: uint32
                                YLeaf tcp_full_header_packets_out; //type: uint64



                        }; // Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::IphcStats


                        class ChildPolicy : public Entity
                        {
                            public:
                                ChildPolicy();
                                ~ChildPolicy();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;





                        }; // Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::ChildPolicy


                        class CacStats : public Entity
                        {
                            public:
                                CacStats();
                                ~CacStats();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf drop_packets; //type: uint64
                                YLeaf drop_bytes; //type: uint64
                                YLeaf drop_rates; //type: uint32
                                YLeaf admitpackets; //type: uint64
                                YLeaf admit_bytes; //type: uint64
                                YLeaf admit_rates; //type: uint32



                        }; // Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::CacStats


                        class QueueStatsArray : public Entity
                        {
                            public:
                                QueueStatsArray();
                                ~QueueStatsArray();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf queue_id; //type: uint32
                                YLeaf tail_drop_packets; //type: uint64
                                YLeaf tail_drop_bytes; //type: uint64
                                YLeaf atm_clp0_drop_packets; //type: uint64
                                YLeaf atm_clp0_drop_bytes; //type: uint64
                                YLeaf atm_clp1_drop_packets; //type: uint64
                                YLeaf atm_clp1_drop_bytes; //type: uint64
                                YLeaf queue_drop_threshold; //type: uint32
                                YLeaf forced_wred_stats_display; //type: boolean
                                YLeaf random_drop_packets; //type: uint64
                                YLeaf random_drop_bytes; //type: uint64
                                YLeaf max_threshold_packets; //type: uint64
                                YLeaf max_threshold_bytes; //type: uint64
                                YLeaf conform_packets; //type: uint64
                                YLeaf conform_bytes; //type: uint64
                                YLeaf exceed_packets; //type: uint64
                                YLeaf exceed_bytes; //type: uint64
                                YLeaf conform_rate; //type: uint32
                                YLeaf exceed_rate; //type: uint32

                            class QueueInstanceLength : public Entity
                            {
                                public:
                                    QueueInstanceLength();
                                    ~QueueInstanceLength();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf value_; //type: uint32
                                    YLeaf unit; //type: PolicyParamUnitEnum



                            }; // Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                            class QueueAverageLength : public Entity
                            {
                                public:
                                    QueueAverageLength();
                                    ~QueueAverageLength();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf value_; //type: uint32
                                    YLeaf unit; //type: PolicyParamUnitEnum



                            }; // Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                            class QueueMaxLength : public Entity
                            {
                                public:
                                    QueueMaxLength();
                                    ~QueueMaxLength();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf value_; //type: uint32
                                    YLeaf unit; //type: PolicyParamUnitEnum



                            }; // Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                        }; // Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray


                        class PoliceStatsArray : public Entity
                        {
                            public:
                                PoliceStatsArray();
                                ~PoliceStatsArray();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf drop_packets; //type: uint64
                                YLeaf drop_bytes; //type: uint64
                                YLeaf conform_packets; //type: uint64
                                YLeaf conform_bytes; //type: uint64
                                YLeaf exceed_packets; //type: uint64
                                YLeaf exceed_bytes; //type: uint64
                                YLeaf violate_packets; //type: uint64
                                YLeaf violate_bytes; //type: uint64
                                YLeaf parent_drop_packets; //type: uint64
                                YLeaf parent_drop_bytes; //type: uint64
                                YLeaf conform_rate; //type: uint32
                                YLeaf exceed_rate; //type: uint32
                                YLeaf violate_rate; //type: uint32

                            class ColorClassStats : public Entity
                            {
                                public:
                                    ColorClassStats();
                                    ~ColorClassStats();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf conform_class_conform_packets; //type: uint64
                                    YLeaf conform_class_conform_bytes; //type: uint64
                                    YLeaf conform_class_conform_rate; //type: uint32
                                    YLeaf conform_class_exceed_packets; //type: uint64
                                    YLeaf conform_class_exceed_bytes; //type: uint64
                                    YLeaf conform_class_exceed_rate; //type: uint32
                                    YLeaf conform_class_violate_packets; //type: uint64
                                    YLeaf conform_class_violate_bytes; //type: uint64
                                    YLeaf conform_class_violate_rate; //type: uint32
                                    YLeaf exceed_class_exceed_packets; //type: uint64
                                    YLeaf exceed_class_exceed_bytes; //type: uint64
                                    YLeaf exceed_class_exceed_rate; //type: uint32
                                    YLeaf exceed_class_violate_packets; //type: uint64
                                    YLeaf exceed_class_violate_bytes; //type: uint64
                                    YLeaf exceed_class_violate_rate; //type: uint32
                                    YLeaf violate_class_violate_packets; //type: uint64
                                    YLeaf violate_class_violate_bytes; //type: uint64
                                    YLeaf violate_class_violate_rate; //type: uint32



                            }; // Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                        }; // Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::PoliceStatsArray


                        class WredStatsArray : public Entity
                        {
                            public:
                                WredStatsArray();
                                ~WredStatsArray();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf profile_title; //type: string
                                YLeaf red_transmit_packets; //type: uint64
                                YLeaf red_transmit_bytes; //type: uint64
                                YLeaf random_drop_packets; //type: uint64
                                YLeaf random_drop_bytes; //type: uint64
                                YLeaf max_threshold_packets; //type: uint64
                                YLeaf max_threshold_bytes; //type: uint64
                                YLeaf red_ecn_marked_packets; //type: uint64
                                YLeaf red_ecn_marked_bytes; //type: uint64

                            class RedLabel : public Entity
                            {
                                public:
                                    RedLabel();
                                    ~RedLabel();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf wred_type; //type: WredEnum
                                    YLeaf value_; //type: uint8



                            }; // Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                        }; // Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::WredStatsArray


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::CacStats> cac_stats;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::GeneralStats> general_stats;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                    }; // Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat


                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output::Statistics::ClassStat> > class_stat;


                }; // Qos::NvInterfaceTable::Interface::Output::Statistics


                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output::Statistics> statistics;


            }; // Qos::NvInterfaceTable::Interface::Output


                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Input> input;
                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::MemberInterfaces> member_interfaces;
                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Nodes> nodes;
                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::Output> output;
                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface::SatelliteIds> satellite_ids;


        }; // Qos::NvInterfaceTable::Interface


            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable::Interface> > interface;


    }; // Qos::NvInterfaceTable


    class NvSatellite : public Entity
    {
        public:
            NvSatellite();
            ~NvSatellite();

            bool has_data() const override;
            bool has_operation() const override;
            EntityPath get_entity_path(Entity* parent) const override;
            std::string get_segment_path() const override;
            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
            void set_value(const std::string & value_path, std::string value) override;
            std::map<std::string, Entity*> & get_children() override;



        class NvSatelliteStatistics : public Entity
        {
            public:
                NvSatelliteStatistics();
                ~NvSatelliteStatistics();

                bool has_data() const override;
                bool has_operation() const override;
                EntityPath get_entity_path(Entity* parent) const override;
                std::string get_segment_path() const override;
                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                void set_value(const std::string & value_path, std::string value) override;
                std::map<std::string, Entity*> & get_children() override;



            class NvSatelliteIds : public Entity
            {
                public:
                    NvSatelliteIds();
                    ~NvSatelliteIds();

                    bool has_data() const override;
                    bool has_operation() const override;
                    EntityPath get_entity_path(Entity* parent) const override;
                    std::string get_segment_path() const override;
                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                    void set_value(const std::string & value_path, std::string value) override;
                    std::map<std::string, Entity*> & get_children() override;



                class NvSatelliteId : public Entity
                {
                    public:
                        NvSatelliteId();
                        ~NvSatelliteId();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;


                        YLeaf satellite_id; //type: int32

                    class NvSatelliteInterfaces : public Entity
                    {
                        public:
                            NvSatelliteInterfaces();
                            ~NvSatelliteInterfaces();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class NvSatelliteInterface : public Entity
                        {
                            public:
                                NvSatelliteInterface();
                                ~NvSatelliteInterface();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf interface_name; //type: string

                            class MemberInterfaces : public Entity
                            {
                                public:
                                    MemberInterfaces();
                                    ~MemberInterfaces();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;



                                class MemberInterface : public Entity
                                {
                                    public:
                                        MemberInterface();
                                        ~MemberInterface();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf interface_name; //type: string

                                    class SatelliteIds : public Entity
                                    {
                                        public:
                                            SatelliteIds();
                                            ~SatelliteIds();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;



                                        class SatelliteId : public Entity
                                        {
                                            public:
                                                SatelliteId();
                                                ~SatelliteId();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf nv_satellite_id; //type: int32

                                            class Input : public Entity
                                            {
                                                public:
                                                    Input();
                                                    ~Input();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;



                                                class Statistics : public Entity
                                                {
                                                    public:
                                                        Statistics();
                                                        ~Statistics();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf policy_name; //type: string
                                                        YLeaf state; //type: PolicyStateEnum
                                                        YLeaf state_description; //type: string
                                                        YLeaf satid; //type: uint32

                                                    class ClassStat : public Entity
                                                    {
                                                        public:
                                                            ClassStat();
                                                            ~ClassStat();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf counter_validity_bitmask; //type: uint64
                                                            YLeaf class_name; //type: string
                                                            YLeaf shared_queue_id; //type: uint32
                                                            YLeaf queue_descr; //type: string
                                                            YLeaf cac_state; //type: CacStateEnum

                                                        class GeneralStats : public Entity
                                                        {
                                                            public:
                                                                GeneralStats();
                                                                ~GeneralStats();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf transmit_packets; //type: uint64
                                                                YLeaf transmit_bytes; //type: uint64
                                                                YLeaf total_drop_packets; //type: uint64
                                                                YLeaf total_drop_bytes; //type: uint64
                                                                YLeaf total_drop_rate; //type: uint32
                                                                YLeaf match_data_rate; //type: uint32
                                                                YLeaf total_transmit_rate; //type: uint32
                                                                YLeaf pre_policy_matched_packets; //type: uint64
                                                                YLeaf pre_policy_matched_bytes; //type: uint64



                                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats


                                                        class IphcStats : public Entity
                                                        {
                                                            public:
                                                                IphcStats();
                                                                ~IphcStats();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf non_tcp_total_out_packets; //type: uint64
                                                                YLeaf non_tcp_total_out_bytes; //type: uint64
                                                                YLeaf non_tcp_bytes_saved; //type: uint64
                                                                YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                                YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                                YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                                YLeaf tcp_total_out_packets; //type: uint64
                                                                YLeaf tcp_total_out_bytes; //type: uint64
                                                                YLeaf tcp_bytes_saved; //type: uint64
                                                                YLeaf tcp_compressed_packets_out; //type: uint64
                                                                YLeaf tcp_bytes_sent_rate; //type: uint32
                                                                YLeaf tcp_full_header_packets_out; //type: uint64



                                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats


                                                        class ChildPolicy : public Entity
                                                        {
                                                            public:
                                                                ChildPolicy();
                                                                ~ChildPolicy();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;





                                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy


                                                        class CacStats : public Entity
                                                        {
                                                            public:
                                                                CacStats();
                                                                ~CacStats();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf drop_packets; //type: uint64
                                                                YLeaf drop_bytes; //type: uint64
                                                                YLeaf drop_rates; //type: uint32
                                                                YLeaf admitpackets; //type: uint64
                                                                YLeaf admit_bytes; //type: uint64
                                                                YLeaf admit_rates; //type: uint32



                                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats


                                                        class QueueStatsArray : public Entity
                                                        {
                                                            public:
                                                                QueueStatsArray();
                                                                ~QueueStatsArray();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf queue_id; //type: uint32
                                                                YLeaf tail_drop_packets; //type: uint64
                                                                YLeaf tail_drop_bytes; //type: uint64
                                                                YLeaf atm_clp0_drop_packets; //type: uint64
                                                                YLeaf atm_clp0_drop_bytes; //type: uint64
                                                                YLeaf atm_clp1_drop_packets; //type: uint64
                                                                YLeaf atm_clp1_drop_bytes; //type: uint64
                                                                YLeaf queue_drop_threshold; //type: uint32
                                                                YLeaf forced_wred_stats_display; //type: boolean
                                                                YLeaf random_drop_packets; //type: uint64
                                                                YLeaf random_drop_bytes; //type: uint64
                                                                YLeaf max_threshold_packets; //type: uint64
                                                                YLeaf max_threshold_bytes; //type: uint64
                                                                YLeaf conform_packets; //type: uint64
                                                                YLeaf conform_bytes; //type: uint64
                                                                YLeaf exceed_packets; //type: uint64
                                                                YLeaf exceed_bytes; //type: uint64
                                                                YLeaf conform_rate; //type: uint32
                                                                YLeaf exceed_rate; //type: uint32

                                                            class QueueInstanceLength : public Entity
                                                            {
                                                                public:
                                                                    QueueInstanceLength();
                                                                    ~QueueInstanceLength();

                                                                    bool has_data() const override;
                                                                    bool has_operation() const override;
                                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                                    std::string get_segment_path() const override;
                                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                    void set_value(const std::string & value_path, std::string value) override;
                                                                    std::map<std::string, Entity*> & get_children() override;


                                                                    YLeaf value_; //type: uint32
                                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                            class QueueAverageLength : public Entity
                                                            {
                                                                public:
                                                                    QueueAverageLength();
                                                                    ~QueueAverageLength();

                                                                    bool has_data() const override;
                                                                    bool has_operation() const override;
                                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                                    std::string get_segment_path() const override;
                                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                    void set_value(const std::string & value_path, std::string value) override;
                                                                    std::map<std::string, Entity*> & get_children() override;


                                                                    YLeaf value_; //type: uint32
                                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                            class QueueMaxLength : public Entity
                                                            {
                                                                public:
                                                                    QueueMaxLength();
                                                                    ~QueueMaxLength();

                                                                    bool has_data() const override;
                                                                    bool has_operation() const override;
                                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                                    std::string get_segment_path() const override;
                                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                    void set_value(const std::string & value_path, std::string value) override;
                                                                    std::map<std::string, Entity*> & get_children() override;


                                                                    YLeaf value_; //type: uint32
                                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray


                                                        class PoliceStatsArray : public Entity
                                                        {
                                                            public:
                                                                PoliceStatsArray();
                                                                ~PoliceStatsArray();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf drop_packets; //type: uint64
                                                                YLeaf drop_bytes; //type: uint64
                                                                YLeaf conform_packets; //type: uint64
                                                                YLeaf conform_bytes; //type: uint64
                                                                YLeaf exceed_packets; //type: uint64
                                                                YLeaf exceed_bytes; //type: uint64
                                                                YLeaf violate_packets; //type: uint64
                                                                YLeaf violate_bytes; //type: uint64
                                                                YLeaf parent_drop_packets; //type: uint64
                                                                YLeaf parent_drop_bytes; //type: uint64
                                                                YLeaf conform_rate; //type: uint32
                                                                YLeaf exceed_rate; //type: uint32
                                                                YLeaf violate_rate; //type: uint32

                                                            class ColorClassStats : public Entity
                                                            {
                                                                public:
                                                                    ColorClassStats();
                                                                    ~ColorClassStats();

                                                                    bool has_data() const override;
                                                                    bool has_operation() const override;
                                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                                    std::string get_segment_path() const override;
                                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                    void set_value(const std::string & value_path, std::string value) override;
                                                                    std::map<std::string, Entity*> & get_children() override;


                                                                    YLeaf conform_class_conform_packets; //type: uint64
                                                                    YLeaf conform_class_conform_bytes; //type: uint64
                                                                    YLeaf conform_class_conform_rate; //type: uint32
                                                                    YLeaf conform_class_exceed_packets; //type: uint64
                                                                    YLeaf conform_class_exceed_bytes; //type: uint64
                                                                    YLeaf conform_class_exceed_rate; //type: uint32
                                                                    YLeaf conform_class_violate_packets; //type: uint64
                                                                    YLeaf conform_class_violate_bytes; //type: uint64
                                                                    YLeaf conform_class_violate_rate; //type: uint32
                                                                    YLeaf exceed_class_exceed_packets; //type: uint64
                                                                    YLeaf exceed_class_exceed_bytes; //type: uint64
                                                                    YLeaf exceed_class_exceed_rate; //type: uint32
                                                                    YLeaf exceed_class_violate_packets; //type: uint64
                                                                    YLeaf exceed_class_violate_bytes; //type: uint64
                                                                    YLeaf exceed_class_violate_rate; //type: uint32
                                                                    YLeaf violate_class_violate_packets; //type: uint64
                                                                    YLeaf violate_class_violate_bytes; //type: uint64
                                                                    YLeaf violate_class_violate_rate; //type: uint32



                                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray


                                                        class WredStatsArray : public Entity
                                                        {
                                                            public:
                                                                WredStatsArray();
                                                                ~WredStatsArray();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf profile_title; //type: string
                                                                YLeaf red_transmit_packets; //type: uint64
                                                                YLeaf red_transmit_bytes; //type: uint64
                                                                YLeaf random_drop_packets; //type: uint64
                                                                YLeaf random_drop_bytes; //type: uint64
                                                                YLeaf max_threshold_packets; //type: uint64
                                                                YLeaf max_threshold_bytes; //type: uint64
                                                                YLeaf red_ecn_marked_packets; //type: uint64
                                                                YLeaf red_ecn_marked_bytes; //type: uint64

                                                            class RedLabel : public Entity
                                                            {
                                                                public:
                                                                    RedLabel();
                                                                    ~RedLabel();

                                                                    bool has_data() const override;
                                                                    bool has_operation() const override;
                                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                                    std::string get_segment_path() const override;
                                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                    void set_value(const std::string & value_path, std::string value) override;
                                                                    std::map<std::string, Entity*> & get_children() override;


                                                                    YLeaf wred_type; //type: WredEnum
                                                                    YLeaf value_; //type: uint8



                                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray


                                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats> cac_stats;
                                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat


                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat> > class_stat;


                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics


                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics> statistics;


                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input


                                            class Output : public Entity
                                            {
                                                public:
                                                    Output();
                                                    ~Output();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;



                                                class Statistics : public Entity
                                                {
                                                    public:
                                                        Statistics();
                                                        ~Statistics();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf policy_name; //type: string
                                                        YLeaf state; //type: PolicyStateEnum
                                                        YLeaf state_description; //type: string
                                                        YLeaf satid; //type: uint32

                                                    class ClassStat : public Entity
                                                    {
                                                        public:
                                                            ClassStat();
                                                            ~ClassStat();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf counter_validity_bitmask; //type: uint64
                                                            YLeaf class_name; //type: string
                                                            YLeaf shared_queue_id; //type: uint32
                                                            YLeaf queue_descr; //type: string
                                                            YLeaf cac_state; //type: CacStateEnum

                                                        class GeneralStats : public Entity
                                                        {
                                                            public:
                                                                GeneralStats();
                                                                ~GeneralStats();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf transmit_packets; //type: uint64
                                                                YLeaf transmit_bytes; //type: uint64
                                                                YLeaf total_drop_packets; //type: uint64
                                                                YLeaf total_drop_bytes; //type: uint64
                                                                YLeaf total_drop_rate; //type: uint32
                                                                YLeaf match_data_rate; //type: uint32
                                                                YLeaf total_transmit_rate; //type: uint32
                                                                YLeaf pre_policy_matched_packets; //type: uint64
                                                                YLeaf pre_policy_matched_bytes; //type: uint64



                                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats


                                                        class IphcStats : public Entity
                                                        {
                                                            public:
                                                                IphcStats();
                                                                ~IphcStats();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf non_tcp_total_out_packets; //type: uint64
                                                                YLeaf non_tcp_total_out_bytes; //type: uint64
                                                                YLeaf non_tcp_bytes_saved; //type: uint64
                                                                YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                                YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                                YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                                YLeaf tcp_total_out_packets; //type: uint64
                                                                YLeaf tcp_total_out_bytes; //type: uint64
                                                                YLeaf tcp_bytes_saved; //type: uint64
                                                                YLeaf tcp_compressed_packets_out; //type: uint64
                                                                YLeaf tcp_bytes_sent_rate; //type: uint32
                                                                YLeaf tcp_full_header_packets_out; //type: uint64



                                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats


                                                        class ChildPolicy : public Entity
                                                        {
                                                            public:
                                                                ChildPolicy();
                                                                ~ChildPolicy();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;





                                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy


                                                        class CacStats : public Entity
                                                        {
                                                            public:
                                                                CacStats();
                                                                ~CacStats();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf drop_packets; //type: uint64
                                                                YLeaf drop_bytes; //type: uint64
                                                                YLeaf drop_rates; //type: uint32
                                                                YLeaf admitpackets; //type: uint64
                                                                YLeaf admit_bytes; //type: uint64
                                                                YLeaf admit_rates; //type: uint32



                                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats


                                                        class QueueStatsArray : public Entity
                                                        {
                                                            public:
                                                                QueueStatsArray();
                                                                ~QueueStatsArray();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf queue_id; //type: uint32
                                                                YLeaf tail_drop_packets; //type: uint64
                                                                YLeaf tail_drop_bytes; //type: uint64
                                                                YLeaf atm_clp0_drop_packets; //type: uint64
                                                                YLeaf atm_clp0_drop_bytes; //type: uint64
                                                                YLeaf atm_clp1_drop_packets; //type: uint64
                                                                YLeaf atm_clp1_drop_bytes; //type: uint64
                                                                YLeaf queue_drop_threshold; //type: uint32
                                                                YLeaf forced_wred_stats_display; //type: boolean
                                                                YLeaf random_drop_packets; //type: uint64
                                                                YLeaf random_drop_bytes; //type: uint64
                                                                YLeaf max_threshold_packets; //type: uint64
                                                                YLeaf max_threshold_bytes; //type: uint64
                                                                YLeaf conform_packets; //type: uint64
                                                                YLeaf conform_bytes; //type: uint64
                                                                YLeaf exceed_packets; //type: uint64
                                                                YLeaf exceed_bytes; //type: uint64
                                                                YLeaf conform_rate; //type: uint32
                                                                YLeaf exceed_rate; //type: uint32

                                                            class QueueInstanceLength : public Entity
                                                            {
                                                                public:
                                                                    QueueInstanceLength();
                                                                    ~QueueInstanceLength();

                                                                    bool has_data() const override;
                                                                    bool has_operation() const override;
                                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                                    std::string get_segment_path() const override;
                                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                    void set_value(const std::string & value_path, std::string value) override;
                                                                    std::map<std::string, Entity*> & get_children() override;


                                                                    YLeaf value_; //type: uint32
                                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                            class QueueAverageLength : public Entity
                                                            {
                                                                public:
                                                                    QueueAverageLength();
                                                                    ~QueueAverageLength();

                                                                    bool has_data() const override;
                                                                    bool has_operation() const override;
                                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                                    std::string get_segment_path() const override;
                                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                    void set_value(const std::string & value_path, std::string value) override;
                                                                    std::map<std::string, Entity*> & get_children() override;


                                                                    YLeaf value_; //type: uint32
                                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                            class QueueMaxLength : public Entity
                                                            {
                                                                public:
                                                                    QueueMaxLength();
                                                                    ~QueueMaxLength();

                                                                    bool has_data() const override;
                                                                    bool has_operation() const override;
                                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                                    std::string get_segment_path() const override;
                                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                    void set_value(const std::string & value_path, std::string value) override;
                                                                    std::map<std::string, Entity*> & get_children() override;


                                                                    YLeaf value_; //type: uint32
                                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray


                                                        class PoliceStatsArray : public Entity
                                                        {
                                                            public:
                                                                PoliceStatsArray();
                                                                ~PoliceStatsArray();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf drop_packets; //type: uint64
                                                                YLeaf drop_bytes; //type: uint64
                                                                YLeaf conform_packets; //type: uint64
                                                                YLeaf conform_bytes; //type: uint64
                                                                YLeaf exceed_packets; //type: uint64
                                                                YLeaf exceed_bytes; //type: uint64
                                                                YLeaf violate_packets; //type: uint64
                                                                YLeaf violate_bytes; //type: uint64
                                                                YLeaf parent_drop_packets; //type: uint64
                                                                YLeaf parent_drop_bytes; //type: uint64
                                                                YLeaf conform_rate; //type: uint32
                                                                YLeaf exceed_rate; //type: uint32
                                                                YLeaf violate_rate; //type: uint32

                                                            class ColorClassStats : public Entity
                                                            {
                                                                public:
                                                                    ColorClassStats();
                                                                    ~ColorClassStats();

                                                                    bool has_data() const override;
                                                                    bool has_operation() const override;
                                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                                    std::string get_segment_path() const override;
                                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                    void set_value(const std::string & value_path, std::string value) override;
                                                                    std::map<std::string, Entity*> & get_children() override;


                                                                    YLeaf conform_class_conform_packets; //type: uint64
                                                                    YLeaf conform_class_conform_bytes; //type: uint64
                                                                    YLeaf conform_class_conform_rate; //type: uint32
                                                                    YLeaf conform_class_exceed_packets; //type: uint64
                                                                    YLeaf conform_class_exceed_bytes; //type: uint64
                                                                    YLeaf conform_class_exceed_rate; //type: uint32
                                                                    YLeaf conform_class_violate_packets; //type: uint64
                                                                    YLeaf conform_class_violate_bytes; //type: uint64
                                                                    YLeaf conform_class_violate_rate; //type: uint32
                                                                    YLeaf exceed_class_exceed_packets; //type: uint64
                                                                    YLeaf exceed_class_exceed_bytes; //type: uint64
                                                                    YLeaf exceed_class_exceed_rate; //type: uint32
                                                                    YLeaf exceed_class_violate_packets; //type: uint64
                                                                    YLeaf exceed_class_violate_bytes; //type: uint64
                                                                    YLeaf exceed_class_violate_rate; //type: uint32
                                                                    YLeaf violate_class_violate_packets; //type: uint64
                                                                    YLeaf violate_class_violate_bytes; //type: uint64
                                                                    YLeaf violate_class_violate_rate; //type: uint32



                                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray


                                                        class WredStatsArray : public Entity
                                                        {
                                                            public:
                                                                WredStatsArray();
                                                                ~WredStatsArray();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf profile_title; //type: string
                                                                YLeaf red_transmit_packets; //type: uint64
                                                                YLeaf red_transmit_bytes; //type: uint64
                                                                YLeaf random_drop_packets; //type: uint64
                                                                YLeaf random_drop_bytes; //type: uint64
                                                                YLeaf max_threshold_packets; //type: uint64
                                                                YLeaf max_threshold_bytes; //type: uint64
                                                                YLeaf red_ecn_marked_packets; //type: uint64
                                                                YLeaf red_ecn_marked_bytes; //type: uint64

                                                            class RedLabel : public Entity
                                                            {
                                                                public:
                                                                    RedLabel();
                                                                    ~RedLabel();

                                                                    bool has_data() const override;
                                                                    bool has_operation() const override;
                                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                                    std::string get_segment_path() const override;
                                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                    void set_value(const std::string & value_path, std::string value) override;
                                                                    std::map<std::string, Entity*> & get_children() override;


                                                                    YLeaf wred_type; //type: WredEnum
                                                                    YLeaf value_; //type: uint8



                                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray


                                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats> cac_stats;
                                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat


                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat> > class_stat;


                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics


                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics> statistics;


                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input> input;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output> output;


                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId> > satellite_id;


                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds


                                    class Input : public Entity
                                    {
                                        public:
                                            Input();
                                            ~Input();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;



                                        class Statistics : public Entity
                                        {
                                            public:
                                                Statistics();
                                                ~Statistics();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf policy_name; //type: string
                                                YLeaf state; //type: PolicyStateEnum
                                                YLeaf state_description; //type: string
                                                YLeaf satid; //type: uint32

                                            class ClassStat : public Entity
                                            {
                                                public:
                                                    ClassStat();
                                                    ~ClassStat();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf counter_validity_bitmask; //type: uint64
                                                    YLeaf class_name; //type: string
                                                    YLeaf shared_queue_id; //type: uint32
                                                    YLeaf queue_descr; //type: string
                                                    YLeaf cac_state; //type: CacStateEnum

                                                class GeneralStats : public Entity
                                                {
                                                    public:
                                                        GeneralStats();
                                                        ~GeneralStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf transmit_packets; //type: uint64
                                                        YLeaf transmit_bytes; //type: uint64
                                                        YLeaf total_drop_packets; //type: uint64
                                                        YLeaf total_drop_bytes; //type: uint64
                                                        YLeaf total_drop_rate; //type: uint32
                                                        YLeaf match_data_rate; //type: uint32
                                                        YLeaf total_transmit_rate; //type: uint32
                                                        YLeaf pre_policy_matched_packets; //type: uint64
                                                        YLeaf pre_policy_matched_bytes; //type: uint64



                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::GeneralStats


                                                class IphcStats : public Entity
                                                {
                                                    public:
                                                        IphcStats();
                                                        ~IphcStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf non_tcp_total_out_packets; //type: uint64
                                                        YLeaf non_tcp_total_out_bytes; //type: uint64
                                                        YLeaf non_tcp_bytes_saved; //type: uint64
                                                        YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                        YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                        YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                        YLeaf tcp_total_out_packets; //type: uint64
                                                        YLeaf tcp_total_out_bytes; //type: uint64
                                                        YLeaf tcp_bytes_saved; //type: uint64
                                                        YLeaf tcp_compressed_packets_out; //type: uint64
                                                        YLeaf tcp_bytes_sent_rate; //type: uint32
                                                        YLeaf tcp_full_header_packets_out; //type: uint64



                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::IphcStats


                                                class ChildPolicy : public Entity
                                                {
                                                    public:
                                                        ChildPolicy();
                                                        ~ChildPolicy();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;





                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::ChildPolicy


                                                class CacStats : public Entity
                                                {
                                                    public:
                                                        CacStats();
                                                        ~CacStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf drop_packets; //type: uint64
                                                        YLeaf drop_bytes; //type: uint64
                                                        YLeaf drop_rates; //type: uint32
                                                        YLeaf admitpackets; //type: uint64
                                                        YLeaf admit_bytes; //type: uint64
                                                        YLeaf admit_rates; //type: uint32



                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::CacStats


                                                class QueueStatsArray : public Entity
                                                {
                                                    public:
                                                        QueueStatsArray();
                                                        ~QueueStatsArray();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf queue_id; //type: uint32
                                                        YLeaf tail_drop_packets; //type: uint64
                                                        YLeaf tail_drop_bytes; //type: uint64
                                                        YLeaf atm_clp0_drop_packets; //type: uint64
                                                        YLeaf atm_clp0_drop_bytes; //type: uint64
                                                        YLeaf atm_clp1_drop_packets; //type: uint64
                                                        YLeaf atm_clp1_drop_bytes; //type: uint64
                                                        YLeaf queue_drop_threshold; //type: uint32
                                                        YLeaf forced_wred_stats_display; //type: boolean
                                                        YLeaf random_drop_packets; //type: uint64
                                                        YLeaf random_drop_bytes; //type: uint64
                                                        YLeaf max_threshold_packets; //type: uint64
                                                        YLeaf max_threshold_bytes; //type: uint64
                                                        YLeaf conform_packets; //type: uint64
                                                        YLeaf conform_bytes; //type: uint64
                                                        YLeaf exceed_packets; //type: uint64
                                                        YLeaf exceed_bytes; //type: uint64
                                                        YLeaf conform_rate; //type: uint32
                                                        YLeaf exceed_rate; //type: uint32

                                                    class QueueInstanceLength : public Entity
                                                    {
                                                        public:
                                                            QueueInstanceLength();
                                                            ~QueueInstanceLength();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf value_; //type: uint32
                                                            YLeaf unit; //type: PolicyParamUnitEnum



                                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                    class QueueAverageLength : public Entity
                                                    {
                                                        public:
                                                            QueueAverageLength();
                                                            ~QueueAverageLength();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf value_; //type: uint32
                                                            YLeaf unit; //type: PolicyParamUnitEnum



                                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                    class QueueMaxLength : public Entity
                                                    {
                                                        public:
                                                            QueueMaxLength();
                                                            ~QueueMaxLength();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf value_; //type: uint32
                                                            YLeaf unit; //type: PolicyParamUnitEnum



                                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray


                                                class PoliceStatsArray : public Entity
                                                {
                                                    public:
                                                        PoliceStatsArray();
                                                        ~PoliceStatsArray();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf drop_packets; //type: uint64
                                                        YLeaf drop_bytes; //type: uint64
                                                        YLeaf conform_packets; //type: uint64
                                                        YLeaf conform_bytes; //type: uint64
                                                        YLeaf exceed_packets; //type: uint64
                                                        YLeaf exceed_bytes; //type: uint64
                                                        YLeaf violate_packets; //type: uint64
                                                        YLeaf violate_bytes; //type: uint64
                                                        YLeaf parent_drop_packets; //type: uint64
                                                        YLeaf parent_drop_bytes; //type: uint64
                                                        YLeaf conform_rate; //type: uint32
                                                        YLeaf exceed_rate; //type: uint32
                                                        YLeaf violate_rate; //type: uint32

                                                    class ColorClassStats : public Entity
                                                    {
                                                        public:
                                                            ColorClassStats();
                                                            ~ColorClassStats();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf conform_class_conform_packets; //type: uint64
                                                            YLeaf conform_class_conform_bytes; //type: uint64
                                                            YLeaf conform_class_conform_rate; //type: uint32
                                                            YLeaf conform_class_exceed_packets; //type: uint64
                                                            YLeaf conform_class_exceed_bytes; //type: uint64
                                                            YLeaf conform_class_exceed_rate; //type: uint32
                                                            YLeaf conform_class_violate_packets; //type: uint64
                                                            YLeaf conform_class_violate_bytes; //type: uint64
                                                            YLeaf conform_class_violate_rate; //type: uint32
                                                            YLeaf exceed_class_exceed_packets; //type: uint64
                                                            YLeaf exceed_class_exceed_bytes; //type: uint64
                                                            YLeaf exceed_class_exceed_rate; //type: uint32
                                                            YLeaf exceed_class_violate_packets; //type: uint64
                                                            YLeaf exceed_class_violate_bytes; //type: uint64
                                                            YLeaf exceed_class_violate_rate; //type: uint32
                                                            YLeaf violate_class_violate_packets; //type: uint64
                                                            YLeaf violate_class_violate_bytes; //type: uint64
                                                            YLeaf violate_class_violate_rate; //type: uint32



                                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray


                                                class WredStatsArray : public Entity
                                                {
                                                    public:
                                                        WredStatsArray();
                                                        ~WredStatsArray();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf profile_title; //type: string
                                                        YLeaf red_transmit_packets; //type: uint64
                                                        YLeaf red_transmit_bytes; //type: uint64
                                                        YLeaf random_drop_packets; //type: uint64
                                                        YLeaf random_drop_bytes; //type: uint64
                                                        YLeaf max_threshold_packets; //type: uint64
                                                        YLeaf max_threshold_bytes; //type: uint64
                                                        YLeaf red_ecn_marked_packets; //type: uint64
                                                        YLeaf red_ecn_marked_bytes; //type: uint64

                                                    class RedLabel : public Entity
                                                    {
                                                        public:
                                                            RedLabel();
                                                            ~RedLabel();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf wred_type; //type: WredEnum
                                                            YLeaf value_; //type: uint8



                                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray


                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::CacStats> cac_stats;
                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat


                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat> > class_stat;


                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Statistics> statistics;


                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input


                                    class Output : public Entity
                                    {
                                        public:
                                            Output();
                                            ~Output();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;



                                        class Statistics : public Entity
                                        {
                                            public:
                                                Statistics();
                                                ~Statistics();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf policy_name; //type: string
                                                YLeaf state; //type: PolicyStateEnum
                                                YLeaf state_description; //type: string
                                                YLeaf satid; //type: uint32

                                            class ClassStat : public Entity
                                            {
                                                public:
                                                    ClassStat();
                                                    ~ClassStat();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf counter_validity_bitmask; //type: uint64
                                                    YLeaf class_name; //type: string
                                                    YLeaf shared_queue_id; //type: uint32
                                                    YLeaf queue_descr; //type: string
                                                    YLeaf cac_state; //type: CacStateEnum

                                                class GeneralStats : public Entity
                                                {
                                                    public:
                                                        GeneralStats();
                                                        ~GeneralStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf transmit_packets; //type: uint64
                                                        YLeaf transmit_bytes; //type: uint64
                                                        YLeaf total_drop_packets; //type: uint64
                                                        YLeaf total_drop_bytes; //type: uint64
                                                        YLeaf total_drop_rate; //type: uint32
                                                        YLeaf match_data_rate; //type: uint32
                                                        YLeaf total_transmit_rate; //type: uint32
                                                        YLeaf pre_policy_matched_packets; //type: uint64
                                                        YLeaf pre_policy_matched_bytes; //type: uint64



                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::GeneralStats


                                                class IphcStats : public Entity
                                                {
                                                    public:
                                                        IphcStats();
                                                        ~IphcStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf non_tcp_total_out_packets; //type: uint64
                                                        YLeaf non_tcp_total_out_bytes; //type: uint64
                                                        YLeaf non_tcp_bytes_saved; //type: uint64
                                                        YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                        YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                        YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                        YLeaf tcp_total_out_packets; //type: uint64
                                                        YLeaf tcp_total_out_bytes; //type: uint64
                                                        YLeaf tcp_bytes_saved; //type: uint64
                                                        YLeaf tcp_compressed_packets_out; //type: uint64
                                                        YLeaf tcp_bytes_sent_rate; //type: uint32
                                                        YLeaf tcp_full_header_packets_out; //type: uint64



                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::IphcStats


                                                class ChildPolicy : public Entity
                                                {
                                                    public:
                                                        ChildPolicy();
                                                        ~ChildPolicy();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;





                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::ChildPolicy


                                                class CacStats : public Entity
                                                {
                                                    public:
                                                        CacStats();
                                                        ~CacStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf drop_packets; //type: uint64
                                                        YLeaf drop_bytes; //type: uint64
                                                        YLeaf drop_rates; //type: uint32
                                                        YLeaf admitpackets; //type: uint64
                                                        YLeaf admit_bytes; //type: uint64
                                                        YLeaf admit_rates; //type: uint32



                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::CacStats


                                                class QueueStatsArray : public Entity
                                                {
                                                    public:
                                                        QueueStatsArray();
                                                        ~QueueStatsArray();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf queue_id; //type: uint32
                                                        YLeaf tail_drop_packets; //type: uint64
                                                        YLeaf tail_drop_bytes; //type: uint64
                                                        YLeaf atm_clp0_drop_packets; //type: uint64
                                                        YLeaf atm_clp0_drop_bytes; //type: uint64
                                                        YLeaf atm_clp1_drop_packets; //type: uint64
                                                        YLeaf atm_clp1_drop_bytes; //type: uint64
                                                        YLeaf queue_drop_threshold; //type: uint32
                                                        YLeaf forced_wred_stats_display; //type: boolean
                                                        YLeaf random_drop_packets; //type: uint64
                                                        YLeaf random_drop_bytes; //type: uint64
                                                        YLeaf max_threshold_packets; //type: uint64
                                                        YLeaf max_threshold_bytes; //type: uint64
                                                        YLeaf conform_packets; //type: uint64
                                                        YLeaf conform_bytes; //type: uint64
                                                        YLeaf exceed_packets; //type: uint64
                                                        YLeaf exceed_bytes; //type: uint64
                                                        YLeaf conform_rate; //type: uint32
                                                        YLeaf exceed_rate; //type: uint32

                                                    class QueueInstanceLength : public Entity
                                                    {
                                                        public:
                                                            QueueInstanceLength();
                                                            ~QueueInstanceLength();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf value_; //type: uint32
                                                            YLeaf unit; //type: PolicyParamUnitEnum



                                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                    class QueueAverageLength : public Entity
                                                    {
                                                        public:
                                                            QueueAverageLength();
                                                            ~QueueAverageLength();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf value_; //type: uint32
                                                            YLeaf unit; //type: PolicyParamUnitEnum



                                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                    class QueueMaxLength : public Entity
                                                    {
                                                        public:
                                                            QueueMaxLength();
                                                            ~QueueMaxLength();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf value_; //type: uint32
                                                            YLeaf unit; //type: PolicyParamUnitEnum



                                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray


                                                class PoliceStatsArray : public Entity
                                                {
                                                    public:
                                                        PoliceStatsArray();
                                                        ~PoliceStatsArray();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf drop_packets; //type: uint64
                                                        YLeaf drop_bytes; //type: uint64
                                                        YLeaf conform_packets; //type: uint64
                                                        YLeaf conform_bytes; //type: uint64
                                                        YLeaf exceed_packets; //type: uint64
                                                        YLeaf exceed_bytes; //type: uint64
                                                        YLeaf violate_packets; //type: uint64
                                                        YLeaf violate_bytes; //type: uint64
                                                        YLeaf parent_drop_packets; //type: uint64
                                                        YLeaf parent_drop_bytes; //type: uint64
                                                        YLeaf conform_rate; //type: uint32
                                                        YLeaf exceed_rate; //type: uint32
                                                        YLeaf violate_rate; //type: uint32

                                                    class ColorClassStats : public Entity
                                                    {
                                                        public:
                                                            ColorClassStats();
                                                            ~ColorClassStats();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf conform_class_conform_packets; //type: uint64
                                                            YLeaf conform_class_conform_bytes; //type: uint64
                                                            YLeaf conform_class_conform_rate; //type: uint32
                                                            YLeaf conform_class_exceed_packets; //type: uint64
                                                            YLeaf conform_class_exceed_bytes; //type: uint64
                                                            YLeaf conform_class_exceed_rate; //type: uint32
                                                            YLeaf conform_class_violate_packets; //type: uint64
                                                            YLeaf conform_class_violate_bytes; //type: uint64
                                                            YLeaf conform_class_violate_rate; //type: uint32
                                                            YLeaf exceed_class_exceed_packets; //type: uint64
                                                            YLeaf exceed_class_exceed_bytes; //type: uint64
                                                            YLeaf exceed_class_exceed_rate; //type: uint32
                                                            YLeaf exceed_class_violate_packets; //type: uint64
                                                            YLeaf exceed_class_violate_bytes; //type: uint64
                                                            YLeaf exceed_class_violate_rate; //type: uint32
                                                            YLeaf violate_class_violate_packets; //type: uint64
                                                            YLeaf violate_class_violate_bytes; //type: uint64
                                                            YLeaf violate_class_violate_rate; //type: uint32



                                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray


                                                class WredStatsArray : public Entity
                                                {
                                                    public:
                                                        WredStatsArray();
                                                        ~WredStatsArray();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf profile_title; //type: string
                                                        YLeaf red_transmit_packets; //type: uint64
                                                        YLeaf red_transmit_bytes; //type: uint64
                                                        YLeaf random_drop_packets; //type: uint64
                                                        YLeaf random_drop_bytes; //type: uint64
                                                        YLeaf max_threshold_packets; //type: uint64
                                                        YLeaf max_threshold_bytes; //type: uint64
                                                        YLeaf red_ecn_marked_packets; //type: uint64
                                                        YLeaf red_ecn_marked_bytes; //type: uint64

                                                    class RedLabel : public Entity
                                                    {
                                                        public:
                                                            RedLabel();
                                                            ~RedLabel();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf wred_type; //type: WredEnum
                                                            YLeaf value_; //type: uint8



                                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray


                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::CacStats> cac_stats;
                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat


                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat> > class_stat;


                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Statistics> statistics;


                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input> input;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output> output;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::SatelliteIds> satellite_ids;


                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface


                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface> > member_interface;


                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces


                            class Input : public Entity
                            {
                                public:
                                    Input();
                                    ~Input();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;



                                class Statistics : public Entity
                                {
                                    public:
                                        Statistics();
                                        ~Statistics();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf policy_name; //type: string
                                        YLeaf state; //type: PolicyStateEnum
                                        YLeaf state_description; //type: string
                                        YLeaf satid; //type: uint32

                                    class ClassStat : public Entity
                                    {
                                        public:
                                            ClassStat();
                                            ~ClassStat();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf counter_validity_bitmask; //type: uint64
                                            YLeaf class_name; //type: string
                                            YLeaf shared_queue_id; //type: uint32
                                            YLeaf queue_descr; //type: string
                                            YLeaf cac_state; //type: CacStateEnum

                                        class GeneralStats : public Entity
                                        {
                                            public:
                                                GeneralStats();
                                                ~GeneralStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf transmit_packets; //type: uint64
                                                YLeaf transmit_bytes; //type: uint64
                                                YLeaf total_drop_packets; //type: uint64
                                                YLeaf total_drop_bytes; //type: uint64
                                                YLeaf total_drop_rate; //type: uint32
                                                YLeaf match_data_rate; //type: uint32
                                                YLeaf total_transmit_rate; //type: uint32
                                                YLeaf pre_policy_matched_packets; //type: uint64
                                                YLeaf pre_policy_matched_bytes; //type: uint64



                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::GeneralStats


                                        class IphcStats : public Entity
                                        {
                                            public:
                                                IphcStats();
                                                ~IphcStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf non_tcp_total_out_packets; //type: uint64
                                                YLeaf non_tcp_total_out_bytes; //type: uint64
                                                YLeaf non_tcp_bytes_saved; //type: uint64
                                                YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                YLeaf tcp_total_out_packets; //type: uint64
                                                YLeaf tcp_total_out_bytes; //type: uint64
                                                YLeaf tcp_bytes_saved; //type: uint64
                                                YLeaf tcp_compressed_packets_out; //type: uint64
                                                YLeaf tcp_bytes_sent_rate; //type: uint32
                                                YLeaf tcp_full_header_packets_out; //type: uint64



                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::IphcStats


                                        class ChildPolicy : public Entity
                                        {
                                            public:
                                                ChildPolicy();
                                                ~ChildPolicy();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;





                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::ChildPolicy


                                        class CacStats : public Entity
                                        {
                                            public:
                                                CacStats();
                                                ~CacStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf drop_packets; //type: uint64
                                                YLeaf drop_bytes; //type: uint64
                                                YLeaf drop_rates; //type: uint32
                                                YLeaf admitpackets; //type: uint64
                                                YLeaf admit_bytes; //type: uint64
                                                YLeaf admit_rates; //type: uint32



                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::CacStats


                                        class QueueStatsArray : public Entity
                                        {
                                            public:
                                                QueueStatsArray();
                                                ~QueueStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf queue_id; //type: uint32
                                                YLeaf tail_drop_packets; //type: uint64
                                                YLeaf tail_drop_bytes; //type: uint64
                                                YLeaf atm_clp0_drop_packets; //type: uint64
                                                YLeaf atm_clp0_drop_bytes; //type: uint64
                                                YLeaf atm_clp1_drop_packets; //type: uint64
                                                YLeaf atm_clp1_drop_bytes; //type: uint64
                                                YLeaf queue_drop_threshold; //type: uint32
                                                YLeaf forced_wred_stats_display; //type: boolean
                                                YLeaf random_drop_packets; //type: uint64
                                                YLeaf random_drop_bytes; //type: uint64
                                                YLeaf max_threshold_packets; //type: uint64
                                                YLeaf max_threshold_bytes; //type: uint64
                                                YLeaf conform_packets; //type: uint64
                                                YLeaf conform_bytes; //type: uint64
                                                YLeaf exceed_packets; //type: uint64
                                                YLeaf exceed_bytes; //type: uint64
                                                YLeaf conform_rate; //type: uint32
                                                YLeaf exceed_rate; //type: uint32

                                            class QueueInstanceLength : public Entity
                                            {
                                                public:
                                                    QueueInstanceLength();
                                                    ~QueueInstanceLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                            class QueueAverageLength : public Entity
                                            {
                                                public:
                                                    QueueAverageLength();
                                                    ~QueueAverageLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                            class QueueMaxLength : public Entity
                                            {
                                                public:
                                                    QueueMaxLength();
                                                    ~QueueMaxLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::QueueStatsArray


                                        class PoliceStatsArray : public Entity
                                        {
                                            public:
                                                PoliceStatsArray();
                                                ~PoliceStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf drop_packets; //type: uint64
                                                YLeaf drop_bytes; //type: uint64
                                                YLeaf conform_packets; //type: uint64
                                                YLeaf conform_bytes; //type: uint64
                                                YLeaf exceed_packets; //type: uint64
                                                YLeaf exceed_bytes; //type: uint64
                                                YLeaf violate_packets; //type: uint64
                                                YLeaf violate_bytes; //type: uint64
                                                YLeaf parent_drop_packets; //type: uint64
                                                YLeaf parent_drop_bytes; //type: uint64
                                                YLeaf conform_rate; //type: uint32
                                                YLeaf exceed_rate; //type: uint32
                                                YLeaf violate_rate; //type: uint32

                                            class ColorClassStats : public Entity
                                            {
                                                public:
                                                    ColorClassStats();
                                                    ~ColorClassStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf conform_class_conform_packets; //type: uint64
                                                    YLeaf conform_class_conform_bytes; //type: uint64
                                                    YLeaf conform_class_conform_rate; //type: uint32
                                                    YLeaf conform_class_exceed_packets; //type: uint64
                                                    YLeaf conform_class_exceed_bytes; //type: uint64
                                                    YLeaf conform_class_exceed_rate; //type: uint32
                                                    YLeaf conform_class_violate_packets; //type: uint64
                                                    YLeaf conform_class_violate_bytes; //type: uint64
                                                    YLeaf conform_class_violate_rate; //type: uint32
                                                    YLeaf exceed_class_exceed_packets; //type: uint64
                                                    YLeaf exceed_class_exceed_bytes; //type: uint64
                                                    YLeaf exceed_class_exceed_rate; //type: uint32
                                                    YLeaf exceed_class_violate_packets; //type: uint64
                                                    YLeaf exceed_class_violate_bytes; //type: uint64
                                                    YLeaf exceed_class_violate_rate; //type: uint32
                                                    YLeaf violate_class_violate_packets; //type: uint64
                                                    YLeaf violate_class_violate_bytes; //type: uint64
                                                    YLeaf violate_class_violate_rate; //type: uint32



                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::PoliceStatsArray


                                        class WredStatsArray : public Entity
                                        {
                                            public:
                                                WredStatsArray();
                                                ~WredStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf profile_title; //type: string
                                                YLeaf red_transmit_packets; //type: uint64
                                                YLeaf red_transmit_bytes; //type: uint64
                                                YLeaf random_drop_packets; //type: uint64
                                                YLeaf random_drop_bytes; //type: uint64
                                                YLeaf max_threshold_packets; //type: uint64
                                                YLeaf max_threshold_bytes; //type: uint64
                                                YLeaf red_ecn_marked_packets; //type: uint64
                                                YLeaf red_ecn_marked_bytes; //type: uint64

                                            class RedLabel : public Entity
                                            {
                                                public:
                                                    RedLabel();
                                                    ~RedLabel();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf wred_type; //type: WredEnum
                                                    YLeaf value_; //type: uint8



                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::WredStatsArray


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::CacStats> cac_stats;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics::ClassStat> > class_stat;


                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Statistics> statistics;


                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input


                            class Output : public Entity
                            {
                                public:
                                    Output();
                                    ~Output();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;



                                class Statistics : public Entity
                                {
                                    public:
                                        Statistics();
                                        ~Statistics();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf policy_name; //type: string
                                        YLeaf state; //type: PolicyStateEnum
                                        YLeaf state_description; //type: string
                                        YLeaf satid; //type: uint32

                                    class ClassStat : public Entity
                                    {
                                        public:
                                            ClassStat();
                                            ~ClassStat();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf counter_validity_bitmask; //type: uint64
                                            YLeaf class_name; //type: string
                                            YLeaf shared_queue_id; //type: uint32
                                            YLeaf queue_descr; //type: string
                                            YLeaf cac_state; //type: CacStateEnum

                                        class GeneralStats : public Entity
                                        {
                                            public:
                                                GeneralStats();
                                                ~GeneralStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf transmit_packets; //type: uint64
                                                YLeaf transmit_bytes; //type: uint64
                                                YLeaf total_drop_packets; //type: uint64
                                                YLeaf total_drop_bytes; //type: uint64
                                                YLeaf total_drop_rate; //type: uint32
                                                YLeaf match_data_rate; //type: uint32
                                                YLeaf total_transmit_rate; //type: uint32
                                                YLeaf pre_policy_matched_packets; //type: uint64
                                                YLeaf pre_policy_matched_bytes; //type: uint64



                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::GeneralStats


                                        class IphcStats : public Entity
                                        {
                                            public:
                                                IphcStats();
                                                ~IphcStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf non_tcp_total_out_packets; //type: uint64
                                                YLeaf non_tcp_total_out_bytes; //type: uint64
                                                YLeaf non_tcp_bytes_saved; //type: uint64
                                                YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                YLeaf tcp_total_out_packets; //type: uint64
                                                YLeaf tcp_total_out_bytes; //type: uint64
                                                YLeaf tcp_bytes_saved; //type: uint64
                                                YLeaf tcp_compressed_packets_out; //type: uint64
                                                YLeaf tcp_bytes_sent_rate; //type: uint32
                                                YLeaf tcp_full_header_packets_out; //type: uint64



                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::IphcStats


                                        class ChildPolicy : public Entity
                                        {
                                            public:
                                                ChildPolicy();
                                                ~ChildPolicy();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;





                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::ChildPolicy


                                        class CacStats : public Entity
                                        {
                                            public:
                                                CacStats();
                                                ~CacStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf drop_packets; //type: uint64
                                                YLeaf drop_bytes; //type: uint64
                                                YLeaf drop_rates; //type: uint32
                                                YLeaf admitpackets; //type: uint64
                                                YLeaf admit_bytes; //type: uint64
                                                YLeaf admit_rates; //type: uint32



                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::CacStats


                                        class QueueStatsArray : public Entity
                                        {
                                            public:
                                                QueueStatsArray();
                                                ~QueueStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf queue_id; //type: uint32
                                                YLeaf tail_drop_packets; //type: uint64
                                                YLeaf tail_drop_bytes; //type: uint64
                                                YLeaf atm_clp0_drop_packets; //type: uint64
                                                YLeaf atm_clp0_drop_bytes; //type: uint64
                                                YLeaf atm_clp1_drop_packets; //type: uint64
                                                YLeaf atm_clp1_drop_bytes; //type: uint64
                                                YLeaf queue_drop_threshold; //type: uint32
                                                YLeaf forced_wred_stats_display; //type: boolean
                                                YLeaf random_drop_packets; //type: uint64
                                                YLeaf random_drop_bytes; //type: uint64
                                                YLeaf max_threshold_packets; //type: uint64
                                                YLeaf max_threshold_bytes; //type: uint64
                                                YLeaf conform_packets; //type: uint64
                                                YLeaf conform_bytes; //type: uint64
                                                YLeaf exceed_packets; //type: uint64
                                                YLeaf exceed_bytes; //type: uint64
                                                YLeaf conform_rate; //type: uint32
                                                YLeaf exceed_rate; //type: uint32

                                            class QueueInstanceLength : public Entity
                                            {
                                                public:
                                                    QueueInstanceLength();
                                                    ~QueueInstanceLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                            class QueueAverageLength : public Entity
                                            {
                                                public:
                                                    QueueAverageLength();
                                                    ~QueueAverageLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                            class QueueMaxLength : public Entity
                                            {
                                                public:
                                                    QueueMaxLength();
                                                    ~QueueMaxLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::QueueStatsArray


                                        class PoliceStatsArray : public Entity
                                        {
                                            public:
                                                PoliceStatsArray();
                                                ~PoliceStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf drop_packets; //type: uint64
                                                YLeaf drop_bytes; //type: uint64
                                                YLeaf conform_packets; //type: uint64
                                                YLeaf conform_bytes; //type: uint64
                                                YLeaf exceed_packets; //type: uint64
                                                YLeaf exceed_bytes; //type: uint64
                                                YLeaf violate_packets; //type: uint64
                                                YLeaf violate_bytes; //type: uint64
                                                YLeaf parent_drop_packets; //type: uint64
                                                YLeaf parent_drop_bytes; //type: uint64
                                                YLeaf conform_rate; //type: uint32
                                                YLeaf exceed_rate; //type: uint32
                                                YLeaf violate_rate; //type: uint32

                                            class ColorClassStats : public Entity
                                            {
                                                public:
                                                    ColorClassStats();
                                                    ~ColorClassStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf conform_class_conform_packets; //type: uint64
                                                    YLeaf conform_class_conform_bytes; //type: uint64
                                                    YLeaf conform_class_conform_rate; //type: uint32
                                                    YLeaf conform_class_exceed_packets; //type: uint64
                                                    YLeaf conform_class_exceed_bytes; //type: uint64
                                                    YLeaf conform_class_exceed_rate; //type: uint32
                                                    YLeaf conform_class_violate_packets; //type: uint64
                                                    YLeaf conform_class_violate_bytes; //type: uint64
                                                    YLeaf conform_class_violate_rate; //type: uint32
                                                    YLeaf exceed_class_exceed_packets; //type: uint64
                                                    YLeaf exceed_class_exceed_bytes; //type: uint64
                                                    YLeaf exceed_class_exceed_rate; //type: uint32
                                                    YLeaf exceed_class_violate_packets; //type: uint64
                                                    YLeaf exceed_class_violate_bytes; //type: uint64
                                                    YLeaf exceed_class_violate_rate; //type: uint32
                                                    YLeaf violate_class_violate_packets; //type: uint64
                                                    YLeaf violate_class_violate_bytes; //type: uint64
                                                    YLeaf violate_class_violate_rate; //type: uint32



                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::PoliceStatsArray


                                        class WredStatsArray : public Entity
                                        {
                                            public:
                                                WredStatsArray();
                                                ~WredStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf profile_title; //type: string
                                                YLeaf red_transmit_packets; //type: uint64
                                                YLeaf red_transmit_bytes; //type: uint64
                                                YLeaf random_drop_packets; //type: uint64
                                                YLeaf random_drop_bytes; //type: uint64
                                                YLeaf max_threshold_packets; //type: uint64
                                                YLeaf max_threshold_bytes; //type: uint64
                                                YLeaf red_ecn_marked_packets; //type: uint64
                                                YLeaf red_ecn_marked_bytes; //type: uint64

                                            class RedLabel : public Entity
                                            {
                                                public:
                                                    RedLabel();
                                                    ~RedLabel();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf wred_type; //type: WredEnum
                                                    YLeaf value_; //type: uint8



                                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::WredStatsArray


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::CacStats> cac_stats;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics::ClassStat> > class_stat;


                                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Statistics> statistics;


                            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output


                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input> input;
                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces> member_interfaces;
                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output> output;


                        }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface


                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface> > nv_satellite_interface;


                    }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces


                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces> nv_satellite_interfaces;


                }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId


                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds::NvSatelliteId> > nv_satellite_id;


            }; // Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds


                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics::NvSatelliteIds> nv_satellite_ids;


        }; // Qos::NvSatellite::NvSatelliteStatistics


        class NvSatelliteStatus : public Entity
        {
            public:
                NvSatelliteStatus();
                ~NvSatelliteStatus();

                bool has_data() const override;
                bool has_operation() const override;
                EntityPath get_entity_path(Entity* parent) const override;
                std::string get_segment_path() const override;
                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                void set_value(const std::string & value_path, std::string value) override;
                std::map<std::string, Entity*> & get_children() override;



            class NvSatelliteIds : public Entity
            {
                public:
                    NvSatelliteIds();
                    ~NvSatelliteIds();

                    bool has_data() const override;
                    bool has_operation() const override;
                    EntityPath get_entity_path(Entity* parent) const override;
                    std::string get_segment_path() const override;
                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                    void set_value(const std::string & value_path, std::string value) override;
                    std::map<std::string, Entity*> & get_children() override;



                class NvSatelliteId : public Entity
                {
                    public:
                        NvSatelliteId();
                        ~NvSatelliteId();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;


                        YLeaf satellite_id; //type: int32

                    class NvSatelliteInterfaces : public Entity
                    {
                        public:
                            NvSatelliteInterfaces();
                            ~NvSatelliteInterfaces();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class NvSatelliteInterface : public Entity
                        {
                            public:
                                NvSatelliteInterface();
                                ~NvSatelliteInterface();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf interface_name; //type: string

                            class MemberInterfaces : public Entity
                            {
                                public:
                                    MemberInterfaces();
                                    ~MemberInterfaces();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;



                                class MemberInterface : public Entity
                                {
                                    public:
                                        MemberInterface();
                                        ~MemberInterface();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf interface_name; //type: string

                                    class Input : public Entity
                                    {
                                        public:
                                            Input();
                                            ~Input();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;



                                        class Status : public Entity
                                        {
                                            public:
                                                Status();
                                                ~Status();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf policy_name; //type: string
                                                YLeaf direction; //type: QosMaSatCapsTypeEnumEnum
                                                YLeaf last_operation; //type: QosCapsOperationEnumEnum
                                                YLeaf status; //type: string
                                                YLeaf error_message; //type: string



                                        }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Status


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input::Status> status;


                                    }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input


                                    class Output : public Entity
                                    {
                                        public:
                                            Output();
                                            ~Output();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;



                                        class Status : public Entity
                                        {
                                            public:
                                                Status();
                                                ~Status();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf policy_name; //type: string
                                                YLeaf direction; //type: QosMaSatCapsTypeEnumEnum
                                                YLeaf last_operation; //type: QosCapsOperationEnumEnum
                                                YLeaf status; //type: string
                                                YLeaf error_message; //type: string



                                        }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Status


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output::Status> status;


                                    }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Input> input;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface::Output> output;


                                }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface


                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces::MemberInterface> > member_interface;


                            }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces


                            class Input : public Entity
                            {
                                public:
                                    Input();
                                    ~Input();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;



                                class Status : public Entity
                                {
                                    public:
                                        Status();
                                        ~Status();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf policy_name; //type: string
                                        YLeaf direction; //type: QosMaSatCapsTypeEnumEnum
                                        YLeaf last_operation; //type: QosCapsOperationEnumEnum
                                        YLeaf status; //type: string
                                        YLeaf error_message; //type: string



                                }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Status


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input::Status> status;


                            }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input


                            class Status : public Entity
                            {
                                public:
                                    Status();
                                    ~Status();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf policy_name; //type: string
                                    YLeaf direction; //type: QosMaSatCapsTypeEnumEnum
                                    YLeaf last_operation; //type: QosCapsOperationEnumEnum
                                    YLeaf status; //type: string
                                    YLeaf error_message; //type: string



                            }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Status


                            class Output : public Entity
                            {
                                public:
                                    Output();
                                    ~Output();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;



                                class Status : public Entity
                                {
                                    public:
                                        Status();
                                        ~Status();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf policy_name; //type: string
                                        YLeaf direction; //type: QosMaSatCapsTypeEnumEnum
                                        YLeaf last_operation; //type: QosCapsOperationEnumEnum
                                        YLeaf status; //type: string
                                        YLeaf error_message; //type: string



                                }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Status


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output::Status> status;


                            }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output


                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Input> input;
                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::MemberInterfaces> member_interfaces;
                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Output> output;
                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface::Status> status;


                        }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface


                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces::NvSatelliteInterface> > nv_satellite_interface;


                    }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces


                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId::NvSatelliteInterfaces> nv_satellite_interfaces;


                }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId


                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds::NvSatelliteId> > nv_satellite_id;


            }; // Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds


                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus::NvSatelliteIds> nv_satellite_ids;


        }; // Qos::NvSatellite::NvSatelliteStatus


            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatistics> nv_satellite_statistics;
            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite::NvSatelliteStatus> nv_satellite_status;


    }; // Qos::NvSatellite


    class Nodes : public Entity
    {
        public:
            Nodes();
            ~Nodes();

            bool has_data() const override;
            bool has_operation() const override;
            EntityPath get_entity_path(Entity* parent) const override;
            std::string get_segment_path() const override;
            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
            void set_value(const std::string & value_path, std::string value) override;
            std::map<std::string, Entity*> & get_children() override;



        class Node : public Entity
        {
            public:
                Node();
                ~Node();

                bool has_data() const override;
                bool has_operation() const override;
                EntityPath get_entity_path(Entity* parent) const override;
                std::string get_segment_path() const override;
                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                void set_value(const std::string & value_path, std::string value) override;
                std::map<std::string, Entity*> & get_children() override;


                YLeaf node_name; //type: string

            class PolicyMap : public Entity
            {
                public:
                    PolicyMap();
                    ~PolicyMap();

                    bool has_data() const override;
                    bool has_operation() const override;
                    EntityPath get_entity_path(Entity* parent) const override;
                    std::string get_segment_path() const override;
                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                    void set_value(const std::string & value_path, std::string value) override;
                    std::map<std::string, Entity*> & get_children() override;



                class SharedPolicyInstances : public Entity
                {
                    public:
                        SharedPolicyInstances();
                        ~SharedPolicyInstances();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;



                    class SharedPolicyInstance : public Entity
                    {
                        public:
                            SharedPolicyInstance();
                            ~SharedPolicyInstance();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;


                            YLeaf spi_name; //type: string

                        class MemberInterfaces : public Entity
                        {
                            public:
                                MemberInterfaces();
                                ~MemberInterfaces();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;



                            class MemberInterface : public Entity
                            {
                                public:
                                    MemberInterface();
                                    ~MemberInterface();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf interface_name; //type: string

                                class SatelliteIds : public Entity
                                {
                                    public:
                                        SatelliteIds();
                                        ~SatelliteIds();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;



                                    class SatelliteId : public Entity
                                    {
                                        public:
                                            SatelliteId();
                                            ~SatelliteId();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf nv_satellite_id; //type: int32

                                        class Input : public Entity
                                        {
                                            public:
                                                Input();
                                                ~Input();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;



                                            class Statistics : public Entity
                                            {
                                                public:
                                                    Statistics();
                                                    ~Statistics();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf policy_name; //type: string
                                                    YLeaf state; //type: PolicyStateEnum
                                                    YLeaf state_description; //type: string
                                                    YLeaf satid; //type: uint32

                                                class ClassStat : public Entity
                                                {
                                                    public:
                                                        ClassStat();
                                                        ~ClassStat();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf counter_validity_bitmask; //type: uint64
                                                        YLeaf class_name; //type: string
                                                        YLeaf shared_queue_id; //type: uint32
                                                        YLeaf queue_descr; //type: string
                                                        YLeaf cac_state; //type: CacStateEnum

                                                    class GeneralStats : public Entity
                                                    {
                                                        public:
                                                            GeneralStats();
                                                            ~GeneralStats();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf transmit_packets; //type: uint64
                                                            YLeaf transmit_bytes; //type: uint64
                                                            YLeaf total_drop_packets; //type: uint64
                                                            YLeaf total_drop_bytes; //type: uint64
                                                            YLeaf total_drop_rate; //type: uint32
                                                            YLeaf match_data_rate; //type: uint32
                                                            YLeaf total_transmit_rate; //type: uint32
                                                            YLeaf pre_policy_matched_packets; //type: uint64
                                                            YLeaf pre_policy_matched_bytes; //type: uint64



                                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats


                                                    class IphcStats : public Entity
                                                    {
                                                        public:
                                                            IphcStats();
                                                            ~IphcStats();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf non_tcp_total_out_packets; //type: uint64
                                                            YLeaf non_tcp_total_out_bytes; //type: uint64
                                                            YLeaf non_tcp_bytes_saved; //type: uint64
                                                            YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                            YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                            YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                            YLeaf tcp_total_out_packets; //type: uint64
                                                            YLeaf tcp_total_out_bytes; //type: uint64
                                                            YLeaf tcp_bytes_saved; //type: uint64
                                                            YLeaf tcp_compressed_packets_out; //type: uint64
                                                            YLeaf tcp_bytes_sent_rate; //type: uint32
                                                            YLeaf tcp_full_header_packets_out; //type: uint64



                                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats


                                                    class ChildPolicy : public Entity
                                                    {
                                                        public:
                                                            ChildPolicy();
                                                            ~ChildPolicy();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;





                                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy


                                                    class CacStats : public Entity
                                                    {
                                                        public:
                                                            CacStats();
                                                            ~CacStats();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf drop_packets; //type: uint64
                                                            YLeaf drop_bytes; //type: uint64
                                                            YLeaf drop_rates; //type: uint32
                                                            YLeaf admitpackets; //type: uint64
                                                            YLeaf admit_bytes; //type: uint64
                                                            YLeaf admit_rates; //type: uint32



                                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats


                                                    class QueueStatsArray : public Entity
                                                    {
                                                        public:
                                                            QueueStatsArray();
                                                            ~QueueStatsArray();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf queue_id; //type: uint32
                                                            YLeaf tail_drop_packets; //type: uint64
                                                            YLeaf tail_drop_bytes; //type: uint64
                                                            YLeaf atm_clp0_drop_packets; //type: uint64
                                                            YLeaf atm_clp0_drop_bytes; //type: uint64
                                                            YLeaf atm_clp1_drop_packets; //type: uint64
                                                            YLeaf atm_clp1_drop_bytes; //type: uint64
                                                            YLeaf queue_drop_threshold; //type: uint32
                                                            YLeaf forced_wred_stats_display; //type: boolean
                                                            YLeaf random_drop_packets; //type: uint64
                                                            YLeaf random_drop_bytes; //type: uint64
                                                            YLeaf max_threshold_packets; //type: uint64
                                                            YLeaf max_threshold_bytes; //type: uint64
                                                            YLeaf conform_packets; //type: uint64
                                                            YLeaf conform_bytes; //type: uint64
                                                            YLeaf exceed_packets; //type: uint64
                                                            YLeaf exceed_bytes; //type: uint64
                                                            YLeaf conform_rate; //type: uint32
                                                            YLeaf exceed_rate; //type: uint32

                                                        class QueueInstanceLength : public Entity
                                                        {
                                                            public:
                                                                QueueInstanceLength();
                                                                ~QueueInstanceLength();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf value_; //type: uint32
                                                                YLeaf unit; //type: PolicyParamUnitEnum



                                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                        class QueueAverageLength : public Entity
                                                        {
                                                            public:
                                                                QueueAverageLength();
                                                                ~QueueAverageLength();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf value_; //type: uint32
                                                                YLeaf unit; //type: PolicyParamUnitEnum



                                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                        class QueueMaxLength : public Entity
                                                        {
                                                            public:
                                                                QueueMaxLength();
                                                                ~QueueMaxLength();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf value_; //type: uint32
                                                                YLeaf unit; //type: PolicyParamUnitEnum



                                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray


                                                    class PoliceStatsArray : public Entity
                                                    {
                                                        public:
                                                            PoliceStatsArray();
                                                            ~PoliceStatsArray();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf drop_packets; //type: uint64
                                                            YLeaf drop_bytes; //type: uint64
                                                            YLeaf conform_packets; //type: uint64
                                                            YLeaf conform_bytes; //type: uint64
                                                            YLeaf exceed_packets; //type: uint64
                                                            YLeaf exceed_bytes; //type: uint64
                                                            YLeaf violate_packets; //type: uint64
                                                            YLeaf violate_bytes; //type: uint64
                                                            YLeaf parent_drop_packets; //type: uint64
                                                            YLeaf parent_drop_bytes; //type: uint64
                                                            YLeaf conform_rate; //type: uint32
                                                            YLeaf exceed_rate; //type: uint32
                                                            YLeaf violate_rate; //type: uint32

                                                        class ColorClassStats : public Entity
                                                        {
                                                            public:
                                                                ColorClassStats();
                                                                ~ColorClassStats();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf conform_class_conform_packets; //type: uint64
                                                                YLeaf conform_class_conform_bytes; //type: uint64
                                                                YLeaf conform_class_conform_rate; //type: uint32
                                                                YLeaf conform_class_exceed_packets; //type: uint64
                                                                YLeaf conform_class_exceed_bytes; //type: uint64
                                                                YLeaf conform_class_exceed_rate; //type: uint32
                                                                YLeaf conform_class_violate_packets; //type: uint64
                                                                YLeaf conform_class_violate_bytes; //type: uint64
                                                                YLeaf conform_class_violate_rate; //type: uint32
                                                                YLeaf exceed_class_exceed_packets; //type: uint64
                                                                YLeaf exceed_class_exceed_bytes; //type: uint64
                                                                YLeaf exceed_class_exceed_rate; //type: uint32
                                                                YLeaf exceed_class_violate_packets; //type: uint64
                                                                YLeaf exceed_class_violate_bytes; //type: uint64
                                                                YLeaf exceed_class_violate_rate; //type: uint32
                                                                YLeaf violate_class_violate_packets; //type: uint64
                                                                YLeaf violate_class_violate_bytes; //type: uint64
                                                                YLeaf violate_class_violate_rate; //type: uint32



                                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray


                                                    class WredStatsArray : public Entity
                                                    {
                                                        public:
                                                            WredStatsArray();
                                                            ~WredStatsArray();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf profile_title; //type: string
                                                            YLeaf red_transmit_packets; //type: uint64
                                                            YLeaf red_transmit_bytes; //type: uint64
                                                            YLeaf random_drop_packets; //type: uint64
                                                            YLeaf random_drop_bytes; //type: uint64
                                                            YLeaf max_threshold_packets; //type: uint64
                                                            YLeaf max_threshold_bytes; //type: uint64
                                                            YLeaf red_ecn_marked_packets; //type: uint64
                                                            YLeaf red_ecn_marked_bytes; //type: uint64

                                                        class RedLabel : public Entity
                                                        {
                                                            public:
                                                                RedLabel();
                                                                ~RedLabel();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf wred_type; //type: WredEnum
                                                                YLeaf value_; //type: uint8



                                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray


                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats> cac_stats;
                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat> > class_stat;


                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics> statistics;


                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input


                                        class Output : public Entity
                                        {
                                            public:
                                                Output();
                                                ~Output();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;



                                            class Statistics : public Entity
                                            {
                                                public:
                                                    Statistics();
                                                    ~Statistics();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf policy_name; //type: string
                                                    YLeaf state; //type: PolicyStateEnum
                                                    YLeaf state_description; //type: string
                                                    YLeaf satid; //type: uint32

                                                class ClassStat : public Entity
                                                {
                                                    public:
                                                        ClassStat();
                                                        ~ClassStat();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf counter_validity_bitmask; //type: uint64
                                                        YLeaf class_name; //type: string
                                                        YLeaf shared_queue_id; //type: uint32
                                                        YLeaf queue_descr; //type: string
                                                        YLeaf cac_state; //type: CacStateEnum

                                                    class GeneralStats : public Entity
                                                    {
                                                        public:
                                                            GeneralStats();
                                                            ~GeneralStats();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf transmit_packets; //type: uint64
                                                            YLeaf transmit_bytes; //type: uint64
                                                            YLeaf total_drop_packets; //type: uint64
                                                            YLeaf total_drop_bytes; //type: uint64
                                                            YLeaf total_drop_rate; //type: uint32
                                                            YLeaf match_data_rate; //type: uint32
                                                            YLeaf total_transmit_rate; //type: uint32
                                                            YLeaf pre_policy_matched_packets; //type: uint64
                                                            YLeaf pre_policy_matched_bytes; //type: uint64



                                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats


                                                    class IphcStats : public Entity
                                                    {
                                                        public:
                                                            IphcStats();
                                                            ~IphcStats();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf non_tcp_total_out_packets; //type: uint64
                                                            YLeaf non_tcp_total_out_bytes; //type: uint64
                                                            YLeaf non_tcp_bytes_saved; //type: uint64
                                                            YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                            YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                            YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                            YLeaf tcp_total_out_packets; //type: uint64
                                                            YLeaf tcp_total_out_bytes; //type: uint64
                                                            YLeaf tcp_bytes_saved; //type: uint64
                                                            YLeaf tcp_compressed_packets_out; //type: uint64
                                                            YLeaf tcp_bytes_sent_rate; //type: uint32
                                                            YLeaf tcp_full_header_packets_out; //type: uint64



                                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats


                                                    class ChildPolicy : public Entity
                                                    {
                                                        public:
                                                            ChildPolicy();
                                                            ~ChildPolicy();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;





                                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy


                                                    class CacStats : public Entity
                                                    {
                                                        public:
                                                            CacStats();
                                                            ~CacStats();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf drop_packets; //type: uint64
                                                            YLeaf drop_bytes; //type: uint64
                                                            YLeaf drop_rates; //type: uint32
                                                            YLeaf admitpackets; //type: uint64
                                                            YLeaf admit_bytes; //type: uint64
                                                            YLeaf admit_rates; //type: uint32



                                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats


                                                    class QueueStatsArray : public Entity
                                                    {
                                                        public:
                                                            QueueStatsArray();
                                                            ~QueueStatsArray();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf queue_id; //type: uint32
                                                            YLeaf tail_drop_packets; //type: uint64
                                                            YLeaf tail_drop_bytes; //type: uint64
                                                            YLeaf atm_clp0_drop_packets; //type: uint64
                                                            YLeaf atm_clp0_drop_bytes; //type: uint64
                                                            YLeaf atm_clp1_drop_packets; //type: uint64
                                                            YLeaf atm_clp1_drop_bytes; //type: uint64
                                                            YLeaf queue_drop_threshold; //type: uint32
                                                            YLeaf forced_wred_stats_display; //type: boolean
                                                            YLeaf random_drop_packets; //type: uint64
                                                            YLeaf random_drop_bytes; //type: uint64
                                                            YLeaf max_threshold_packets; //type: uint64
                                                            YLeaf max_threshold_bytes; //type: uint64
                                                            YLeaf conform_packets; //type: uint64
                                                            YLeaf conform_bytes; //type: uint64
                                                            YLeaf exceed_packets; //type: uint64
                                                            YLeaf exceed_bytes; //type: uint64
                                                            YLeaf conform_rate; //type: uint32
                                                            YLeaf exceed_rate; //type: uint32

                                                        class QueueInstanceLength : public Entity
                                                        {
                                                            public:
                                                                QueueInstanceLength();
                                                                ~QueueInstanceLength();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf value_; //type: uint32
                                                                YLeaf unit; //type: PolicyParamUnitEnum



                                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                        class QueueAverageLength : public Entity
                                                        {
                                                            public:
                                                                QueueAverageLength();
                                                                ~QueueAverageLength();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf value_; //type: uint32
                                                                YLeaf unit; //type: PolicyParamUnitEnum



                                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                        class QueueMaxLength : public Entity
                                                        {
                                                            public:
                                                                QueueMaxLength();
                                                                ~QueueMaxLength();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf value_; //type: uint32
                                                                YLeaf unit; //type: PolicyParamUnitEnum



                                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray


                                                    class PoliceStatsArray : public Entity
                                                    {
                                                        public:
                                                            PoliceStatsArray();
                                                            ~PoliceStatsArray();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf drop_packets; //type: uint64
                                                            YLeaf drop_bytes; //type: uint64
                                                            YLeaf conform_packets; //type: uint64
                                                            YLeaf conform_bytes; //type: uint64
                                                            YLeaf exceed_packets; //type: uint64
                                                            YLeaf exceed_bytes; //type: uint64
                                                            YLeaf violate_packets; //type: uint64
                                                            YLeaf violate_bytes; //type: uint64
                                                            YLeaf parent_drop_packets; //type: uint64
                                                            YLeaf parent_drop_bytes; //type: uint64
                                                            YLeaf conform_rate; //type: uint32
                                                            YLeaf exceed_rate; //type: uint32
                                                            YLeaf violate_rate; //type: uint32

                                                        class ColorClassStats : public Entity
                                                        {
                                                            public:
                                                                ColorClassStats();
                                                                ~ColorClassStats();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf conform_class_conform_packets; //type: uint64
                                                                YLeaf conform_class_conform_bytes; //type: uint64
                                                                YLeaf conform_class_conform_rate; //type: uint32
                                                                YLeaf conform_class_exceed_packets; //type: uint64
                                                                YLeaf conform_class_exceed_bytes; //type: uint64
                                                                YLeaf conform_class_exceed_rate; //type: uint32
                                                                YLeaf conform_class_violate_packets; //type: uint64
                                                                YLeaf conform_class_violate_bytes; //type: uint64
                                                                YLeaf conform_class_violate_rate; //type: uint32
                                                                YLeaf exceed_class_exceed_packets; //type: uint64
                                                                YLeaf exceed_class_exceed_bytes; //type: uint64
                                                                YLeaf exceed_class_exceed_rate; //type: uint32
                                                                YLeaf exceed_class_violate_packets; //type: uint64
                                                                YLeaf exceed_class_violate_bytes; //type: uint64
                                                                YLeaf exceed_class_violate_rate; //type: uint32
                                                                YLeaf violate_class_violate_packets; //type: uint64
                                                                YLeaf violate_class_violate_bytes; //type: uint64
                                                                YLeaf violate_class_violate_rate; //type: uint32



                                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray


                                                    class WredStatsArray : public Entity
                                                    {
                                                        public:
                                                            WredStatsArray();
                                                            ~WredStatsArray();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf profile_title; //type: string
                                                            YLeaf red_transmit_packets; //type: uint64
                                                            YLeaf red_transmit_bytes; //type: uint64
                                                            YLeaf random_drop_packets; //type: uint64
                                                            YLeaf random_drop_bytes; //type: uint64
                                                            YLeaf max_threshold_packets; //type: uint64
                                                            YLeaf max_threshold_bytes; //type: uint64
                                                            YLeaf red_ecn_marked_packets; //type: uint64
                                                            YLeaf red_ecn_marked_bytes; //type: uint64

                                                        class RedLabel : public Entity
                                                        {
                                                            public:
                                                                RedLabel();
                                                                ~RedLabel();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf wred_type; //type: WredEnum
                                                                YLeaf value_; //type: uint8



                                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray


                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats> cac_stats;
                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat> > class_stat;


                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics> statistics;


                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input> input;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output> output;


                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId> > satellite_id;


                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds


                                class Input : public Entity
                                {
                                    public:
                                        Input();
                                        ~Input();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;



                                    class Statistics : public Entity
                                    {
                                        public:
                                            Statistics();
                                            ~Statistics();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf policy_name; //type: string
                                            YLeaf state; //type: PolicyStateEnum
                                            YLeaf state_description; //type: string
                                            YLeaf satid; //type: uint32

                                        class ClassStat : public Entity
                                        {
                                            public:
                                                ClassStat();
                                                ~ClassStat();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf counter_validity_bitmask; //type: uint64
                                                YLeaf class_name; //type: string
                                                YLeaf shared_queue_id; //type: uint32
                                                YLeaf queue_descr; //type: string
                                                YLeaf cac_state; //type: CacStateEnum

                                            class GeneralStats : public Entity
                                            {
                                                public:
                                                    GeneralStats();
                                                    ~GeneralStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf transmit_packets; //type: uint64
                                                    YLeaf transmit_bytes; //type: uint64
                                                    YLeaf total_drop_packets; //type: uint64
                                                    YLeaf total_drop_bytes; //type: uint64
                                                    YLeaf total_drop_rate; //type: uint32
                                                    YLeaf match_data_rate; //type: uint32
                                                    YLeaf total_transmit_rate; //type: uint32
                                                    YLeaf pre_policy_matched_packets; //type: uint64
                                                    YLeaf pre_policy_matched_bytes; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::GeneralStats


                                            class IphcStats : public Entity
                                            {
                                                public:
                                                    IphcStats();
                                                    ~IphcStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf non_tcp_total_out_packets; //type: uint64
                                                    YLeaf non_tcp_total_out_bytes; //type: uint64
                                                    YLeaf non_tcp_bytes_saved; //type: uint64
                                                    YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                    YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                    YLeaf tcp_total_out_packets; //type: uint64
                                                    YLeaf tcp_total_out_bytes; //type: uint64
                                                    YLeaf tcp_bytes_saved; //type: uint64
                                                    YLeaf tcp_compressed_packets_out; //type: uint64
                                                    YLeaf tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf tcp_full_header_packets_out; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::IphcStats


                                            class ChildPolicy : public Entity
                                            {
                                                public:
                                                    ChildPolicy();
                                                    ~ChildPolicy();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;





                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::ChildPolicy


                                            class CacStats : public Entity
                                            {
                                                public:
                                                    CacStats();
                                                    ~CacStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf drop_rates; //type: uint32
                                                    YLeaf admitpackets; //type: uint64
                                                    YLeaf admit_bytes; //type: uint64
                                                    YLeaf admit_rates; //type: uint32



                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::CacStats


                                            class QueueStatsArray : public Entity
                                            {
                                                public:
                                                    QueueStatsArray();
                                                    ~QueueStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf queue_id; //type: uint32
                                                    YLeaf tail_drop_packets; //type: uint64
                                                    YLeaf tail_drop_bytes; //type: uint64
                                                    YLeaf atm_clp0_drop_packets; //type: uint64
                                                    YLeaf atm_clp0_drop_bytes; //type: uint64
                                                    YLeaf atm_clp1_drop_packets; //type: uint64
                                                    YLeaf atm_clp1_drop_bytes; //type: uint64
                                                    YLeaf queue_drop_threshold; //type: uint32
                                                    YLeaf forced_wred_stats_display; //type: boolean
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32

                                                class QueueInstanceLength : public Entity
                                                {
                                                    public:
                                                        QueueInstanceLength();
                                                        ~QueueInstanceLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                class QueueAverageLength : public Entity
                                                {
                                                    public:
                                                        QueueAverageLength();
                                                        ~QueueAverageLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                class QueueMaxLength : public Entity
                                                {
                                                    public:
                                                        QueueMaxLength();
                                                        ~QueueMaxLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray


                                            class PoliceStatsArray : public Entity
                                            {
                                                public:
                                                    PoliceStatsArray();
                                                    ~PoliceStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf violate_packets; //type: uint64
                                                    YLeaf violate_bytes; //type: uint64
                                                    YLeaf parent_drop_packets; //type: uint64
                                                    YLeaf parent_drop_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32
                                                    YLeaf violate_rate; //type: uint32

                                                class ColorClassStats : public Entity
                                                {
                                                    public:
                                                        ColorClassStats();
                                                        ~ColorClassStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf conform_class_conform_packets; //type: uint64
                                                        YLeaf conform_class_conform_bytes; //type: uint64
                                                        YLeaf conform_class_conform_rate; //type: uint32
                                                        YLeaf conform_class_exceed_packets; //type: uint64
                                                        YLeaf conform_class_exceed_bytes; //type: uint64
                                                        YLeaf conform_class_exceed_rate; //type: uint32
                                                        YLeaf conform_class_violate_packets; //type: uint64
                                                        YLeaf conform_class_violate_bytes; //type: uint64
                                                        YLeaf conform_class_violate_rate; //type: uint32
                                                        YLeaf exceed_class_exceed_packets; //type: uint64
                                                        YLeaf exceed_class_exceed_bytes; //type: uint64
                                                        YLeaf exceed_class_exceed_rate; //type: uint32
                                                        YLeaf exceed_class_violate_packets; //type: uint64
                                                        YLeaf exceed_class_violate_bytes; //type: uint64
                                                        YLeaf exceed_class_violate_rate; //type: uint32
                                                        YLeaf violate_class_violate_packets; //type: uint64
                                                        YLeaf violate_class_violate_bytes; //type: uint64
                                                        YLeaf violate_class_violate_rate; //type: uint32



                                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray


                                            class WredStatsArray : public Entity
                                            {
                                                public:
                                                    WredStatsArray();
                                                    ~WredStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf profile_title; //type: string
                                                    YLeaf red_transmit_packets; //type: uint64
                                                    YLeaf red_transmit_bytes; //type: uint64
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf red_ecn_marked_packets; //type: uint64
                                                    YLeaf red_ecn_marked_bytes; //type: uint64

                                                class RedLabel : public Entity
                                                {
                                                    public:
                                                        RedLabel();
                                                        ~RedLabel();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf wred_type; //type: WredEnum
                                                        YLeaf value_; //type: uint8



                                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::CacStats> cac_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat> > class_stat;


                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input::Statistics> statistics;


                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input


                                class Output : public Entity
                                {
                                    public:
                                        Output();
                                        ~Output();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;



                                    class Statistics : public Entity
                                    {
                                        public:
                                            Statistics();
                                            ~Statistics();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf policy_name; //type: string
                                            YLeaf state; //type: PolicyStateEnum
                                            YLeaf state_description; //type: string
                                            YLeaf satid; //type: uint32

                                        class ClassStat : public Entity
                                        {
                                            public:
                                                ClassStat();
                                                ~ClassStat();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf counter_validity_bitmask; //type: uint64
                                                YLeaf class_name; //type: string
                                                YLeaf shared_queue_id; //type: uint32
                                                YLeaf queue_descr; //type: string
                                                YLeaf cac_state; //type: CacStateEnum

                                            class GeneralStats : public Entity
                                            {
                                                public:
                                                    GeneralStats();
                                                    ~GeneralStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf transmit_packets; //type: uint64
                                                    YLeaf transmit_bytes; //type: uint64
                                                    YLeaf total_drop_packets; //type: uint64
                                                    YLeaf total_drop_bytes; //type: uint64
                                                    YLeaf total_drop_rate; //type: uint32
                                                    YLeaf match_data_rate; //type: uint32
                                                    YLeaf total_transmit_rate; //type: uint32
                                                    YLeaf pre_policy_matched_packets; //type: uint64
                                                    YLeaf pre_policy_matched_bytes; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::GeneralStats


                                            class IphcStats : public Entity
                                            {
                                                public:
                                                    IphcStats();
                                                    ~IphcStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf non_tcp_total_out_packets; //type: uint64
                                                    YLeaf non_tcp_total_out_bytes; //type: uint64
                                                    YLeaf non_tcp_bytes_saved; //type: uint64
                                                    YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                    YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                    YLeaf tcp_total_out_packets; //type: uint64
                                                    YLeaf tcp_total_out_bytes; //type: uint64
                                                    YLeaf tcp_bytes_saved; //type: uint64
                                                    YLeaf tcp_compressed_packets_out; //type: uint64
                                                    YLeaf tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf tcp_full_header_packets_out; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::IphcStats


                                            class ChildPolicy : public Entity
                                            {
                                                public:
                                                    ChildPolicy();
                                                    ~ChildPolicy();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;





                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::ChildPolicy


                                            class CacStats : public Entity
                                            {
                                                public:
                                                    CacStats();
                                                    ~CacStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf drop_rates; //type: uint32
                                                    YLeaf admitpackets; //type: uint64
                                                    YLeaf admit_bytes; //type: uint64
                                                    YLeaf admit_rates; //type: uint32



                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::CacStats


                                            class QueueStatsArray : public Entity
                                            {
                                                public:
                                                    QueueStatsArray();
                                                    ~QueueStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf queue_id; //type: uint32
                                                    YLeaf tail_drop_packets; //type: uint64
                                                    YLeaf tail_drop_bytes; //type: uint64
                                                    YLeaf atm_clp0_drop_packets; //type: uint64
                                                    YLeaf atm_clp0_drop_bytes; //type: uint64
                                                    YLeaf atm_clp1_drop_packets; //type: uint64
                                                    YLeaf atm_clp1_drop_bytes; //type: uint64
                                                    YLeaf queue_drop_threshold; //type: uint32
                                                    YLeaf forced_wred_stats_display; //type: boolean
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32

                                                class QueueInstanceLength : public Entity
                                                {
                                                    public:
                                                        QueueInstanceLength();
                                                        ~QueueInstanceLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                class QueueAverageLength : public Entity
                                                {
                                                    public:
                                                        QueueAverageLength();
                                                        ~QueueAverageLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                class QueueMaxLength : public Entity
                                                {
                                                    public:
                                                        QueueMaxLength();
                                                        ~QueueMaxLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray


                                            class PoliceStatsArray : public Entity
                                            {
                                                public:
                                                    PoliceStatsArray();
                                                    ~PoliceStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf violate_packets; //type: uint64
                                                    YLeaf violate_bytes; //type: uint64
                                                    YLeaf parent_drop_packets; //type: uint64
                                                    YLeaf parent_drop_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32
                                                    YLeaf violate_rate; //type: uint32

                                                class ColorClassStats : public Entity
                                                {
                                                    public:
                                                        ColorClassStats();
                                                        ~ColorClassStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf conform_class_conform_packets; //type: uint64
                                                        YLeaf conform_class_conform_bytes; //type: uint64
                                                        YLeaf conform_class_conform_rate; //type: uint32
                                                        YLeaf conform_class_exceed_packets; //type: uint64
                                                        YLeaf conform_class_exceed_bytes; //type: uint64
                                                        YLeaf conform_class_exceed_rate; //type: uint32
                                                        YLeaf conform_class_violate_packets; //type: uint64
                                                        YLeaf conform_class_violate_bytes; //type: uint64
                                                        YLeaf conform_class_violate_rate; //type: uint32
                                                        YLeaf exceed_class_exceed_packets; //type: uint64
                                                        YLeaf exceed_class_exceed_bytes; //type: uint64
                                                        YLeaf exceed_class_exceed_rate; //type: uint32
                                                        YLeaf exceed_class_violate_packets; //type: uint64
                                                        YLeaf exceed_class_violate_bytes; //type: uint64
                                                        YLeaf exceed_class_violate_rate; //type: uint32
                                                        YLeaf violate_class_violate_packets; //type: uint64
                                                        YLeaf violate_class_violate_bytes; //type: uint64
                                                        YLeaf violate_class_violate_rate; //type: uint32



                                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray


                                            class WredStatsArray : public Entity
                                            {
                                                public:
                                                    WredStatsArray();
                                                    ~WredStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf profile_title; //type: string
                                                    YLeaf red_transmit_packets; //type: uint64
                                                    YLeaf red_transmit_bytes; //type: uint64
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf red_ecn_marked_packets; //type: uint64
                                                    YLeaf red_ecn_marked_bytes; //type: uint64

                                                class RedLabel : public Entity
                                                {
                                                    public:
                                                        RedLabel();
                                                        ~RedLabel();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf wred_type; //type: WredEnum
                                                        YLeaf value_; //type: uint8



                                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::CacStats> cac_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat> > class_stat;


                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output::Statistics> statistics;


                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Input> input;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::Output> output;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface::SatelliteIds> satellite_ids;


                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces::MemberInterface> > member_interface;


                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces


                        class Input : public Entity
                        {
                            public:
                                Input();
                                ~Input();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;



                            class Statistics : public Entity
                            {
                                public:
                                    Statistics();
                                    ~Statistics();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf policy_name; //type: string
                                    YLeaf state; //type: PolicyStateEnum
                                    YLeaf state_description; //type: string
                                    YLeaf satid; //type: uint32

                                class ClassStat : public Entity
                                {
                                    public:
                                        ClassStat();
                                        ~ClassStat();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf counter_validity_bitmask; //type: uint64
                                        YLeaf class_name; //type: string
                                        YLeaf shared_queue_id; //type: uint32
                                        YLeaf queue_descr; //type: string
                                        YLeaf cac_state; //type: CacStateEnum

                                    class GeneralStats : public Entity
                                    {
                                        public:
                                            GeneralStats();
                                            ~GeneralStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf transmit_packets; //type: uint64
                                            YLeaf transmit_bytes; //type: uint64
                                            YLeaf total_drop_packets; //type: uint64
                                            YLeaf total_drop_bytes; //type: uint64
                                            YLeaf total_drop_rate; //type: uint32
                                            YLeaf match_data_rate; //type: uint32
                                            YLeaf total_transmit_rate; //type: uint32
                                            YLeaf pre_policy_matched_packets; //type: uint64
                                            YLeaf pre_policy_matched_bytes; //type: uint64



                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::GeneralStats


                                    class IphcStats : public Entity
                                    {
                                        public:
                                            IphcStats();
                                            ~IphcStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf non_tcp_total_out_packets; //type: uint64
                                            YLeaf non_tcp_total_out_bytes; //type: uint64
                                            YLeaf non_tcp_bytes_saved; //type: uint64
                                            YLeaf non_tcp_compressed_packets_out; //type: uint64
                                            YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                            YLeaf non_tcp_full_header_packets_out; //type: uint64
                                            YLeaf tcp_total_out_packets; //type: uint64
                                            YLeaf tcp_total_out_bytes; //type: uint64
                                            YLeaf tcp_bytes_saved; //type: uint64
                                            YLeaf tcp_compressed_packets_out; //type: uint64
                                            YLeaf tcp_bytes_sent_rate; //type: uint32
                                            YLeaf tcp_full_header_packets_out; //type: uint64



                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::IphcStats


                                    class ChildPolicy : public Entity
                                    {
                                        public:
                                            ChildPolicy();
                                            ~ChildPolicy();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;





                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::ChildPolicy


                                    class CacStats : public Entity
                                    {
                                        public:
                                            CacStats();
                                            ~CacStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf drop_packets; //type: uint64
                                            YLeaf drop_bytes; //type: uint64
                                            YLeaf drop_rates; //type: uint32
                                            YLeaf admitpackets; //type: uint64
                                            YLeaf admit_bytes; //type: uint64
                                            YLeaf admit_rates; //type: uint32



                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::CacStats


                                    class QueueStatsArray : public Entity
                                    {
                                        public:
                                            QueueStatsArray();
                                            ~QueueStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf queue_id; //type: uint32
                                            YLeaf tail_drop_packets; //type: uint64
                                            YLeaf tail_drop_bytes; //type: uint64
                                            YLeaf atm_clp0_drop_packets; //type: uint64
                                            YLeaf atm_clp0_drop_bytes; //type: uint64
                                            YLeaf atm_clp1_drop_packets; //type: uint64
                                            YLeaf atm_clp1_drop_bytes; //type: uint64
                                            YLeaf queue_drop_threshold; //type: uint32
                                            YLeaf forced_wred_stats_display; //type: boolean
                                            YLeaf random_drop_packets; //type: uint64
                                            YLeaf random_drop_bytes; //type: uint64
                                            YLeaf max_threshold_packets; //type: uint64
                                            YLeaf max_threshold_bytes; //type: uint64
                                            YLeaf conform_packets; //type: uint64
                                            YLeaf conform_bytes; //type: uint64
                                            YLeaf exceed_packets; //type: uint64
                                            YLeaf exceed_bytes; //type: uint64
                                            YLeaf conform_rate; //type: uint32
                                            YLeaf exceed_rate; //type: uint32

                                        class QueueInstanceLength : public Entity
                                        {
                                            public:
                                                QueueInstanceLength();
                                                ~QueueInstanceLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                        class QueueAverageLength : public Entity
                                        {
                                            public:
                                                QueueAverageLength();
                                                ~QueueAverageLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                        class QueueMaxLength : public Entity
                                        {
                                            public:
                                                QueueMaxLength();
                                                ~QueueMaxLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::QueueStatsArray


                                    class PoliceStatsArray : public Entity
                                    {
                                        public:
                                            PoliceStatsArray();
                                            ~PoliceStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf drop_packets; //type: uint64
                                            YLeaf drop_bytes; //type: uint64
                                            YLeaf conform_packets; //type: uint64
                                            YLeaf conform_bytes; //type: uint64
                                            YLeaf exceed_packets; //type: uint64
                                            YLeaf exceed_bytes; //type: uint64
                                            YLeaf violate_packets; //type: uint64
                                            YLeaf violate_bytes; //type: uint64
                                            YLeaf parent_drop_packets; //type: uint64
                                            YLeaf parent_drop_bytes; //type: uint64
                                            YLeaf conform_rate; //type: uint32
                                            YLeaf exceed_rate; //type: uint32
                                            YLeaf violate_rate; //type: uint32

                                        class ColorClassStats : public Entity
                                        {
                                            public:
                                                ColorClassStats();
                                                ~ColorClassStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf conform_class_conform_packets; //type: uint64
                                                YLeaf conform_class_conform_bytes; //type: uint64
                                                YLeaf conform_class_conform_rate; //type: uint32
                                                YLeaf conform_class_exceed_packets; //type: uint64
                                                YLeaf conform_class_exceed_bytes; //type: uint64
                                                YLeaf conform_class_exceed_rate; //type: uint32
                                                YLeaf conform_class_violate_packets; //type: uint64
                                                YLeaf conform_class_violate_bytes; //type: uint64
                                                YLeaf conform_class_violate_rate; //type: uint32
                                                YLeaf exceed_class_exceed_packets; //type: uint64
                                                YLeaf exceed_class_exceed_bytes; //type: uint64
                                                YLeaf exceed_class_exceed_rate; //type: uint32
                                                YLeaf exceed_class_violate_packets; //type: uint64
                                                YLeaf exceed_class_violate_bytes; //type: uint64
                                                YLeaf exceed_class_violate_rate; //type: uint32
                                                YLeaf violate_class_violate_packets; //type: uint64
                                                YLeaf violate_class_violate_bytes; //type: uint64
                                                YLeaf violate_class_violate_rate; //type: uint32



                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::PoliceStatsArray


                                    class WredStatsArray : public Entity
                                    {
                                        public:
                                            WredStatsArray();
                                            ~WredStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf profile_title; //type: string
                                            YLeaf red_transmit_packets; //type: uint64
                                            YLeaf red_transmit_bytes; //type: uint64
                                            YLeaf random_drop_packets; //type: uint64
                                            YLeaf random_drop_bytes; //type: uint64
                                            YLeaf max_threshold_packets; //type: uint64
                                            YLeaf max_threshold_bytes; //type: uint64
                                            YLeaf red_ecn_marked_packets; //type: uint64
                                            YLeaf red_ecn_marked_bytes; //type: uint64

                                        class RedLabel : public Entity
                                        {
                                            public:
                                                RedLabel();
                                                ~RedLabel();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf wred_type; //type: WredEnum
                                                YLeaf value_; //type: uint8



                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::WredStatsArray


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::CacStats> cac_stats;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat


                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics::ClassStat> > class_stat;


                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics


                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input::Statistics> statistics;


                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input


                        class Output : public Entity
                        {
                            public:
                                Output();
                                ~Output();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;



                            class Statistics : public Entity
                            {
                                public:
                                    Statistics();
                                    ~Statistics();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf policy_name; //type: string
                                    YLeaf state; //type: PolicyStateEnum
                                    YLeaf state_description; //type: string
                                    YLeaf satid; //type: uint32

                                class ClassStat : public Entity
                                {
                                    public:
                                        ClassStat();
                                        ~ClassStat();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf counter_validity_bitmask; //type: uint64
                                        YLeaf class_name; //type: string
                                        YLeaf shared_queue_id; //type: uint32
                                        YLeaf queue_descr; //type: string
                                        YLeaf cac_state; //type: CacStateEnum

                                    class GeneralStats : public Entity
                                    {
                                        public:
                                            GeneralStats();
                                            ~GeneralStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf transmit_packets; //type: uint64
                                            YLeaf transmit_bytes; //type: uint64
                                            YLeaf total_drop_packets; //type: uint64
                                            YLeaf total_drop_bytes; //type: uint64
                                            YLeaf total_drop_rate; //type: uint32
                                            YLeaf match_data_rate; //type: uint32
                                            YLeaf total_transmit_rate; //type: uint32
                                            YLeaf pre_policy_matched_packets; //type: uint64
                                            YLeaf pre_policy_matched_bytes; //type: uint64



                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::GeneralStats


                                    class IphcStats : public Entity
                                    {
                                        public:
                                            IphcStats();
                                            ~IphcStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf non_tcp_total_out_packets; //type: uint64
                                            YLeaf non_tcp_total_out_bytes; //type: uint64
                                            YLeaf non_tcp_bytes_saved; //type: uint64
                                            YLeaf non_tcp_compressed_packets_out; //type: uint64
                                            YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                            YLeaf non_tcp_full_header_packets_out; //type: uint64
                                            YLeaf tcp_total_out_packets; //type: uint64
                                            YLeaf tcp_total_out_bytes; //type: uint64
                                            YLeaf tcp_bytes_saved; //type: uint64
                                            YLeaf tcp_compressed_packets_out; //type: uint64
                                            YLeaf tcp_bytes_sent_rate; //type: uint32
                                            YLeaf tcp_full_header_packets_out; //type: uint64



                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::IphcStats


                                    class ChildPolicy : public Entity
                                    {
                                        public:
                                            ChildPolicy();
                                            ~ChildPolicy();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;





                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::ChildPolicy


                                    class CacStats : public Entity
                                    {
                                        public:
                                            CacStats();
                                            ~CacStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf drop_packets; //type: uint64
                                            YLeaf drop_bytes; //type: uint64
                                            YLeaf drop_rates; //type: uint32
                                            YLeaf admitpackets; //type: uint64
                                            YLeaf admit_bytes; //type: uint64
                                            YLeaf admit_rates; //type: uint32



                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::CacStats


                                    class QueueStatsArray : public Entity
                                    {
                                        public:
                                            QueueStatsArray();
                                            ~QueueStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf queue_id; //type: uint32
                                            YLeaf tail_drop_packets; //type: uint64
                                            YLeaf tail_drop_bytes; //type: uint64
                                            YLeaf atm_clp0_drop_packets; //type: uint64
                                            YLeaf atm_clp0_drop_bytes; //type: uint64
                                            YLeaf atm_clp1_drop_packets; //type: uint64
                                            YLeaf atm_clp1_drop_bytes; //type: uint64
                                            YLeaf queue_drop_threshold; //type: uint32
                                            YLeaf forced_wred_stats_display; //type: boolean
                                            YLeaf random_drop_packets; //type: uint64
                                            YLeaf random_drop_bytes; //type: uint64
                                            YLeaf max_threshold_packets; //type: uint64
                                            YLeaf max_threshold_bytes; //type: uint64
                                            YLeaf conform_packets; //type: uint64
                                            YLeaf conform_bytes; //type: uint64
                                            YLeaf exceed_packets; //type: uint64
                                            YLeaf exceed_bytes; //type: uint64
                                            YLeaf conform_rate; //type: uint32
                                            YLeaf exceed_rate; //type: uint32

                                        class QueueInstanceLength : public Entity
                                        {
                                            public:
                                                QueueInstanceLength();
                                                ~QueueInstanceLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                        class QueueAverageLength : public Entity
                                        {
                                            public:
                                                QueueAverageLength();
                                                ~QueueAverageLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                        class QueueMaxLength : public Entity
                                        {
                                            public:
                                                QueueMaxLength();
                                                ~QueueMaxLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::QueueStatsArray


                                    class PoliceStatsArray : public Entity
                                    {
                                        public:
                                            PoliceStatsArray();
                                            ~PoliceStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf drop_packets; //type: uint64
                                            YLeaf drop_bytes; //type: uint64
                                            YLeaf conform_packets; //type: uint64
                                            YLeaf conform_bytes; //type: uint64
                                            YLeaf exceed_packets; //type: uint64
                                            YLeaf exceed_bytes; //type: uint64
                                            YLeaf violate_packets; //type: uint64
                                            YLeaf violate_bytes; //type: uint64
                                            YLeaf parent_drop_packets; //type: uint64
                                            YLeaf parent_drop_bytes; //type: uint64
                                            YLeaf conform_rate; //type: uint32
                                            YLeaf exceed_rate; //type: uint32
                                            YLeaf violate_rate; //type: uint32

                                        class ColorClassStats : public Entity
                                        {
                                            public:
                                                ColorClassStats();
                                                ~ColorClassStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf conform_class_conform_packets; //type: uint64
                                                YLeaf conform_class_conform_bytes; //type: uint64
                                                YLeaf conform_class_conform_rate; //type: uint32
                                                YLeaf conform_class_exceed_packets; //type: uint64
                                                YLeaf conform_class_exceed_bytes; //type: uint64
                                                YLeaf conform_class_exceed_rate; //type: uint32
                                                YLeaf conform_class_violate_packets; //type: uint64
                                                YLeaf conform_class_violate_bytes; //type: uint64
                                                YLeaf conform_class_violate_rate; //type: uint32
                                                YLeaf exceed_class_exceed_packets; //type: uint64
                                                YLeaf exceed_class_exceed_bytes; //type: uint64
                                                YLeaf exceed_class_exceed_rate; //type: uint32
                                                YLeaf exceed_class_violate_packets; //type: uint64
                                                YLeaf exceed_class_violate_bytes; //type: uint64
                                                YLeaf exceed_class_violate_rate; //type: uint32
                                                YLeaf violate_class_violate_packets; //type: uint64
                                                YLeaf violate_class_violate_bytes; //type: uint64
                                                YLeaf violate_class_violate_rate; //type: uint32



                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::PoliceStatsArray


                                    class WredStatsArray : public Entity
                                    {
                                        public:
                                            WredStatsArray();
                                            ~WredStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf profile_title; //type: string
                                            YLeaf red_transmit_packets; //type: uint64
                                            YLeaf red_transmit_bytes; //type: uint64
                                            YLeaf random_drop_packets; //type: uint64
                                            YLeaf random_drop_bytes; //type: uint64
                                            YLeaf max_threshold_packets; //type: uint64
                                            YLeaf max_threshold_bytes; //type: uint64
                                            YLeaf red_ecn_marked_packets; //type: uint64
                                            YLeaf red_ecn_marked_bytes; //type: uint64

                                        class RedLabel : public Entity
                                        {
                                            public:
                                                RedLabel();
                                                ~RedLabel();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf wred_type; //type: WredEnum
                                                YLeaf value_; //type: uint8



                                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::WredStatsArray


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::CacStats> cac_stats;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat


                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics::ClassStat> > class_stat;


                            }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics


                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output::Statistics> statistics;


                        }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Input> input;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::MemberInterfaces> member_interfaces;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance::Output> output;


                    }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance


                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances::SharedPolicyInstance> > shared_policy_instance;


                }; // Qos::Nodes::Node::PolicyMap::SharedPolicyInstances


                class InterfaceTable : public Entity
                {
                    public:
                        InterfaceTable();
                        ~InterfaceTable();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;



                    class Interface : public Entity
                    {
                        public:
                            Interface();
                            ~Interface();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;


                            YLeaf interface_name; //type: string

                        class Nodes_ : public Entity
                        {
                            public:
                                Nodes_();
                                ~Nodes_();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;



                            class Node_ : public Entity
                            {
                                public:
                                    Node_();
                                    ~Node_();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf node_name; //type: string

                                class Input : public Entity
                                {
                                    public:
                                        Input();
                                        ~Input();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;



                                    class Statistics : public Entity
                                    {
                                        public:
                                            Statistics();
                                            ~Statistics();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf policy_name; //type: string
                                            YLeaf state; //type: PolicyStateEnum
                                            YLeaf state_description; //type: string
                                            YLeaf satid; //type: uint32

                                        class ClassStat : public Entity
                                        {
                                            public:
                                                ClassStat();
                                                ~ClassStat();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf counter_validity_bitmask; //type: uint64
                                                YLeaf class_name; //type: string
                                                YLeaf shared_queue_id; //type: uint32
                                                YLeaf queue_descr; //type: string
                                                YLeaf cac_state; //type: CacStateEnum

                                            class GeneralStats : public Entity
                                            {
                                                public:
                                                    GeneralStats();
                                                    ~GeneralStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf transmit_packets; //type: uint64
                                                    YLeaf transmit_bytes; //type: uint64
                                                    YLeaf total_drop_packets; //type: uint64
                                                    YLeaf total_drop_bytes; //type: uint64
                                                    YLeaf total_drop_rate; //type: uint32
                                                    YLeaf match_data_rate; //type: uint32
                                                    YLeaf total_transmit_rate; //type: uint32
                                                    YLeaf pre_policy_matched_packets; //type: uint64
                                                    YLeaf pre_policy_matched_bytes; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::GeneralStats


                                            class IphcStats : public Entity
                                            {
                                                public:
                                                    IphcStats();
                                                    ~IphcStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf non_tcp_total_out_packets; //type: uint64
                                                    YLeaf non_tcp_total_out_bytes; //type: uint64
                                                    YLeaf non_tcp_bytes_saved; //type: uint64
                                                    YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                    YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                    YLeaf tcp_total_out_packets; //type: uint64
                                                    YLeaf tcp_total_out_bytes; //type: uint64
                                                    YLeaf tcp_bytes_saved; //type: uint64
                                                    YLeaf tcp_compressed_packets_out; //type: uint64
                                                    YLeaf tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf tcp_full_header_packets_out; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::IphcStats


                                            class ChildPolicy : public Entity
                                            {
                                                public:
                                                    ChildPolicy();
                                                    ~ChildPolicy();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;





                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::ChildPolicy


                                            class CacStats : public Entity
                                            {
                                                public:
                                                    CacStats();
                                                    ~CacStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf drop_rates; //type: uint32
                                                    YLeaf admitpackets; //type: uint64
                                                    YLeaf admit_bytes; //type: uint64
                                                    YLeaf admit_rates; //type: uint32



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::CacStats


                                            class QueueStatsArray : public Entity
                                            {
                                                public:
                                                    QueueStatsArray();
                                                    ~QueueStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf queue_id; //type: uint32
                                                    YLeaf tail_drop_packets; //type: uint64
                                                    YLeaf tail_drop_bytes; //type: uint64
                                                    YLeaf atm_clp0_drop_packets; //type: uint64
                                                    YLeaf atm_clp0_drop_bytes; //type: uint64
                                                    YLeaf atm_clp1_drop_packets; //type: uint64
                                                    YLeaf atm_clp1_drop_bytes; //type: uint64
                                                    YLeaf queue_drop_threshold; //type: uint32
                                                    YLeaf forced_wred_stats_display; //type: boolean
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32

                                                class QueueInstanceLength : public Entity
                                                {
                                                    public:
                                                        QueueInstanceLength();
                                                        ~QueueInstanceLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                class QueueAverageLength : public Entity
                                                {
                                                    public:
                                                        QueueAverageLength();
                                                        ~QueueAverageLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                class QueueMaxLength : public Entity
                                                {
                                                    public:
                                                        QueueMaxLength();
                                                        ~QueueMaxLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::QueueStatsArray


                                            class PoliceStatsArray : public Entity
                                            {
                                                public:
                                                    PoliceStatsArray();
                                                    ~PoliceStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf violate_packets; //type: uint64
                                                    YLeaf violate_bytes; //type: uint64
                                                    YLeaf parent_drop_packets; //type: uint64
                                                    YLeaf parent_drop_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32
                                                    YLeaf violate_rate; //type: uint32

                                                class ColorClassStats : public Entity
                                                {
                                                    public:
                                                        ColorClassStats();
                                                        ~ColorClassStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf conform_class_conform_packets; //type: uint64
                                                        YLeaf conform_class_conform_bytes; //type: uint64
                                                        YLeaf conform_class_conform_rate; //type: uint32
                                                        YLeaf conform_class_exceed_packets; //type: uint64
                                                        YLeaf conform_class_exceed_bytes; //type: uint64
                                                        YLeaf conform_class_exceed_rate; //type: uint32
                                                        YLeaf conform_class_violate_packets; //type: uint64
                                                        YLeaf conform_class_violate_bytes; //type: uint64
                                                        YLeaf conform_class_violate_rate; //type: uint32
                                                        YLeaf exceed_class_exceed_packets; //type: uint64
                                                        YLeaf exceed_class_exceed_bytes; //type: uint64
                                                        YLeaf exceed_class_exceed_rate; //type: uint32
                                                        YLeaf exceed_class_violate_packets; //type: uint64
                                                        YLeaf exceed_class_violate_bytes; //type: uint64
                                                        YLeaf exceed_class_violate_rate; //type: uint32
                                                        YLeaf violate_class_violate_packets; //type: uint64
                                                        YLeaf violate_class_violate_bytes; //type: uint64
                                                        YLeaf violate_class_violate_rate; //type: uint32



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::PoliceStatsArray


                                            class WredStatsArray : public Entity
                                            {
                                                public:
                                                    WredStatsArray();
                                                    ~WredStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf profile_title; //type: string
                                                    YLeaf red_transmit_packets; //type: uint64
                                                    YLeaf red_transmit_bytes; //type: uint64
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf red_ecn_marked_packets; //type: uint64
                                                    YLeaf red_ecn_marked_bytes; //type: uint64

                                                class RedLabel : public Entity
                                                {
                                                    public:
                                                        RedLabel();
                                                        ~RedLabel();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf wred_type; //type: WredEnum
                                                        YLeaf value_; //type: uint8



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::WredStatsArray


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::CacStats> cac_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics::ClassStat> > class_stat;


                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input::Statistics> statistics;


                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input


                                class Output : public Entity
                                {
                                    public:
                                        Output();
                                        ~Output();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;



                                    class Statistics : public Entity
                                    {
                                        public:
                                            Statistics();
                                            ~Statistics();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf policy_name; //type: string
                                            YLeaf state; //type: PolicyStateEnum
                                            YLeaf state_description; //type: string
                                            YLeaf satid; //type: uint32

                                        class ClassStat : public Entity
                                        {
                                            public:
                                                ClassStat();
                                                ~ClassStat();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf counter_validity_bitmask; //type: uint64
                                                YLeaf class_name; //type: string
                                                YLeaf shared_queue_id; //type: uint32
                                                YLeaf queue_descr; //type: string
                                                YLeaf cac_state; //type: CacStateEnum

                                            class GeneralStats : public Entity
                                            {
                                                public:
                                                    GeneralStats();
                                                    ~GeneralStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf transmit_packets; //type: uint64
                                                    YLeaf transmit_bytes; //type: uint64
                                                    YLeaf total_drop_packets; //type: uint64
                                                    YLeaf total_drop_bytes; //type: uint64
                                                    YLeaf total_drop_rate; //type: uint32
                                                    YLeaf match_data_rate; //type: uint32
                                                    YLeaf total_transmit_rate; //type: uint32
                                                    YLeaf pre_policy_matched_packets; //type: uint64
                                                    YLeaf pre_policy_matched_bytes; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::GeneralStats


                                            class IphcStats : public Entity
                                            {
                                                public:
                                                    IphcStats();
                                                    ~IphcStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf non_tcp_total_out_packets; //type: uint64
                                                    YLeaf non_tcp_total_out_bytes; //type: uint64
                                                    YLeaf non_tcp_bytes_saved; //type: uint64
                                                    YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                    YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                    YLeaf tcp_total_out_packets; //type: uint64
                                                    YLeaf tcp_total_out_bytes; //type: uint64
                                                    YLeaf tcp_bytes_saved; //type: uint64
                                                    YLeaf tcp_compressed_packets_out; //type: uint64
                                                    YLeaf tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf tcp_full_header_packets_out; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::IphcStats


                                            class ChildPolicy : public Entity
                                            {
                                                public:
                                                    ChildPolicy();
                                                    ~ChildPolicy();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;





                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::ChildPolicy


                                            class CacStats : public Entity
                                            {
                                                public:
                                                    CacStats();
                                                    ~CacStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf drop_rates; //type: uint32
                                                    YLeaf admitpackets; //type: uint64
                                                    YLeaf admit_bytes; //type: uint64
                                                    YLeaf admit_rates; //type: uint32



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::CacStats


                                            class QueueStatsArray : public Entity
                                            {
                                                public:
                                                    QueueStatsArray();
                                                    ~QueueStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf queue_id; //type: uint32
                                                    YLeaf tail_drop_packets; //type: uint64
                                                    YLeaf tail_drop_bytes; //type: uint64
                                                    YLeaf atm_clp0_drop_packets; //type: uint64
                                                    YLeaf atm_clp0_drop_bytes; //type: uint64
                                                    YLeaf atm_clp1_drop_packets; //type: uint64
                                                    YLeaf atm_clp1_drop_bytes; //type: uint64
                                                    YLeaf queue_drop_threshold; //type: uint32
                                                    YLeaf forced_wred_stats_display; //type: boolean
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32

                                                class QueueInstanceLength : public Entity
                                                {
                                                    public:
                                                        QueueInstanceLength();
                                                        ~QueueInstanceLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                class QueueAverageLength : public Entity
                                                {
                                                    public:
                                                        QueueAverageLength();
                                                        ~QueueAverageLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                class QueueMaxLength : public Entity
                                                {
                                                    public:
                                                        QueueMaxLength();
                                                        ~QueueMaxLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::QueueStatsArray


                                            class PoliceStatsArray : public Entity
                                            {
                                                public:
                                                    PoliceStatsArray();
                                                    ~PoliceStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf violate_packets; //type: uint64
                                                    YLeaf violate_bytes; //type: uint64
                                                    YLeaf parent_drop_packets; //type: uint64
                                                    YLeaf parent_drop_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32
                                                    YLeaf violate_rate; //type: uint32

                                                class ColorClassStats : public Entity
                                                {
                                                    public:
                                                        ColorClassStats();
                                                        ~ColorClassStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf conform_class_conform_packets; //type: uint64
                                                        YLeaf conform_class_conform_bytes; //type: uint64
                                                        YLeaf conform_class_conform_rate; //type: uint32
                                                        YLeaf conform_class_exceed_packets; //type: uint64
                                                        YLeaf conform_class_exceed_bytes; //type: uint64
                                                        YLeaf conform_class_exceed_rate; //type: uint32
                                                        YLeaf conform_class_violate_packets; //type: uint64
                                                        YLeaf conform_class_violate_bytes; //type: uint64
                                                        YLeaf conform_class_violate_rate; //type: uint32
                                                        YLeaf exceed_class_exceed_packets; //type: uint64
                                                        YLeaf exceed_class_exceed_bytes; //type: uint64
                                                        YLeaf exceed_class_exceed_rate; //type: uint32
                                                        YLeaf exceed_class_violate_packets; //type: uint64
                                                        YLeaf exceed_class_violate_bytes; //type: uint64
                                                        YLeaf exceed_class_violate_rate; //type: uint32
                                                        YLeaf violate_class_violate_packets; //type: uint64
                                                        YLeaf violate_class_violate_bytes; //type: uint64
                                                        YLeaf violate_class_violate_rate; //type: uint32



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::PoliceStatsArray


                                            class WredStatsArray : public Entity
                                            {
                                                public:
                                                    WredStatsArray();
                                                    ~WredStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf profile_title; //type: string
                                                    YLeaf red_transmit_packets; //type: uint64
                                                    YLeaf red_transmit_bytes; //type: uint64
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf red_ecn_marked_packets; //type: uint64
                                                    YLeaf red_ecn_marked_bytes; //type: uint64

                                                class RedLabel : public Entity
                                                {
                                                    public:
                                                        RedLabel();
                                                        ~RedLabel();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf wred_type; //type: WredEnum
                                                        YLeaf value_; //type: uint8



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::WredStatsArray


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::CacStats> cac_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics::ClassStat> > class_stat;


                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output::Statistics> statistics;


                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Input> input;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_::Output> output;


                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_::Node_> > node;


                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_


                        class MemberInterfaces : public Entity
                        {
                            public:
                                MemberInterfaces();
                                ~MemberInterfaces();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;



                            class MemberInterface : public Entity
                            {
                                public:
                                    MemberInterface();
                                    ~MemberInterface();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf interface_name; //type: string

                                class SatelliteIds : public Entity
                                {
                                    public:
                                        SatelliteIds();
                                        ~SatelliteIds();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;



                                    class SatelliteId : public Entity
                                    {
                                        public:
                                            SatelliteId();
                                            ~SatelliteId();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf nv_satellite_id; //type: int32

                                        class Input : public Entity
                                        {
                                            public:
                                                Input();
                                                ~Input();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;



                                            class Statistics : public Entity
                                            {
                                                public:
                                                    Statistics();
                                                    ~Statistics();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf policy_name; //type: string
                                                    YLeaf state; //type: PolicyStateEnum
                                                    YLeaf state_description; //type: string
                                                    YLeaf satid; //type: uint32

                                                class ClassStat : public Entity
                                                {
                                                    public:
                                                        ClassStat();
                                                        ~ClassStat();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf counter_validity_bitmask; //type: uint64
                                                        YLeaf class_name; //type: string
                                                        YLeaf shared_queue_id; //type: uint32
                                                        YLeaf queue_descr; //type: string
                                                        YLeaf cac_state; //type: CacStateEnum

                                                    class GeneralStats : public Entity
                                                    {
                                                        public:
                                                            GeneralStats();
                                                            ~GeneralStats();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf transmit_packets; //type: uint64
                                                            YLeaf transmit_bytes; //type: uint64
                                                            YLeaf total_drop_packets; //type: uint64
                                                            YLeaf total_drop_bytes; //type: uint64
                                                            YLeaf total_drop_rate; //type: uint32
                                                            YLeaf match_data_rate; //type: uint32
                                                            YLeaf total_transmit_rate; //type: uint32
                                                            YLeaf pre_policy_matched_packets; //type: uint64
                                                            YLeaf pre_policy_matched_bytes; //type: uint64



                                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats


                                                    class IphcStats : public Entity
                                                    {
                                                        public:
                                                            IphcStats();
                                                            ~IphcStats();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf non_tcp_total_out_packets; //type: uint64
                                                            YLeaf non_tcp_total_out_bytes; //type: uint64
                                                            YLeaf non_tcp_bytes_saved; //type: uint64
                                                            YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                            YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                            YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                            YLeaf tcp_total_out_packets; //type: uint64
                                                            YLeaf tcp_total_out_bytes; //type: uint64
                                                            YLeaf tcp_bytes_saved; //type: uint64
                                                            YLeaf tcp_compressed_packets_out; //type: uint64
                                                            YLeaf tcp_bytes_sent_rate; //type: uint32
                                                            YLeaf tcp_full_header_packets_out; //type: uint64



                                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats


                                                    class ChildPolicy : public Entity
                                                    {
                                                        public:
                                                            ChildPolicy();
                                                            ~ChildPolicy();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;





                                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy


                                                    class CacStats : public Entity
                                                    {
                                                        public:
                                                            CacStats();
                                                            ~CacStats();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf drop_packets; //type: uint64
                                                            YLeaf drop_bytes; //type: uint64
                                                            YLeaf drop_rates; //type: uint32
                                                            YLeaf admitpackets; //type: uint64
                                                            YLeaf admit_bytes; //type: uint64
                                                            YLeaf admit_rates; //type: uint32



                                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats


                                                    class QueueStatsArray : public Entity
                                                    {
                                                        public:
                                                            QueueStatsArray();
                                                            ~QueueStatsArray();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf queue_id; //type: uint32
                                                            YLeaf tail_drop_packets; //type: uint64
                                                            YLeaf tail_drop_bytes; //type: uint64
                                                            YLeaf atm_clp0_drop_packets; //type: uint64
                                                            YLeaf atm_clp0_drop_bytes; //type: uint64
                                                            YLeaf atm_clp1_drop_packets; //type: uint64
                                                            YLeaf atm_clp1_drop_bytes; //type: uint64
                                                            YLeaf queue_drop_threshold; //type: uint32
                                                            YLeaf forced_wred_stats_display; //type: boolean
                                                            YLeaf random_drop_packets; //type: uint64
                                                            YLeaf random_drop_bytes; //type: uint64
                                                            YLeaf max_threshold_packets; //type: uint64
                                                            YLeaf max_threshold_bytes; //type: uint64
                                                            YLeaf conform_packets; //type: uint64
                                                            YLeaf conform_bytes; //type: uint64
                                                            YLeaf exceed_packets; //type: uint64
                                                            YLeaf exceed_bytes; //type: uint64
                                                            YLeaf conform_rate; //type: uint32
                                                            YLeaf exceed_rate; //type: uint32

                                                        class QueueInstanceLength : public Entity
                                                        {
                                                            public:
                                                                QueueInstanceLength();
                                                                ~QueueInstanceLength();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf value_; //type: uint32
                                                                YLeaf unit; //type: PolicyParamUnitEnum



                                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                        class QueueAverageLength : public Entity
                                                        {
                                                            public:
                                                                QueueAverageLength();
                                                                ~QueueAverageLength();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf value_; //type: uint32
                                                                YLeaf unit; //type: PolicyParamUnitEnum



                                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                        class QueueMaxLength : public Entity
                                                        {
                                                            public:
                                                                QueueMaxLength();
                                                                ~QueueMaxLength();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf value_; //type: uint32
                                                                YLeaf unit; //type: PolicyParamUnitEnum



                                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray


                                                    class PoliceStatsArray : public Entity
                                                    {
                                                        public:
                                                            PoliceStatsArray();
                                                            ~PoliceStatsArray();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf drop_packets; //type: uint64
                                                            YLeaf drop_bytes; //type: uint64
                                                            YLeaf conform_packets; //type: uint64
                                                            YLeaf conform_bytes; //type: uint64
                                                            YLeaf exceed_packets; //type: uint64
                                                            YLeaf exceed_bytes; //type: uint64
                                                            YLeaf violate_packets; //type: uint64
                                                            YLeaf violate_bytes; //type: uint64
                                                            YLeaf parent_drop_packets; //type: uint64
                                                            YLeaf parent_drop_bytes; //type: uint64
                                                            YLeaf conform_rate; //type: uint32
                                                            YLeaf exceed_rate; //type: uint32
                                                            YLeaf violate_rate; //type: uint32

                                                        class ColorClassStats : public Entity
                                                        {
                                                            public:
                                                                ColorClassStats();
                                                                ~ColorClassStats();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf conform_class_conform_packets; //type: uint64
                                                                YLeaf conform_class_conform_bytes; //type: uint64
                                                                YLeaf conform_class_conform_rate; //type: uint32
                                                                YLeaf conform_class_exceed_packets; //type: uint64
                                                                YLeaf conform_class_exceed_bytes; //type: uint64
                                                                YLeaf conform_class_exceed_rate; //type: uint32
                                                                YLeaf conform_class_violate_packets; //type: uint64
                                                                YLeaf conform_class_violate_bytes; //type: uint64
                                                                YLeaf conform_class_violate_rate; //type: uint32
                                                                YLeaf exceed_class_exceed_packets; //type: uint64
                                                                YLeaf exceed_class_exceed_bytes; //type: uint64
                                                                YLeaf exceed_class_exceed_rate; //type: uint32
                                                                YLeaf exceed_class_violate_packets; //type: uint64
                                                                YLeaf exceed_class_violate_bytes; //type: uint64
                                                                YLeaf exceed_class_violate_rate; //type: uint32
                                                                YLeaf violate_class_violate_packets; //type: uint64
                                                                YLeaf violate_class_violate_bytes; //type: uint64
                                                                YLeaf violate_class_violate_rate; //type: uint32



                                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray


                                                    class WredStatsArray : public Entity
                                                    {
                                                        public:
                                                            WredStatsArray();
                                                            ~WredStatsArray();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf profile_title; //type: string
                                                            YLeaf red_transmit_packets; //type: uint64
                                                            YLeaf red_transmit_bytes; //type: uint64
                                                            YLeaf random_drop_packets; //type: uint64
                                                            YLeaf random_drop_bytes; //type: uint64
                                                            YLeaf max_threshold_packets; //type: uint64
                                                            YLeaf max_threshold_bytes; //type: uint64
                                                            YLeaf red_ecn_marked_packets; //type: uint64
                                                            YLeaf red_ecn_marked_bytes; //type: uint64

                                                        class RedLabel : public Entity
                                                        {
                                                            public:
                                                                RedLabel();
                                                                ~RedLabel();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf wred_type; //type: WredEnum
                                                                YLeaf value_; //type: uint8



                                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray


                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats> cac_stats;
                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat> > class_stat;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics> statistics;


                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input


                                        class Output : public Entity
                                        {
                                            public:
                                                Output();
                                                ~Output();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;



                                            class Statistics : public Entity
                                            {
                                                public:
                                                    Statistics();
                                                    ~Statistics();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf policy_name; //type: string
                                                    YLeaf state; //type: PolicyStateEnum
                                                    YLeaf state_description; //type: string
                                                    YLeaf satid; //type: uint32

                                                class ClassStat : public Entity
                                                {
                                                    public:
                                                        ClassStat();
                                                        ~ClassStat();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf counter_validity_bitmask; //type: uint64
                                                        YLeaf class_name; //type: string
                                                        YLeaf shared_queue_id; //type: uint32
                                                        YLeaf queue_descr; //type: string
                                                        YLeaf cac_state; //type: CacStateEnum

                                                    class GeneralStats : public Entity
                                                    {
                                                        public:
                                                            GeneralStats();
                                                            ~GeneralStats();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf transmit_packets; //type: uint64
                                                            YLeaf transmit_bytes; //type: uint64
                                                            YLeaf total_drop_packets; //type: uint64
                                                            YLeaf total_drop_bytes; //type: uint64
                                                            YLeaf total_drop_rate; //type: uint32
                                                            YLeaf match_data_rate; //type: uint32
                                                            YLeaf total_transmit_rate; //type: uint32
                                                            YLeaf pre_policy_matched_packets; //type: uint64
                                                            YLeaf pre_policy_matched_bytes; //type: uint64



                                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats


                                                    class IphcStats : public Entity
                                                    {
                                                        public:
                                                            IphcStats();
                                                            ~IphcStats();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf non_tcp_total_out_packets; //type: uint64
                                                            YLeaf non_tcp_total_out_bytes; //type: uint64
                                                            YLeaf non_tcp_bytes_saved; //type: uint64
                                                            YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                            YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                            YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                            YLeaf tcp_total_out_packets; //type: uint64
                                                            YLeaf tcp_total_out_bytes; //type: uint64
                                                            YLeaf tcp_bytes_saved; //type: uint64
                                                            YLeaf tcp_compressed_packets_out; //type: uint64
                                                            YLeaf tcp_bytes_sent_rate; //type: uint32
                                                            YLeaf tcp_full_header_packets_out; //type: uint64



                                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats


                                                    class ChildPolicy : public Entity
                                                    {
                                                        public:
                                                            ChildPolicy();
                                                            ~ChildPolicy();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;





                                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy


                                                    class CacStats : public Entity
                                                    {
                                                        public:
                                                            CacStats();
                                                            ~CacStats();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf drop_packets; //type: uint64
                                                            YLeaf drop_bytes; //type: uint64
                                                            YLeaf drop_rates; //type: uint32
                                                            YLeaf admitpackets; //type: uint64
                                                            YLeaf admit_bytes; //type: uint64
                                                            YLeaf admit_rates; //type: uint32



                                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats


                                                    class QueueStatsArray : public Entity
                                                    {
                                                        public:
                                                            QueueStatsArray();
                                                            ~QueueStatsArray();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf queue_id; //type: uint32
                                                            YLeaf tail_drop_packets; //type: uint64
                                                            YLeaf tail_drop_bytes; //type: uint64
                                                            YLeaf atm_clp0_drop_packets; //type: uint64
                                                            YLeaf atm_clp0_drop_bytes; //type: uint64
                                                            YLeaf atm_clp1_drop_packets; //type: uint64
                                                            YLeaf atm_clp1_drop_bytes; //type: uint64
                                                            YLeaf queue_drop_threshold; //type: uint32
                                                            YLeaf forced_wred_stats_display; //type: boolean
                                                            YLeaf random_drop_packets; //type: uint64
                                                            YLeaf random_drop_bytes; //type: uint64
                                                            YLeaf max_threshold_packets; //type: uint64
                                                            YLeaf max_threshold_bytes; //type: uint64
                                                            YLeaf conform_packets; //type: uint64
                                                            YLeaf conform_bytes; //type: uint64
                                                            YLeaf exceed_packets; //type: uint64
                                                            YLeaf exceed_bytes; //type: uint64
                                                            YLeaf conform_rate; //type: uint32
                                                            YLeaf exceed_rate; //type: uint32

                                                        class QueueInstanceLength : public Entity
                                                        {
                                                            public:
                                                                QueueInstanceLength();
                                                                ~QueueInstanceLength();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf value_; //type: uint32
                                                                YLeaf unit; //type: PolicyParamUnitEnum



                                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                        class QueueAverageLength : public Entity
                                                        {
                                                            public:
                                                                QueueAverageLength();
                                                                ~QueueAverageLength();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf value_; //type: uint32
                                                                YLeaf unit; //type: PolicyParamUnitEnum



                                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                        class QueueMaxLength : public Entity
                                                        {
                                                            public:
                                                                QueueMaxLength();
                                                                ~QueueMaxLength();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf value_; //type: uint32
                                                                YLeaf unit; //type: PolicyParamUnitEnum



                                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray


                                                    class PoliceStatsArray : public Entity
                                                    {
                                                        public:
                                                            PoliceStatsArray();
                                                            ~PoliceStatsArray();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf drop_packets; //type: uint64
                                                            YLeaf drop_bytes; //type: uint64
                                                            YLeaf conform_packets; //type: uint64
                                                            YLeaf conform_bytes; //type: uint64
                                                            YLeaf exceed_packets; //type: uint64
                                                            YLeaf exceed_bytes; //type: uint64
                                                            YLeaf violate_packets; //type: uint64
                                                            YLeaf violate_bytes; //type: uint64
                                                            YLeaf parent_drop_packets; //type: uint64
                                                            YLeaf parent_drop_bytes; //type: uint64
                                                            YLeaf conform_rate; //type: uint32
                                                            YLeaf exceed_rate; //type: uint32
                                                            YLeaf violate_rate; //type: uint32

                                                        class ColorClassStats : public Entity
                                                        {
                                                            public:
                                                                ColorClassStats();
                                                                ~ColorClassStats();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf conform_class_conform_packets; //type: uint64
                                                                YLeaf conform_class_conform_bytes; //type: uint64
                                                                YLeaf conform_class_conform_rate; //type: uint32
                                                                YLeaf conform_class_exceed_packets; //type: uint64
                                                                YLeaf conform_class_exceed_bytes; //type: uint64
                                                                YLeaf conform_class_exceed_rate; //type: uint32
                                                                YLeaf conform_class_violate_packets; //type: uint64
                                                                YLeaf conform_class_violate_bytes; //type: uint64
                                                                YLeaf conform_class_violate_rate; //type: uint32
                                                                YLeaf exceed_class_exceed_packets; //type: uint64
                                                                YLeaf exceed_class_exceed_bytes; //type: uint64
                                                                YLeaf exceed_class_exceed_rate; //type: uint32
                                                                YLeaf exceed_class_violate_packets; //type: uint64
                                                                YLeaf exceed_class_violate_bytes; //type: uint64
                                                                YLeaf exceed_class_violate_rate; //type: uint32
                                                                YLeaf violate_class_violate_packets; //type: uint64
                                                                YLeaf violate_class_violate_bytes; //type: uint64
                                                                YLeaf violate_class_violate_rate; //type: uint32



                                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray


                                                    class WredStatsArray : public Entity
                                                    {
                                                        public:
                                                            WredStatsArray();
                                                            ~WredStatsArray();

                                                            bool has_data() const override;
                                                            bool has_operation() const override;
                                                            EntityPath get_entity_path(Entity* parent) const override;
                                                            std::string get_segment_path() const override;
                                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                            void set_value(const std::string & value_path, std::string value) override;
                                                            std::map<std::string, Entity*> & get_children() override;


                                                            YLeaf profile_title; //type: string
                                                            YLeaf red_transmit_packets; //type: uint64
                                                            YLeaf red_transmit_bytes; //type: uint64
                                                            YLeaf random_drop_packets; //type: uint64
                                                            YLeaf random_drop_bytes; //type: uint64
                                                            YLeaf max_threshold_packets; //type: uint64
                                                            YLeaf max_threshold_bytes; //type: uint64
                                                            YLeaf red_ecn_marked_packets; //type: uint64
                                                            YLeaf red_ecn_marked_bytes; //type: uint64

                                                        class RedLabel : public Entity
                                                        {
                                                            public:
                                                                RedLabel();
                                                                ~RedLabel();

                                                                bool has_data() const override;
                                                                bool has_operation() const override;
                                                                EntityPath get_entity_path(Entity* parent) const override;
                                                                std::string get_segment_path() const override;
                                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                                void set_value(const std::string & value_path, std::string value) override;
                                                                std::map<std::string, Entity*> & get_children() override;


                                                                YLeaf wred_type; //type: WredEnum
                                                                YLeaf value_; //type: uint8



                                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray


                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats> cac_stats;
                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat> > class_stat;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics> statistics;


                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input> input;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output> output;


                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId> > satellite_id;


                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds


                                class Input : public Entity
                                {
                                    public:
                                        Input();
                                        ~Input();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;



                                    class Statistics : public Entity
                                    {
                                        public:
                                            Statistics();
                                            ~Statistics();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf policy_name; //type: string
                                            YLeaf state; //type: PolicyStateEnum
                                            YLeaf state_description; //type: string
                                            YLeaf satid; //type: uint32

                                        class ClassStat : public Entity
                                        {
                                            public:
                                                ClassStat();
                                                ~ClassStat();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf counter_validity_bitmask; //type: uint64
                                                YLeaf class_name; //type: string
                                                YLeaf shared_queue_id; //type: uint32
                                                YLeaf queue_descr; //type: string
                                                YLeaf cac_state; //type: CacStateEnum

                                            class GeneralStats : public Entity
                                            {
                                                public:
                                                    GeneralStats();
                                                    ~GeneralStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf transmit_packets; //type: uint64
                                                    YLeaf transmit_bytes; //type: uint64
                                                    YLeaf total_drop_packets; //type: uint64
                                                    YLeaf total_drop_bytes; //type: uint64
                                                    YLeaf total_drop_rate; //type: uint32
                                                    YLeaf match_data_rate; //type: uint32
                                                    YLeaf total_transmit_rate; //type: uint32
                                                    YLeaf pre_policy_matched_packets; //type: uint64
                                                    YLeaf pre_policy_matched_bytes; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::GeneralStats


                                            class IphcStats : public Entity
                                            {
                                                public:
                                                    IphcStats();
                                                    ~IphcStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf non_tcp_total_out_packets; //type: uint64
                                                    YLeaf non_tcp_total_out_bytes; //type: uint64
                                                    YLeaf non_tcp_bytes_saved; //type: uint64
                                                    YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                    YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                    YLeaf tcp_total_out_packets; //type: uint64
                                                    YLeaf tcp_total_out_bytes; //type: uint64
                                                    YLeaf tcp_bytes_saved; //type: uint64
                                                    YLeaf tcp_compressed_packets_out; //type: uint64
                                                    YLeaf tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf tcp_full_header_packets_out; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::IphcStats


                                            class ChildPolicy : public Entity
                                            {
                                                public:
                                                    ChildPolicy();
                                                    ~ChildPolicy();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;





                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::ChildPolicy


                                            class CacStats : public Entity
                                            {
                                                public:
                                                    CacStats();
                                                    ~CacStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf drop_rates; //type: uint32
                                                    YLeaf admitpackets; //type: uint64
                                                    YLeaf admit_bytes; //type: uint64
                                                    YLeaf admit_rates; //type: uint32



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::CacStats


                                            class QueueStatsArray : public Entity
                                            {
                                                public:
                                                    QueueStatsArray();
                                                    ~QueueStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf queue_id; //type: uint32
                                                    YLeaf tail_drop_packets; //type: uint64
                                                    YLeaf tail_drop_bytes; //type: uint64
                                                    YLeaf atm_clp0_drop_packets; //type: uint64
                                                    YLeaf atm_clp0_drop_bytes; //type: uint64
                                                    YLeaf atm_clp1_drop_packets; //type: uint64
                                                    YLeaf atm_clp1_drop_bytes; //type: uint64
                                                    YLeaf queue_drop_threshold; //type: uint32
                                                    YLeaf forced_wred_stats_display; //type: boolean
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32

                                                class QueueInstanceLength : public Entity
                                                {
                                                    public:
                                                        QueueInstanceLength();
                                                        ~QueueInstanceLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                class QueueAverageLength : public Entity
                                                {
                                                    public:
                                                        QueueAverageLength();
                                                        ~QueueAverageLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                class QueueMaxLength : public Entity
                                                {
                                                    public:
                                                        QueueMaxLength();
                                                        ~QueueMaxLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray


                                            class PoliceStatsArray : public Entity
                                            {
                                                public:
                                                    PoliceStatsArray();
                                                    ~PoliceStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf violate_packets; //type: uint64
                                                    YLeaf violate_bytes; //type: uint64
                                                    YLeaf parent_drop_packets; //type: uint64
                                                    YLeaf parent_drop_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32
                                                    YLeaf violate_rate; //type: uint32

                                                class ColorClassStats : public Entity
                                                {
                                                    public:
                                                        ColorClassStats();
                                                        ~ColorClassStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf conform_class_conform_packets; //type: uint64
                                                        YLeaf conform_class_conform_bytes; //type: uint64
                                                        YLeaf conform_class_conform_rate; //type: uint32
                                                        YLeaf conform_class_exceed_packets; //type: uint64
                                                        YLeaf conform_class_exceed_bytes; //type: uint64
                                                        YLeaf conform_class_exceed_rate; //type: uint32
                                                        YLeaf conform_class_violate_packets; //type: uint64
                                                        YLeaf conform_class_violate_bytes; //type: uint64
                                                        YLeaf conform_class_violate_rate; //type: uint32
                                                        YLeaf exceed_class_exceed_packets; //type: uint64
                                                        YLeaf exceed_class_exceed_bytes; //type: uint64
                                                        YLeaf exceed_class_exceed_rate; //type: uint32
                                                        YLeaf exceed_class_violate_packets; //type: uint64
                                                        YLeaf exceed_class_violate_bytes; //type: uint64
                                                        YLeaf exceed_class_violate_rate; //type: uint32
                                                        YLeaf violate_class_violate_packets; //type: uint64
                                                        YLeaf violate_class_violate_bytes; //type: uint64
                                                        YLeaf violate_class_violate_rate; //type: uint32



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray


                                            class WredStatsArray : public Entity
                                            {
                                                public:
                                                    WredStatsArray();
                                                    ~WredStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf profile_title; //type: string
                                                    YLeaf red_transmit_packets; //type: uint64
                                                    YLeaf red_transmit_bytes; //type: uint64
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf red_ecn_marked_packets; //type: uint64
                                                    YLeaf red_ecn_marked_bytes; //type: uint64

                                                class RedLabel : public Entity
                                                {
                                                    public:
                                                        RedLabel();
                                                        ~RedLabel();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf wred_type; //type: WredEnum
                                                        YLeaf value_; //type: uint8



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::CacStats> cac_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat> > class_stat;


                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics> statistics;


                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input


                                class Output : public Entity
                                {
                                    public:
                                        Output();
                                        ~Output();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;



                                    class Statistics : public Entity
                                    {
                                        public:
                                            Statistics();
                                            ~Statistics();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf policy_name; //type: string
                                            YLeaf state; //type: PolicyStateEnum
                                            YLeaf state_description; //type: string
                                            YLeaf satid; //type: uint32

                                        class ClassStat : public Entity
                                        {
                                            public:
                                                ClassStat();
                                                ~ClassStat();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf counter_validity_bitmask; //type: uint64
                                                YLeaf class_name; //type: string
                                                YLeaf shared_queue_id; //type: uint32
                                                YLeaf queue_descr; //type: string
                                                YLeaf cac_state; //type: CacStateEnum

                                            class GeneralStats : public Entity
                                            {
                                                public:
                                                    GeneralStats();
                                                    ~GeneralStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf transmit_packets; //type: uint64
                                                    YLeaf transmit_bytes; //type: uint64
                                                    YLeaf total_drop_packets; //type: uint64
                                                    YLeaf total_drop_bytes; //type: uint64
                                                    YLeaf total_drop_rate; //type: uint32
                                                    YLeaf match_data_rate; //type: uint32
                                                    YLeaf total_transmit_rate; //type: uint32
                                                    YLeaf pre_policy_matched_packets; //type: uint64
                                                    YLeaf pre_policy_matched_bytes; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::GeneralStats


                                            class IphcStats : public Entity
                                            {
                                                public:
                                                    IphcStats();
                                                    ~IphcStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf non_tcp_total_out_packets; //type: uint64
                                                    YLeaf non_tcp_total_out_bytes; //type: uint64
                                                    YLeaf non_tcp_bytes_saved; //type: uint64
                                                    YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                    YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                    YLeaf tcp_total_out_packets; //type: uint64
                                                    YLeaf tcp_total_out_bytes; //type: uint64
                                                    YLeaf tcp_bytes_saved; //type: uint64
                                                    YLeaf tcp_compressed_packets_out; //type: uint64
                                                    YLeaf tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf tcp_full_header_packets_out; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::IphcStats


                                            class ChildPolicy : public Entity
                                            {
                                                public:
                                                    ChildPolicy();
                                                    ~ChildPolicy();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;





                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::ChildPolicy


                                            class CacStats : public Entity
                                            {
                                                public:
                                                    CacStats();
                                                    ~CacStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf drop_rates; //type: uint32
                                                    YLeaf admitpackets; //type: uint64
                                                    YLeaf admit_bytes; //type: uint64
                                                    YLeaf admit_rates; //type: uint32



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::CacStats


                                            class QueueStatsArray : public Entity
                                            {
                                                public:
                                                    QueueStatsArray();
                                                    ~QueueStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf queue_id; //type: uint32
                                                    YLeaf tail_drop_packets; //type: uint64
                                                    YLeaf tail_drop_bytes; //type: uint64
                                                    YLeaf atm_clp0_drop_packets; //type: uint64
                                                    YLeaf atm_clp0_drop_bytes; //type: uint64
                                                    YLeaf atm_clp1_drop_packets; //type: uint64
                                                    YLeaf atm_clp1_drop_bytes; //type: uint64
                                                    YLeaf queue_drop_threshold; //type: uint32
                                                    YLeaf forced_wred_stats_display; //type: boolean
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32

                                                class QueueInstanceLength : public Entity
                                                {
                                                    public:
                                                        QueueInstanceLength();
                                                        ~QueueInstanceLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                class QueueAverageLength : public Entity
                                                {
                                                    public:
                                                        QueueAverageLength();
                                                        ~QueueAverageLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                class QueueMaxLength : public Entity
                                                {
                                                    public:
                                                        QueueMaxLength();
                                                        ~QueueMaxLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray


                                            class PoliceStatsArray : public Entity
                                            {
                                                public:
                                                    PoliceStatsArray();
                                                    ~PoliceStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf violate_packets; //type: uint64
                                                    YLeaf violate_bytes; //type: uint64
                                                    YLeaf parent_drop_packets; //type: uint64
                                                    YLeaf parent_drop_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32
                                                    YLeaf violate_rate; //type: uint32

                                                class ColorClassStats : public Entity
                                                {
                                                    public:
                                                        ColorClassStats();
                                                        ~ColorClassStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf conform_class_conform_packets; //type: uint64
                                                        YLeaf conform_class_conform_bytes; //type: uint64
                                                        YLeaf conform_class_conform_rate; //type: uint32
                                                        YLeaf conform_class_exceed_packets; //type: uint64
                                                        YLeaf conform_class_exceed_bytes; //type: uint64
                                                        YLeaf conform_class_exceed_rate; //type: uint32
                                                        YLeaf conform_class_violate_packets; //type: uint64
                                                        YLeaf conform_class_violate_bytes; //type: uint64
                                                        YLeaf conform_class_violate_rate; //type: uint32
                                                        YLeaf exceed_class_exceed_packets; //type: uint64
                                                        YLeaf exceed_class_exceed_bytes; //type: uint64
                                                        YLeaf exceed_class_exceed_rate; //type: uint32
                                                        YLeaf exceed_class_violate_packets; //type: uint64
                                                        YLeaf exceed_class_violate_bytes; //type: uint64
                                                        YLeaf exceed_class_violate_rate; //type: uint32
                                                        YLeaf violate_class_violate_packets; //type: uint64
                                                        YLeaf violate_class_violate_bytes; //type: uint64
                                                        YLeaf violate_class_violate_rate; //type: uint32



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray


                                            class WredStatsArray : public Entity
                                            {
                                                public:
                                                    WredStatsArray();
                                                    ~WredStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf profile_title; //type: string
                                                    YLeaf red_transmit_packets; //type: uint64
                                                    YLeaf red_transmit_bytes; //type: uint64
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf red_ecn_marked_packets; //type: uint64
                                                    YLeaf red_ecn_marked_bytes; //type: uint64

                                                class RedLabel : public Entity
                                                {
                                                    public:
                                                        RedLabel();
                                                        ~RedLabel();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf wred_type; //type: WredEnum
                                                        YLeaf value_; //type: uint8



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::CacStats> cac_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat> > class_stat;


                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics> statistics;


                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input> input;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output> output;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds> satellite_ids;


                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces::MemberInterface> > member_interface;


                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces


                        class SatelliteIds : public Entity
                        {
                            public:
                                SatelliteIds();
                                ~SatelliteIds();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;



                            class SatelliteId : public Entity
                            {
                                public:
                                    SatelliteId();
                                    ~SatelliteId();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf nv_satellite_id; //type: int32

                                class Input : public Entity
                                {
                                    public:
                                        Input();
                                        ~Input();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;



                                    class Statistics : public Entity
                                    {
                                        public:
                                            Statistics();
                                            ~Statistics();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf policy_name; //type: string
                                            YLeaf state; //type: PolicyStateEnum
                                            YLeaf state_description; //type: string
                                            YLeaf satid; //type: uint32

                                        class ClassStat : public Entity
                                        {
                                            public:
                                                ClassStat();
                                                ~ClassStat();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf counter_validity_bitmask; //type: uint64
                                                YLeaf class_name; //type: string
                                                YLeaf shared_queue_id; //type: uint32
                                                YLeaf queue_descr; //type: string
                                                YLeaf cac_state; //type: CacStateEnum

                                            class GeneralStats : public Entity
                                            {
                                                public:
                                                    GeneralStats();
                                                    ~GeneralStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf transmit_packets; //type: uint64
                                                    YLeaf transmit_bytes; //type: uint64
                                                    YLeaf total_drop_packets; //type: uint64
                                                    YLeaf total_drop_bytes; //type: uint64
                                                    YLeaf total_drop_rate; //type: uint32
                                                    YLeaf match_data_rate; //type: uint32
                                                    YLeaf total_transmit_rate; //type: uint32
                                                    YLeaf pre_policy_matched_packets; //type: uint64
                                                    YLeaf pre_policy_matched_bytes; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats


                                            class IphcStats : public Entity
                                            {
                                                public:
                                                    IphcStats();
                                                    ~IphcStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf non_tcp_total_out_packets; //type: uint64
                                                    YLeaf non_tcp_total_out_bytes; //type: uint64
                                                    YLeaf non_tcp_bytes_saved; //type: uint64
                                                    YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                    YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                    YLeaf tcp_total_out_packets; //type: uint64
                                                    YLeaf tcp_total_out_bytes; //type: uint64
                                                    YLeaf tcp_bytes_saved; //type: uint64
                                                    YLeaf tcp_compressed_packets_out; //type: uint64
                                                    YLeaf tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf tcp_full_header_packets_out; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats


                                            class ChildPolicy : public Entity
                                            {
                                                public:
                                                    ChildPolicy();
                                                    ~ChildPolicy();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;





                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy


                                            class CacStats : public Entity
                                            {
                                                public:
                                                    CacStats();
                                                    ~CacStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf drop_rates; //type: uint32
                                                    YLeaf admitpackets; //type: uint64
                                                    YLeaf admit_bytes; //type: uint64
                                                    YLeaf admit_rates; //type: uint32



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats


                                            class QueueStatsArray : public Entity
                                            {
                                                public:
                                                    QueueStatsArray();
                                                    ~QueueStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf queue_id; //type: uint32
                                                    YLeaf tail_drop_packets; //type: uint64
                                                    YLeaf tail_drop_bytes; //type: uint64
                                                    YLeaf atm_clp0_drop_packets; //type: uint64
                                                    YLeaf atm_clp0_drop_bytes; //type: uint64
                                                    YLeaf atm_clp1_drop_packets; //type: uint64
                                                    YLeaf atm_clp1_drop_bytes; //type: uint64
                                                    YLeaf queue_drop_threshold; //type: uint32
                                                    YLeaf forced_wred_stats_display; //type: boolean
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32

                                                class QueueInstanceLength : public Entity
                                                {
                                                    public:
                                                        QueueInstanceLength();
                                                        ~QueueInstanceLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                class QueueAverageLength : public Entity
                                                {
                                                    public:
                                                        QueueAverageLength();
                                                        ~QueueAverageLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                class QueueMaxLength : public Entity
                                                {
                                                    public:
                                                        QueueMaxLength();
                                                        ~QueueMaxLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray


                                            class PoliceStatsArray : public Entity
                                            {
                                                public:
                                                    PoliceStatsArray();
                                                    ~PoliceStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf violate_packets; //type: uint64
                                                    YLeaf violate_bytes; //type: uint64
                                                    YLeaf parent_drop_packets; //type: uint64
                                                    YLeaf parent_drop_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32
                                                    YLeaf violate_rate; //type: uint32

                                                class ColorClassStats : public Entity
                                                {
                                                    public:
                                                        ColorClassStats();
                                                        ~ColorClassStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf conform_class_conform_packets; //type: uint64
                                                        YLeaf conform_class_conform_bytes; //type: uint64
                                                        YLeaf conform_class_conform_rate; //type: uint32
                                                        YLeaf conform_class_exceed_packets; //type: uint64
                                                        YLeaf conform_class_exceed_bytes; //type: uint64
                                                        YLeaf conform_class_exceed_rate; //type: uint32
                                                        YLeaf conform_class_violate_packets; //type: uint64
                                                        YLeaf conform_class_violate_bytes; //type: uint64
                                                        YLeaf conform_class_violate_rate; //type: uint32
                                                        YLeaf exceed_class_exceed_packets; //type: uint64
                                                        YLeaf exceed_class_exceed_bytes; //type: uint64
                                                        YLeaf exceed_class_exceed_rate; //type: uint32
                                                        YLeaf exceed_class_violate_packets; //type: uint64
                                                        YLeaf exceed_class_violate_bytes; //type: uint64
                                                        YLeaf exceed_class_violate_rate; //type: uint32
                                                        YLeaf violate_class_violate_packets; //type: uint64
                                                        YLeaf violate_class_violate_bytes; //type: uint64
                                                        YLeaf violate_class_violate_rate; //type: uint32



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray


                                            class WredStatsArray : public Entity
                                            {
                                                public:
                                                    WredStatsArray();
                                                    ~WredStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf profile_title; //type: string
                                                    YLeaf red_transmit_packets; //type: uint64
                                                    YLeaf red_transmit_bytes; //type: uint64
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf red_ecn_marked_packets; //type: uint64
                                                    YLeaf red_ecn_marked_bytes; //type: uint64

                                                class RedLabel : public Entity
                                                {
                                                    public:
                                                        RedLabel();
                                                        ~RedLabel();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf wred_type; //type: WredEnum
                                                        YLeaf value_; //type: uint8



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats> cac_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat> > class_stat;


                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics> statistics;


                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input


                                class Output : public Entity
                                {
                                    public:
                                        Output();
                                        ~Output();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;



                                    class Statistics : public Entity
                                    {
                                        public:
                                            Statistics();
                                            ~Statistics();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf policy_name; //type: string
                                            YLeaf state; //type: PolicyStateEnum
                                            YLeaf state_description; //type: string
                                            YLeaf satid; //type: uint32

                                        class ClassStat : public Entity
                                        {
                                            public:
                                                ClassStat();
                                                ~ClassStat();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf counter_validity_bitmask; //type: uint64
                                                YLeaf class_name; //type: string
                                                YLeaf shared_queue_id; //type: uint32
                                                YLeaf queue_descr; //type: string
                                                YLeaf cac_state; //type: CacStateEnum

                                            class GeneralStats : public Entity
                                            {
                                                public:
                                                    GeneralStats();
                                                    ~GeneralStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf transmit_packets; //type: uint64
                                                    YLeaf transmit_bytes; //type: uint64
                                                    YLeaf total_drop_packets; //type: uint64
                                                    YLeaf total_drop_bytes; //type: uint64
                                                    YLeaf total_drop_rate; //type: uint32
                                                    YLeaf match_data_rate; //type: uint32
                                                    YLeaf total_transmit_rate; //type: uint32
                                                    YLeaf pre_policy_matched_packets; //type: uint64
                                                    YLeaf pre_policy_matched_bytes; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats


                                            class IphcStats : public Entity
                                            {
                                                public:
                                                    IphcStats();
                                                    ~IphcStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf non_tcp_total_out_packets; //type: uint64
                                                    YLeaf non_tcp_total_out_bytes; //type: uint64
                                                    YLeaf non_tcp_bytes_saved; //type: uint64
                                                    YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                    YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                    YLeaf tcp_total_out_packets; //type: uint64
                                                    YLeaf tcp_total_out_bytes; //type: uint64
                                                    YLeaf tcp_bytes_saved; //type: uint64
                                                    YLeaf tcp_compressed_packets_out; //type: uint64
                                                    YLeaf tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf tcp_full_header_packets_out; //type: uint64



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats


                                            class ChildPolicy : public Entity
                                            {
                                                public:
                                                    ChildPolicy();
                                                    ~ChildPolicy();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;





                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy


                                            class CacStats : public Entity
                                            {
                                                public:
                                                    CacStats();
                                                    ~CacStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf drop_rates; //type: uint32
                                                    YLeaf admitpackets; //type: uint64
                                                    YLeaf admit_bytes; //type: uint64
                                                    YLeaf admit_rates; //type: uint32



                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats


                                            class QueueStatsArray : public Entity
                                            {
                                                public:
                                                    QueueStatsArray();
                                                    ~QueueStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf queue_id; //type: uint32
                                                    YLeaf tail_drop_packets; //type: uint64
                                                    YLeaf tail_drop_bytes; //type: uint64
                                                    YLeaf atm_clp0_drop_packets; //type: uint64
                                                    YLeaf atm_clp0_drop_bytes; //type: uint64
                                                    YLeaf atm_clp1_drop_packets; //type: uint64
                                                    YLeaf atm_clp1_drop_bytes; //type: uint64
                                                    YLeaf queue_drop_threshold; //type: uint32
                                                    YLeaf forced_wred_stats_display; //type: boolean
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32

                                                class QueueInstanceLength : public Entity
                                                {
                                                    public:
                                                        QueueInstanceLength();
                                                        ~QueueInstanceLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                                class QueueAverageLength : public Entity
                                                {
                                                    public:
                                                        QueueAverageLength();
                                                        ~QueueAverageLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                                class QueueMaxLength : public Entity
                                                {
                                                    public:
                                                        QueueMaxLength();
                                                        ~QueueMaxLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray


                                            class PoliceStatsArray : public Entity
                                            {
                                                public:
                                                    PoliceStatsArray();
                                                    ~PoliceStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf violate_packets; //type: uint64
                                                    YLeaf violate_bytes; //type: uint64
                                                    YLeaf parent_drop_packets; //type: uint64
                                                    YLeaf parent_drop_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32
                                                    YLeaf violate_rate; //type: uint32

                                                class ColorClassStats : public Entity
                                                {
                                                    public:
                                                        ColorClassStats();
                                                        ~ColorClassStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf conform_class_conform_packets; //type: uint64
                                                        YLeaf conform_class_conform_bytes; //type: uint64
                                                        YLeaf conform_class_conform_rate; //type: uint32
                                                        YLeaf conform_class_exceed_packets; //type: uint64
                                                        YLeaf conform_class_exceed_bytes; //type: uint64
                                                        YLeaf conform_class_exceed_rate; //type: uint32
                                                        YLeaf conform_class_violate_packets; //type: uint64
                                                        YLeaf conform_class_violate_bytes; //type: uint64
                                                        YLeaf conform_class_violate_rate; //type: uint32
                                                        YLeaf exceed_class_exceed_packets; //type: uint64
                                                        YLeaf exceed_class_exceed_bytes; //type: uint64
                                                        YLeaf exceed_class_exceed_rate; //type: uint32
                                                        YLeaf exceed_class_violate_packets; //type: uint64
                                                        YLeaf exceed_class_violate_bytes; //type: uint64
                                                        YLeaf exceed_class_violate_rate; //type: uint32
                                                        YLeaf violate_class_violate_packets; //type: uint64
                                                        YLeaf violate_class_violate_bytes; //type: uint64
                                                        YLeaf violate_class_violate_rate; //type: uint32



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray


                                            class WredStatsArray : public Entity
                                            {
                                                public:
                                                    WredStatsArray();
                                                    ~WredStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf profile_title; //type: string
                                                    YLeaf red_transmit_packets; //type: uint64
                                                    YLeaf red_transmit_bytes; //type: uint64
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf red_ecn_marked_packets; //type: uint64
                                                    YLeaf red_ecn_marked_bytes; //type: uint64

                                                class RedLabel : public Entity
                                                {
                                                    public:
                                                        RedLabel();
                                                        ~RedLabel();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf wred_type; //type: WredEnum
                                                        YLeaf value_; //type: uint8



                                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats> cac_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat> > class_stat;


                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics> statistics;


                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input> input;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output> output;


                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds::SatelliteId> > satellite_id;


                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds


                        class Input : public Entity
                        {
                            public:
                                Input();
                                ~Input();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;



                            class Statistics : public Entity
                            {
                                public:
                                    Statistics();
                                    ~Statistics();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf policy_name; //type: string
                                    YLeaf state; //type: PolicyStateEnum
                                    YLeaf state_description; //type: string
                                    YLeaf satid; //type: uint32

                                class ClassStat : public Entity
                                {
                                    public:
                                        ClassStat();
                                        ~ClassStat();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf counter_validity_bitmask; //type: uint64
                                        YLeaf class_name; //type: string
                                        YLeaf shared_queue_id; //type: uint32
                                        YLeaf queue_descr; //type: string
                                        YLeaf cac_state; //type: CacStateEnum

                                    class GeneralStats : public Entity
                                    {
                                        public:
                                            GeneralStats();
                                            ~GeneralStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf transmit_packets; //type: uint64
                                            YLeaf transmit_bytes; //type: uint64
                                            YLeaf total_drop_packets; //type: uint64
                                            YLeaf total_drop_bytes; //type: uint64
                                            YLeaf total_drop_rate; //type: uint32
                                            YLeaf match_data_rate; //type: uint32
                                            YLeaf total_transmit_rate; //type: uint32
                                            YLeaf pre_policy_matched_packets; //type: uint64
                                            YLeaf pre_policy_matched_bytes; //type: uint64



                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::GeneralStats


                                    class IphcStats : public Entity
                                    {
                                        public:
                                            IphcStats();
                                            ~IphcStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf non_tcp_total_out_packets; //type: uint64
                                            YLeaf non_tcp_total_out_bytes; //type: uint64
                                            YLeaf non_tcp_bytes_saved; //type: uint64
                                            YLeaf non_tcp_compressed_packets_out; //type: uint64
                                            YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                            YLeaf non_tcp_full_header_packets_out; //type: uint64
                                            YLeaf tcp_total_out_packets; //type: uint64
                                            YLeaf tcp_total_out_bytes; //type: uint64
                                            YLeaf tcp_bytes_saved; //type: uint64
                                            YLeaf tcp_compressed_packets_out; //type: uint64
                                            YLeaf tcp_bytes_sent_rate; //type: uint32
                                            YLeaf tcp_full_header_packets_out; //type: uint64



                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::IphcStats


                                    class ChildPolicy : public Entity
                                    {
                                        public:
                                            ChildPolicy();
                                            ~ChildPolicy();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;





                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::ChildPolicy


                                    class CacStats : public Entity
                                    {
                                        public:
                                            CacStats();
                                            ~CacStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf drop_packets; //type: uint64
                                            YLeaf drop_bytes; //type: uint64
                                            YLeaf drop_rates; //type: uint32
                                            YLeaf admitpackets; //type: uint64
                                            YLeaf admit_bytes; //type: uint64
                                            YLeaf admit_rates; //type: uint32



                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::CacStats


                                    class QueueStatsArray : public Entity
                                    {
                                        public:
                                            QueueStatsArray();
                                            ~QueueStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf queue_id; //type: uint32
                                            YLeaf tail_drop_packets; //type: uint64
                                            YLeaf tail_drop_bytes; //type: uint64
                                            YLeaf atm_clp0_drop_packets; //type: uint64
                                            YLeaf atm_clp0_drop_bytes; //type: uint64
                                            YLeaf atm_clp1_drop_packets; //type: uint64
                                            YLeaf atm_clp1_drop_bytes; //type: uint64
                                            YLeaf queue_drop_threshold; //type: uint32
                                            YLeaf forced_wred_stats_display; //type: boolean
                                            YLeaf random_drop_packets; //type: uint64
                                            YLeaf random_drop_bytes; //type: uint64
                                            YLeaf max_threshold_packets; //type: uint64
                                            YLeaf max_threshold_bytes; //type: uint64
                                            YLeaf conform_packets; //type: uint64
                                            YLeaf conform_bytes; //type: uint64
                                            YLeaf exceed_packets; //type: uint64
                                            YLeaf exceed_bytes; //type: uint64
                                            YLeaf conform_rate; //type: uint32
                                            YLeaf exceed_rate; //type: uint32

                                        class QueueInstanceLength : public Entity
                                        {
                                            public:
                                                QueueInstanceLength();
                                                ~QueueInstanceLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                        class QueueAverageLength : public Entity
                                        {
                                            public:
                                                QueueAverageLength();
                                                ~QueueAverageLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                        class QueueMaxLength : public Entity
                                        {
                                            public:
                                                QueueMaxLength();
                                                ~QueueMaxLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray


                                    class PoliceStatsArray : public Entity
                                    {
                                        public:
                                            PoliceStatsArray();
                                            ~PoliceStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf drop_packets; //type: uint64
                                            YLeaf drop_bytes; //type: uint64
                                            YLeaf conform_packets; //type: uint64
                                            YLeaf conform_bytes; //type: uint64
                                            YLeaf exceed_packets; //type: uint64
                                            YLeaf exceed_bytes; //type: uint64
                                            YLeaf violate_packets; //type: uint64
                                            YLeaf violate_bytes; //type: uint64
                                            YLeaf parent_drop_packets; //type: uint64
                                            YLeaf parent_drop_bytes; //type: uint64
                                            YLeaf conform_rate; //type: uint32
                                            YLeaf exceed_rate; //type: uint32
                                            YLeaf violate_rate; //type: uint32

                                        class ColorClassStats : public Entity
                                        {
                                            public:
                                                ColorClassStats();
                                                ~ColorClassStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf conform_class_conform_packets; //type: uint64
                                                YLeaf conform_class_conform_bytes; //type: uint64
                                                YLeaf conform_class_conform_rate; //type: uint32
                                                YLeaf conform_class_exceed_packets; //type: uint64
                                                YLeaf conform_class_exceed_bytes; //type: uint64
                                                YLeaf conform_class_exceed_rate; //type: uint32
                                                YLeaf conform_class_violate_packets; //type: uint64
                                                YLeaf conform_class_violate_bytes; //type: uint64
                                                YLeaf conform_class_violate_rate; //type: uint32
                                                YLeaf exceed_class_exceed_packets; //type: uint64
                                                YLeaf exceed_class_exceed_bytes; //type: uint64
                                                YLeaf exceed_class_exceed_rate; //type: uint32
                                                YLeaf exceed_class_violate_packets; //type: uint64
                                                YLeaf exceed_class_violate_bytes; //type: uint64
                                                YLeaf exceed_class_violate_rate; //type: uint32
                                                YLeaf violate_class_violate_packets; //type: uint64
                                                YLeaf violate_class_violate_bytes; //type: uint64
                                                YLeaf violate_class_violate_rate; //type: uint32



                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::PoliceStatsArray


                                    class WredStatsArray : public Entity
                                    {
                                        public:
                                            WredStatsArray();
                                            ~WredStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf profile_title; //type: string
                                            YLeaf red_transmit_packets; //type: uint64
                                            YLeaf red_transmit_bytes; //type: uint64
                                            YLeaf random_drop_packets; //type: uint64
                                            YLeaf random_drop_bytes; //type: uint64
                                            YLeaf max_threshold_packets; //type: uint64
                                            YLeaf max_threshold_bytes; //type: uint64
                                            YLeaf red_ecn_marked_packets; //type: uint64
                                            YLeaf red_ecn_marked_bytes; //type: uint64

                                        class RedLabel : public Entity
                                        {
                                            public:
                                                RedLabel();
                                                ~RedLabel();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf wred_type; //type: WredEnum
                                                YLeaf value_; //type: uint8



                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::WredStatsArray


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::CacStats> cac_stats;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat


                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics::ClassStat> > class_stat;


                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics


                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input::Statistics> statistics;


                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input


                        class Output : public Entity
                        {
                            public:
                                Output();
                                ~Output();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;



                            class Statistics : public Entity
                            {
                                public:
                                    Statistics();
                                    ~Statistics();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf policy_name; //type: string
                                    YLeaf state; //type: PolicyStateEnum
                                    YLeaf state_description; //type: string
                                    YLeaf satid; //type: uint32

                                class ClassStat : public Entity
                                {
                                    public:
                                        ClassStat();
                                        ~ClassStat();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf counter_validity_bitmask; //type: uint64
                                        YLeaf class_name; //type: string
                                        YLeaf shared_queue_id; //type: uint32
                                        YLeaf queue_descr; //type: string
                                        YLeaf cac_state; //type: CacStateEnum

                                    class GeneralStats : public Entity
                                    {
                                        public:
                                            GeneralStats();
                                            ~GeneralStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf transmit_packets; //type: uint64
                                            YLeaf transmit_bytes; //type: uint64
                                            YLeaf total_drop_packets; //type: uint64
                                            YLeaf total_drop_bytes; //type: uint64
                                            YLeaf total_drop_rate; //type: uint32
                                            YLeaf match_data_rate; //type: uint32
                                            YLeaf total_transmit_rate; //type: uint32
                                            YLeaf pre_policy_matched_packets; //type: uint64
                                            YLeaf pre_policy_matched_bytes; //type: uint64



                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::GeneralStats


                                    class IphcStats : public Entity
                                    {
                                        public:
                                            IphcStats();
                                            ~IphcStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf non_tcp_total_out_packets; //type: uint64
                                            YLeaf non_tcp_total_out_bytes; //type: uint64
                                            YLeaf non_tcp_bytes_saved; //type: uint64
                                            YLeaf non_tcp_compressed_packets_out; //type: uint64
                                            YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                            YLeaf non_tcp_full_header_packets_out; //type: uint64
                                            YLeaf tcp_total_out_packets; //type: uint64
                                            YLeaf tcp_total_out_bytes; //type: uint64
                                            YLeaf tcp_bytes_saved; //type: uint64
                                            YLeaf tcp_compressed_packets_out; //type: uint64
                                            YLeaf tcp_bytes_sent_rate; //type: uint32
                                            YLeaf tcp_full_header_packets_out; //type: uint64



                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::IphcStats


                                    class ChildPolicy : public Entity
                                    {
                                        public:
                                            ChildPolicy();
                                            ~ChildPolicy();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;





                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::ChildPolicy


                                    class CacStats : public Entity
                                    {
                                        public:
                                            CacStats();
                                            ~CacStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf drop_packets; //type: uint64
                                            YLeaf drop_bytes; //type: uint64
                                            YLeaf drop_rates; //type: uint32
                                            YLeaf admitpackets; //type: uint64
                                            YLeaf admit_bytes; //type: uint64
                                            YLeaf admit_rates; //type: uint32



                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::CacStats


                                    class QueueStatsArray : public Entity
                                    {
                                        public:
                                            QueueStatsArray();
                                            ~QueueStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf queue_id; //type: uint32
                                            YLeaf tail_drop_packets; //type: uint64
                                            YLeaf tail_drop_bytes; //type: uint64
                                            YLeaf atm_clp0_drop_packets; //type: uint64
                                            YLeaf atm_clp0_drop_bytes; //type: uint64
                                            YLeaf atm_clp1_drop_packets; //type: uint64
                                            YLeaf atm_clp1_drop_bytes; //type: uint64
                                            YLeaf queue_drop_threshold; //type: uint32
                                            YLeaf forced_wred_stats_display; //type: boolean
                                            YLeaf random_drop_packets; //type: uint64
                                            YLeaf random_drop_bytes; //type: uint64
                                            YLeaf max_threshold_packets; //type: uint64
                                            YLeaf max_threshold_bytes; //type: uint64
                                            YLeaf conform_packets; //type: uint64
                                            YLeaf conform_bytes; //type: uint64
                                            YLeaf exceed_packets; //type: uint64
                                            YLeaf exceed_bytes; //type: uint64
                                            YLeaf conform_rate; //type: uint32
                                            YLeaf exceed_rate; //type: uint32

                                        class QueueInstanceLength : public Entity
                                        {
                                            public:
                                                QueueInstanceLength();
                                                ~QueueInstanceLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                        class QueueAverageLength : public Entity
                                        {
                                            public:
                                                QueueAverageLength();
                                                ~QueueAverageLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                        class QueueMaxLength : public Entity
                                        {
                                            public:
                                                QueueMaxLength();
                                                ~QueueMaxLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray


                                    class PoliceStatsArray : public Entity
                                    {
                                        public:
                                            PoliceStatsArray();
                                            ~PoliceStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf drop_packets; //type: uint64
                                            YLeaf drop_bytes; //type: uint64
                                            YLeaf conform_packets; //type: uint64
                                            YLeaf conform_bytes; //type: uint64
                                            YLeaf exceed_packets; //type: uint64
                                            YLeaf exceed_bytes; //type: uint64
                                            YLeaf violate_packets; //type: uint64
                                            YLeaf violate_bytes; //type: uint64
                                            YLeaf parent_drop_packets; //type: uint64
                                            YLeaf parent_drop_bytes; //type: uint64
                                            YLeaf conform_rate; //type: uint32
                                            YLeaf exceed_rate; //type: uint32
                                            YLeaf violate_rate; //type: uint32

                                        class ColorClassStats : public Entity
                                        {
                                            public:
                                                ColorClassStats();
                                                ~ColorClassStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf conform_class_conform_packets; //type: uint64
                                                YLeaf conform_class_conform_bytes; //type: uint64
                                                YLeaf conform_class_conform_rate; //type: uint32
                                                YLeaf conform_class_exceed_packets; //type: uint64
                                                YLeaf conform_class_exceed_bytes; //type: uint64
                                                YLeaf conform_class_exceed_rate; //type: uint32
                                                YLeaf conform_class_violate_packets; //type: uint64
                                                YLeaf conform_class_violate_bytes; //type: uint64
                                                YLeaf conform_class_violate_rate; //type: uint32
                                                YLeaf exceed_class_exceed_packets; //type: uint64
                                                YLeaf exceed_class_exceed_bytes; //type: uint64
                                                YLeaf exceed_class_exceed_rate; //type: uint32
                                                YLeaf exceed_class_violate_packets; //type: uint64
                                                YLeaf exceed_class_violate_bytes; //type: uint64
                                                YLeaf exceed_class_violate_rate; //type: uint32
                                                YLeaf violate_class_violate_packets; //type: uint64
                                                YLeaf violate_class_violate_bytes; //type: uint64
                                                YLeaf violate_class_violate_rate; //type: uint32



                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::PoliceStatsArray


                                    class WredStatsArray : public Entity
                                    {
                                        public:
                                            WredStatsArray();
                                            ~WredStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf profile_title; //type: string
                                            YLeaf red_transmit_packets; //type: uint64
                                            YLeaf red_transmit_bytes; //type: uint64
                                            YLeaf random_drop_packets; //type: uint64
                                            YLeaf random_drop_bytes; //type: uint64
                                            YLeaf max_threshold_packets; //type: uint64
                                            YLeaf max_threshold_bytes; //type: uint64
                                            YLeaf red_ecn_marked_packets; //type: uint64
                                            YLeaf red_ecn_marked_bytes; //type: uint64

                                        class RedLabel : public Entity
                                        {
                                            public:
                                                RedLabel();
                                                ~RedLabel();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf wred_type; //type: WredEnum
                                                YLeaf value_; //type: uint8



                                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::WredStatsArray


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::CacStats> cac_stats;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat


                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics::ClassStat> > class_stat;


                            }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics


                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output::Statistics> statistics;


                        }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Input> input;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::MemberInterfaces> member_interfaces;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Nodes_> nodes;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::Output> output;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface::SatelliteIds> satellite_ids;


                    }; // Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface


                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable::Interface> > interface;


                }; // Qos::Nodes::Node::PolicyMap::InterfaceTable


                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::InterfaceTable> interface_table;
                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap::SharedPolicyInstances> shared_policy_instances;


            }; // Qos::Nodes::Node::PolicyMap


                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node::PolicyMap> policy_map;


        }; // Qos::Nodes::Node


            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes::Node> > node;


    }; // Qos::Nodes


    class QosGlobal : public Entity
    {
        public:
            QosGlobal();
            ~QosGlobal();

            bool has_data() const override;
            bool has_operation() const override;
            EntityPath get_entity_path(Entity* parent) const override;
            std::string get_segment_path() const override;
            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
            void set_value(const std::string & value_path, std::string value) override;
            std::map<std::string, Entity*> & get_children() override;



        class VoQ : public Entity
        {
            public:
                VoQ();
                ~VoQ();

                bool has_data() const override;
                bool has_operation() const override;
                EntityPath get_entity_path(Entity* parent) const override;
                std::string get_segment_path() const override;
                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                void set_value(const std::string & value_path, std::string value) override;
                std::map<std::string, Entity*> & get_children() override;



            class VoQStatistics : public Entity
            {
                public:
                    VoQStatistics();
                    ~VoQStatistics();

                    bool has_data() const override;
                    bool has_operation() const override;
                    EntityPath get_entity_path(Entity* parent) const override;
                    std::string get_segment_path() const override;
                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                    void set_value(const std::string & value_path, std::string value) override;
                    std::map<std::string, Entity*> & get_children() override;



                class VoQinterfaces : public Entity
                {
                    public:
                        VoQinterfaces();
                        ~VoQinterfaces();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;



                    class VoQinterface : public Entity
                    {
                        public:
                            VoQinterface();
                            ~VoQinterface();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;


                            YLeaf interface_name; //type: string

                        class OutputVoQ : public Entity
                        {
                            public:
                                OutputVoQ();
                                ~OutputVoQ();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;



                            class LocationvoQs : public Entity
                            {
                                public:
                                    LocationvoQs();
                                    ~LocationvoQs();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;



                                class LocationvoQ : public Entity
                                {
                                    public:
                                        LocationvoQ();
                                        ~LocationvoQ();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf node_name; //type: string

                                    class VoQStats : public Entity
                                    {
                                        public:
                                            VoQStats();
                                            ~VoQStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf policy_name; //type: string
                                            YLeaf state; //type: PolicyStateEnum
                                            YLeaf state_description; //type: string
                                            YLeaf satid; //type: uint32

                                        class ClassStat : public Entity
                                        {
                                            public:
                                                ClassStat();
                                                ~ClassStat();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf counter_validity_bitmask; //type: uint64
                                                YLeaf class_name; //type: string
                                                YLeaf shared_queue_id; //type: uint32
                                                YLeaf queue_descr; //type: string
                                                YLeaf cac_state; //type: CacStateEnum

                                            class GeneralStats : public Entity
                                            {
                                                public:
                                                    GeneralStats();
                                                    ~GeneralStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf transmit_packets; //type: uint64
                                                    YLeaf transmit_bytes; //type: uint64
                                                    YLeaf total_drop_packets; //type: uint64
                                                    YLeaf total_drop_bytes; //type: uint64
                                                    YLeaf total_drop_rate; //type: uint32
                                                    YLeaf match_data_rate; //type: uint32
                                                    YLeaf total_transmit_rate; //type: uint32
                                                    YLeaf pre_policy_matched_packets; //type: uint64
                                                    YLeaf pre_policy_matched_bytes; //type: uint64



                                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::GeneralStats


                                            class IphcStats : public Entity
                                            {
                                                public:
                                                    IphcStats();
                                                    ~IphcStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf non_tcp_total_out_packets; //type: uint64
                                                    YLeaf non_tcp_total_out_bytes; //type: uint64
                                                    YLeaf non_tcp_bytes_saved; //type: uint64
                                                    YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                    YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                    YLeaf tcp_total_out_packets; //type: uint64
                                                    YLeaf tcp_total_out_bytes; //type: uint64
                                                    YLeaf tcp_bytes_saved; //type: uint64
                                                    YLeaf tcp_compressed_packets_out; //type: uint64
                                                    YLeaf tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf tcp_full_header_packets_out; //type: uint64



                                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::IphcStats


                                            class ChildPolicy : public Entity
                                            {
                                                public:
                                                    ChildPolicy();
                                                    ~ChildPolicy();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;





                                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::ChildPolicy


                                            class CacStats : public Entity
                                            {
                                                public:
                                                    CacStats();
                                                    ~CacStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf drop_rates; //type: uint32
                                                    YLeaf admitpackets; //type: uint64
                                                    YLeaf admit_bytes; //type: uint64
                                                    YLeaf admit_rates; //type: uint32



                                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::CacStats


                                            class QueueStatsArray : public Entity
                                            {
                                                public:
                                                    QueueStatsArray();
                                                    ~QueueStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf queue_id; //type: uint32
                                                    YLeaf tail_drop_packets; //type: uint64
                                                    YLeaf tail_drop_bytes; //type: uint64
                                                    YLeaf atm_clp0_drop_packets; //type: uint64
                                                    YLeaf atm_clp0_drop_bytes; //type: uint64
                                                    YLeaf atm_clp1_drop_packets; //type: uint64
                                                    YLeaf atm_clp1_drop_bytes; //type: uint64
                                                    YLeaf queue_drop_threshold; //type: uint32
                                                    YLeaf forced_wred_stats_display; //type: boolean
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32

                                                class QueueInstanceLength : public Entity
                                                {
                                                    public:
                                                        QueueInstanceLength();
                                                        ~QueueInstanceLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::QueueStatsArray::QueueInstanceLength


                                                class QueueAverageLength : public Entity
                                                {
                                                    public:
                                                        QueueAverageLength();
                                                        ~QueueAverageLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::QueueStatsArray::QueueAverageLength


                                                class QueueMaxLength : public Entity
                                                {
                                                    public:
                                                        QueueMaxLength();
                                                        ~QueueMaxLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::QueueStatsArray::QueueMaxLength


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::QueueStatsArray


                                            class PoliceStatsArray : public Entity
                                            {
                                                public:
                                                    PoliceStatsArray();
                                                    ~PoliceStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf violate_packets; //type: uint64
                                                    YLeaf violate_bytes; //type: uint64
                                                    YLeaf parent_drop_packets; //type: uint64
                                                    YLeaf parent_drop_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32
                                                    YLeaf violate_rate; //type: uint32

                                                class ColorClassStats : public Entity
                                                {
                                                    public:
                                                        ColorClassStats();
                                                        ~ColorClassStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf conform_class_conform_packets; //type: uint64
                                                        YLeaf conform_class_conform_bytes; //type: uint64
                                                        YLeaf conform_class_conform_rate; //type: uint32
                                                        YLeaf conform_class_exceed_packets; //type: uint64
                                                        YLeaf conform_class_exceed_bytes; //type: uint64
                                                        YLeaf conform_class_exceed_rate; //type: uint32
                                                        YLeaf conform_class_violate_packets; //type: uint64
                                                        YLeaf conform_class_violate_bytes; //type: uint64
                                                        YLeaf conform_class_violate_rate; //type: uint32
                                                        YLeaf exceed_class_exceed_packets; //type: uint64
                                                        YLeaf exceed_class_exceed_bytes; //type: uint64
                                                        YLeaf exceed_class_exceed_rate; //type: uint32
                                                        YLeaf exceed_class_violate_packets; //type: uint64
                                                        YLeaf exceed_class_violate_bytes; //type: uint64
                                                        YLeaf exceed_class_violate_rate; //type: uint32
                                                        YLeaf violate_class_violate_packets; //type: uint64
                                                        YLeaf violate_class_violate_bytes; //type: uint64
                                                        YLeaf violate_class_violate_rate; //type: uint32



                                                }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::PoliceStatsArray::ColorClassStats


                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::PoliceStatsArray


                                            class WredStatsArray : public Entity
                                            {
                                                public:
                                                    WredStatsArray();
                                                    ~WredStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf profile_title; //type: string
                                                    YLeaf red_transmit_packets; //type: uint64
                                                    YLeaf red_transmit_bytes; //type: uint64
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf red_ecn_marked_packets; //type: uint64
                                                    YLeaf red_ecn_marked_bytes; //type: uint64

                                                class RedLabel : public Entity
                                                {
                                                    public:
                                                        RedLabel();
                                                        ~RedLabel();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf wred_type; //type: WredEnum
                                                        YLeaf value_; //type: uint8



                                                }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::WredStatsArray::RedLabel


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::WredStatsArray::RedLabel> > red_label;


                                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::WredStatsArray


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::CacStats> cac_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::ChildPolicy> child_policy;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::GeneralStats> general_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::IphcStats> iphc_stats;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::PoliceStatsArray> > police_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::QueueStatsArray> > queue_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat::WredStatsArray> > wred_stats_array;


                                        }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats::ClassStat> > class_stat;


                                    }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ::VoQStats> vo_q_stats;


                                }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ


                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs::LocationvoQ> > locationvo_q;


                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs


                            class VoQStats : public Entity
                            {
                                public:
                                    VoQStats();
                                    ~VoQStats();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf policy_name; //type: string
                                    YLeaf state; //type: PolicyStateEnum
                                    YLeaf state_description; //type: string
                                    YLeaf satid; //type: uint32

                                class ClassStat : public Entity
                                {
                                    public:
                                        ClassStat();
                                        ~ClassStat();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf counter_validity_bitmask; //type: uint64
                                        YLeaf class_name; //type: string
                                        YLeaf shared_queue_id; //type: uint32
                                        YLeaf queue_descr; //type: string
                                        YLeaf cac_state; //type: CacStateEnum

                                    class GeneralStats : public Entity
                                    {
                                        public:
                                            GeneralStats();
                                            ~GeneralStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf transmit_packets; //type: uint64
                                            YLeaf transmit_bytes; //type: uint64
                                            YLeaf total_drop_packets; //type: uint64
                                            YLeaf total_drop_bytes; //type: uint64
                                            YLeaf total_drop_rate; //type: uint32
                                            YLeaf match_data_rate; //type: uint32
                                            YLeaf total_transmit_rate; //type: uint32
                                            YLeaf pre_policy_matched_packets; //type: uint64
                                            YLeaf pre_policy_matched_bytes; //type: uint64



                                    }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::GeneralStats


                                    class IphcStats : public Entity
                                    {
                                        public:
                                            IphcStats();
                                            ~IphcStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf non_tcp_total_out_packets; //type: uint64
                                            YLeaf non_tcp_total_out_bytes; //type: uint64
                                            YLeaf non_tcp_bytes_saved; //type: uint64
                                            YLeaf non_tcp_compressed_packets_out; //type: uint64
                                            YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                            YLeaf non_tcp_full_header_packets_out; //type: uint64
                                            YLeaf tcp_total_out_packets; //type: uint64
                                            YLeaf tcp_total_out_bytes; //type: uint64
                                            YLeaf tcp_bytes_saved; //type: uint64
                                            YLeaf tcp_compressed_packets_out; //type: uint64
                                            YLeaf tcp_bytes_sent_rate; //type: uint32
                                            YLeaf tcp_full_header_packets_out; //type: uint64



                                    }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::IphcStats


                                    class ChildPolicy : public Entity
                                    {
                                        public:
                                            ChildPolicy();
                                            ~ChildPolicy();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;





                                    }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::ChildPolicy


                                    class CacStats : public Entity
                                    {
                                        public:
                                            CacStats();
                                            ~CacStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf drop_packets; //type: uint64
                                            YLeaf drop_bytes; //type: uint64
                                            YLeaf drop_rates; //type: uint32
                                            YLeaf admitpackets; //type: uint64
                                            YLeaf admit_bytes; //type: uint64
                                            YLeaf admit_rates; //type: uint32



                                    }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::CacStats


                                    class QueueStatsArray : public Entity
                                    {
                                        public:
                                            QueueStatsArray();
                                            ~QueueStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf queue_id; //type: uint32
                                            YLeaf tail_drop_packets; //type: uint64
                                            YLeaf tail_drop_bytes; //type: uint64
                                            YLeaf atm_clp0_drop_packets; //type: uint64
                                            YLeaf atm_clp0_drop_bytes; //type: uint64
                                            YLeaf atm_clp1_drop_packets; //type: uint64
                                            YLeaf atm_clp1_drop_bytes; //type: uint64
                                            YLeaf queue_drop_threshold; //type: uint32
                                            YLeaf forced_wred_stats_display; //type: boolean
                                            YLeaf random_drop_packets; //type: uint64
                                            YLeaf random_drop_bytes; //type: uint64
                                            YLeaf max_threshold_packets; //type: uint64
                                            YLeaf max_threshold_bytes; //type: uint64
                                            YLeaf conform_packets; //type: uint64
                                            YLeaf conform_bytes; //type: uint64
                                            YLeaf exceed_packets; //type: uint64
                                            YLeaf exceed_bytes; //type: uint64
                                            YLeaf conform_rate; //type: uint32
                                            YLeaf exceed_rate; //type: uint32

                                        class QueueInstanceLength : public Entity
                                        {
                                            public:
                                                QueueInstanceLength();
                                                ~QueueInstanceLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::QueueStatsArray::QueueInstanceLength


                                        class QueueAverageLength : public Entity
                                        {
                                            public:
                                                QueueAverageLength();
                                                ~QueueAverageLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::QueueStatsArray::QueueAverageLength


                                        class QueueMaxLength : public Entity
                                        {
                                            public:
                                                QueueMaxLength();
                                                ~QueueMaxLength();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf value_; //type: uint32
                                                YLeaf unit; //type: PolicyParamUnitEnum



                                        }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::QueueStatsArray::QueueMaxLength


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                    }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::QueueStatsArray


                                    class PoliceStatsArray : public Entity
                                    {
                                        public:
                                            PoliceStatsArray();
                                            ~PoliceStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf drop_packets; //type: uint64
                                            YLeaf drop_bytes; //type: uint64
                                            YLeaf conform_packets; //type: uint64
                                            YLeaf conform_bytes; //type: uint64
                                            YLeaf exceed_packets; //type: uint64
                                            YLeaf exceed_bytes; //type: uint64
                                            YLeaf violate_packets; //type: uint64
                                            YLeaf violate_bytes; //type: uint64
                                            YLeaf parent_drop_packets; //type: uint64
                                            YLeaf parent_drop_bytes; //type: uint64
                                            YLeaf conform_rate; //type: uint32
                                            YLeaf exceed_rate; //type: uint32
                                            YLeaf violate_rate; //type: uint32

                                        class ColorClassStats : public Entity
                                        {
                                            public:
                                                ColorClassStats();
                                                ~ColorClassStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf conform_class_conform_packets; //type: uint64
                                                YLeaf conform_class_conform_bytes; //type: uint64
                                                YLeaf conform_class_conform_rate; //type: uint32
                                                YLeaf conform_class_exceed_packets; //type: uint64
                                                YLeaf conform_class_exceed_bytes; //type: uint64
                                                YLeaf conform_class_exceed_rate; //type: uint32
                                                YLeaf conform_class_violate_packets; //type: uint64
                                                YLeaf conform_class_violate_bytes; //type: uint64
                                                YLeaf conform_class_violate_rate; //type: uint32
                                                YLeaf exceed_class_exceed_packets; //type: uint64
                                                YLeaf exceed_class_exceed_bytes; //type: uint64
                                                YLeaf exceed_class_exceed_rate; //type: uint32
                                                YLeaf exceed_class_violate_packets; //type: uint64
                                                YLeaf exceed_class_violate_bytes; //type: uint64
                                                YLeaf exceed_class_violate_rate; //type: uint32
                                                YLeaf violate_class_violate_packets; //type: uint64
                                                YLeaf violate_class_violate_bytes; //type: uint64
                                                YLeaf violate_class_violate_rate; //type: uint32



                                        }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::PoliceStatsArray::ColorClassStats


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                    }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::PoliceStatsArray


                                    class WredStatsArray : public Entity
                                    {
                                        public:
                                            WredStatsArray();
                                            ~WredStatsArray();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf profile_title; //type: string
                                            YLeaf red_transmit_packets; //type: uint64
                                            YLeaf red_transmit_bytes; //type: uint64
                                            YLeaf random_drop_packets; //type: uint64
                                            YLeaf random_drop_bytes; //type: uint64
                                            YLeaf max_threshold_packets; //type: uint64
                                            YLeaf max_threshold_bytes; //type: uint64
                                            YLeaf red_ecn_marked_packets; //type: uint64
                                            YLeaf red_ecn_marked_bytes; //type: uint64

                                        class RedLabel : public Entity
                                        {
                                            public:
                                                RedLabel();
                                                ~RedLabel();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf wred_type; //type: WredEnum
                                                YLeaf value_; //type: uint8



                                        }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::WredStatsArray::RedLabel


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::WredStatsArray::RedLabel> > red_label;


                                    }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::WredStatsArray


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::CacStats> cac_stats;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::ChildPolicy> child_policy;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::GeneralStats> general_stats;
                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::IphcStats> iphc_stats;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::PoliceStatsArray> > police_stats_array;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::QueueStatsArray> > queue_stats_array;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat::WredStatsArray> > wred_stats_array;


                                }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat


                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats::ClassStat> > class_stat;


                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats


                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::LocationvoQs> locationvo_qs;
                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ::VoQStats> vo_q_stats;


                        }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ


                        class VoQMemberInterfaces : public Entity
                        {
                            public:
                                VoQMemberInterfaces();
                                ~VoQMemberInterfaces();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;



                            class VoQMemberInterface : public Entity
                            {
                                public:
                                    VoQMemberInterface();
                                    ~VoQMemberInterface();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf interface_name; //type: string

                                class VoQoutput : public Entity
                                {
                                    public:
                                        VoQoutput();
                                        ~VoQoutput();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;



                                    class VoQStats : public Entity
                                    {
                                        public:
                                            VoQStats();
                                            ~VoQStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf policy_name; //type: string
                                            YLeaf state; //type: PolicyStateEnum
                                            YLeaf state_description; //type: string
                                            YLeaf satid; //type: uint32

                                        class ClassStat : public Entity
                                        {
                                            public:
                                                ClassStat();
                                                ~ClassStat();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf counter_validity_bitmask; //type: uint64
                                                YLeaf class_name; //type: string
                                                YLeaf shared_queue_id; //type: uint32
                                                YLeaf queue_descr; //type: string
                                                YLeaf cac_state; //type: CacStateEnum

                                            class GeneralStats : public Entity
                                            {
                                                public:
                                                    GeneralStats();
                                                    ~GeneralStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf transmit_packets; //type: uint64
                                                    YLeaf transmit_bytes; //type: uint64
                                                    YLeaf total_drop_packets; //type: uint64
                                                    YLeaf total_drop_bytes; //type: uint64
                                                    YLeaf total_drop_rate; //type: uint32
                                                    YLeaf match_data_rate; //type: uint32
                                                    YLeaf total_transmit_rate; //type: uint32
                                                    YLeaf pre_policy_matched_packets; //type: uint64
                                                    YLeaf pre_policy_matched_bytes; //type: uint64



                                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::GeneralStats


                                            class IphcStats : public Entity
                                            {
                                                public:
                                                    IphcStats();
                                                    ~IphcStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf non_tcp_total_out_packets; //type: uint64
                                                    YLeaf non_tcp_total_out_bytes; //type: uint64
                                                    YLeaf non_tcp_bytes_saved; //type: uint64
                                                    YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                    YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                    YLeaf tcp_total_out_packets; //type: uint64
                                                    YLeaf tcp_total_out_bytes; //type: uint64
                                                    YLeaf tcp_bytes_saved; //type: uint64
                                                    YLeaf tcp_compressed_packets_out; //type: uint64
                                                    YLeaf tcp_bytes_sent_rate; //type: uint32
                                                    YLeaf tcp_full_header_packets_out; //type: uint64



                                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::IphcStats


                                            class ChildPolicy : public Entity
                                            {
                                                public:
                                                    ChildPolicy();
                                                    ~ChildPolicy();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;





                                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::ChildPolicy


                                            class CacStats : public Entity
                                            {
                                                public:
                                                    CacStats();
                                                    ~CacStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf drop_rates; //type: uint32
                                                    YLeaf admitpackets; //type: uint64
                                                    YLeaf admit_bytes; //type: uint64
                                                    YLeaf admit_rates; //type: uint32



                                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::CacStats


                                            class QueueStatsArray : public Entity
                                            {
                                                public:
                                                    QueueStatsArray();
                                                    ~QueueStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf queue_id; //type: uint32
                                                    YLeaf tail_drop_packets; //type: uint64
                                                    YLeaf tail_drop_bytes; //type: uint64
                                                    YLeaf atm_clp0_drop_packets; //type: uint64
                                                    YLeaf atm_clp0_drop_bytes; //type: uint64
                                                    YLeaf atm_clp1_drop_packets; //type: uint64
                                                    YLeaf atm_clp1_drop_bytes; //type: uint64
                                                    YLeaf queue_drop_threshold; //type: uint32
                                                    YLeaf forced_wred_stats_display; //type: boolean
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32

                                                class QueueInstanceLength : public Entity
                                                {
                                                    public:
                                                        QueueInstanceLength();
                                                        ~QueueInstanceLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::QueueStatsArray::QueueInstanceLength


                                                class QueueAverageLength : public Entity
                                                {
                                                    public:
                                                        QueueAverageLength();
                                                        ~QueueAverageLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::QueueStatsArray::QueueAverageLength


                                                class QueueMaxLength : public Entity
                                                {
                                                    public:
                                                        QueueMaxLength();
                                                        ~QueueMaxLength();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf value_; //type: uint32
                                                        YLeaf unit; //type: PolicyParamUnitEnum



                                                }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::QueueStatsArray::QueueMaxLength


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::QueueStatsArray


                                            class PoliceStatsArray : public Entity
                                            {
                                                public:
                                                    PoliceStatsArray();
                                                    ~PoliceStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf drop_packets; //type: uint64
                                                    YLeaf drop_bytes; //type: uint64
                                                    YLeaf conform_packets; //type: uint64
                                                    YLeaf conform_bytes; //type: uint64
                                                    YLeaf exceed_packets; //type: uint64
                                                    YLeaf exceed_bytes; //type: uint64
                                                    YLeaf violate_packets; //type: uint64
                                                    YLeaf violate_bytes; //type: uint64
                                                    YLeaf parent_drop_packets; //type: uint64
                                                    YLeaf parent_drop_bytes; //type: uint64
                                                    YLeaf conform_rate; //type: uint32
                                                    YLeaf exceed_rate; //type: uint32
                                                    YLeaf violate_rate; //type: uint32

                                                class ColorClassStats : public Entity
                                                {
                                                    public:
                                                        ColorClassStats();
                                                        ~ColorClassStats();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf conform_class_conform_packets; //type: uint64
                                                        YLeaf conform_class_conform_bytes; //type: uint64
                                                        YLeaf conform_class_conform_rate; //type: uint32
                                                        YLeaf conform_class_exceed_packets; //type: uint64
                                                        YLeaf conform_class_exceed_bytes; //type: uint64
                                                        YLeaf conform_class_exceed_rate; //type: uint32
                                                        YLeaf conform_class_violate_packets; //type: uint64
                                                        YLeaf conform_class_violate_bytes; //type: uint64
                                                        YLeaf conform_class_violate_rate; //type: uint32
                                                        YLeaf exceed_class_exceed_packets; //type: uint64
                                                        YLeaf exceed_class_exceed_bytes; //type: uint64
                                                        YLeaf exceed_class_exceed_rate; //type: uint32
                                                        YLeaf exceed_class_violate_packets; //type: uint64
                                                        YLeaf exceed_class_violate_bytes; //type: uint64
                                                        YLeaf exceed_class_violate_rate; //type: uint32
                                                        YLeaf violate_class_violate_packets; //type: uint64
                                                        YLeaf violate_class_violate_bytes; //type: uint64
                                                        YLeaf violate_class_violate_rate; //type: uint32



                                                }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::PoliceStatsArray::ColorClassStats


                                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::PoliceStatsArray


                                            class WredStatsArray : public Entity
                                            {
                                                public:
                                                    WredStatsArray();
                                                    ~WredStatsArray();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf profile_title; //type: string
                                                    YLeaf red_transmit_packets; //type: uint64
                                                    YLeaf red_transmit_bytes; //type: uint64
                                                    YLeaf random_drop_packets; //type: uint64
                                                    YLeaf random_drop_bytes; //type: uint64
                                                    YLeaf max_threshold_packets; //type: uint64
                                                    YLeaf max_threshold_bytes; //type: uint64
                                                    YLeaf red_ecn_marked_packets; //type: uint64
                                                    YLeaf red_ecn_marked_bytes; //type: uint64

                                                class RedLabel : public Entity
                                                {
                                                    public:
                                                        RedLabel();
                                                        ~RedLabel();

                                                        bool has_data() const override;
                                                        bool has_operation() const override;
                                                        EntityPath get_entity_path(Entity* parent) const override;
                                                        std::string get_segment_path() const override;
                                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                        void set_value(const std::string & value_path, std::string value) override;
                                                        std::map<std::string, Entity*> & get_children() override;


                                                        YLeaf wred_type; //type: WredEnum
                                                        YLeaf value_; //type: uint8



                                                }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::WredStatsArray::RedLabel


                                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::WredStatsArray::RedLabel> > red_label;


                                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::WredStatsArray


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::CacStats> cac_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::ChildPolicy> child_policy;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::GeneralStats> general_stats;
                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::IphcStats> iphc_stats;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::PoliceStatsArray> > police_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::QueueStatsArray> > queue_stats_array;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat::WredStatsArray> > wred_stats_array;


                                        }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat


                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats::ClassStat> > class_stat;


                                    }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput::VoQStats> vo_q_stats;


                                }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface::VoQoutput> vo_qoutput;


                            }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces::VoQMemberInterface> > vo_q_member_interface;


                        }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::OutputVoQ> output_vo_q;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface::VoQMemberInterfaces> vo_q_member_interfaces;


                    }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface


                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces::VoQinterface> > vo_qinterface;


                }; // Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces


                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics::VoQinterfaces> vo_qinterfaces;


            }; // Qos::QosGlobal::VoQ::VoQStatistics


                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ::VoQStatistics> vo_q_statistics;


        }; // Qos::QosGlobal::VoQ


            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal::VoQ> vo_q;


    }; // Qos::QosGlobal


    class InterfaceTable : public Entity
    {
        public:
            InterfaceTable();
            ~InterfaceTable();

            bool has_data() const override;
            bool has_operation() const override;
            EntityPath get_entity_path(Entity* parent) const override;
            std::string get_segment_path() const override;
            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
            void set_value(const std::string & value_path, std::string value) override;
            std::map<std::string, Entity*> & get_children() override;



        class Interface : public Entity
        {
            public:
                Interface();
                ~Interface();

                bool has_data() const override;
                bool has_operation() const override;
                EntityPath get_entity_path(Entity* parent) const override;
                std::string get_segment_path() const override;
                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                void set_value(const std::string & value_path, std::string value) override;
                std::map<std::string, Entity*> & get_children() override;


                YLeaf interface_name; //type: string

            class Nodes : public Entity
            {
                public:
                    Nodes();
                    ~Nodes();

                    bool has_data() const override;
                    bool has_operation() const override;
                    EntityPath get_entity_path(Entity* parent) const override;
                    std::string get_segment_path() const override;
                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                    void set_value(const std::string & value_path, std::string value) override;
                    std::map<std::string, Entity*> & get_children() override;



                class Node : public Entity
                {
                    public:
                        Node();
                        ~Node();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;


                        YLeaf node_name; //type: string

                    class Input : public Entity
                    {
                        public:
                            Input();
                            ~Input();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class Statistics : public Entity
                        {
                            public:
                                Statistics();
                                ~Statistics();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf policy_name; //type: string
                                YLeaf state; //type: PolicyStateEnum
                                YLeaf state_description; //type: string
                                YLeaf satid; //type: uint32

                            class ClassStat : public Entity
                            {
                                public:
                                    ClassStat();
                                    ~ClassStat();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf counter_validity_bitmask; //type: uint64
                                    YLeaf class_name; //type: string
                                    YLeaf shared_queue_id; //type: uint32
                                    YLeaf queue_descr; //type: string
                                    YLeaf cac_state; //type: CacStateEnum

                                class GeneralStats : public Entity
                                {
                                    public:
                                        GeneralStats();
                                        ~GeneralStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf transmit_packets; //type: uint64
                                        YLeaf transmit_bytes; //type: uint64
                                        YLeaf total_drop_packets; //type: uint64
                                        YLeaf total_drop_bytes; //type: uint64
                                        YLeaf total_drop_rate; //type: uint32
                                        YLeaf match_data_rate; //type: uint32
                                        YLeaf total_transmit_rate; //type: uint32
                                        YLeaf pre_policy_matched_packets; //type: uint64
                                        YLeaf pre_policy_matched_bytes; //type: uint64



                                }; // Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::GeneralStats


                                class IphcStats : public Entity
                                {
                                    public:
                                        IphcStats();
                                        ~IphcStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf non_tcp_total_out_packets; //type: uint64
                                        YLeaf non_tcp_total_out_bytes; //type: uint64
                                        YLeaf non_tcp_bytes_saved; //type: uint64
                                        YLeaf non_tcp_compressed_packets_out; //type: uint64
                                        YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                        YLeaf non_tcp_full_header_packets_out; //type: uint64
                                        YLeaf tcp_total_out_packets; //type: uint64
                                        YLeaf tcp_total_out_bytes; //type: uint64
                                        YLeaf tcp_bytes_saved; //type: uint64
                                        YLeaf tcp_compressed_packets_out; //type: uint64
                                        YLeaf tcp_bytes_sent_rate; //type: uint32
                                        YLeaf tcp_full_header_packets_out; //type: uint64



                                }; // Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::IphcStats


                                class ChildPolicy : public Entity
                                {
                                    public:
                                        ChildPolicy();
                                        ~ChildPolicy();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;





                                }; // Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::ChildPolicy


                                class CacStats : public Entity
                                {
                                    public:
                                        CacStats();
                                        ~CacStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf drop_rates; //type: uint32
                                        YLeaf admitpackets; //type: uint64
                                        YLeaf admit_bytes; //type: uint64
                                        YLeaf admit_rates; //type: uint32



                                }; // Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::CacStats


                                class QueueStatsArray : public Entity
                                {
                                    public:
                                        QueueStatsArray();
                                        ~QueueStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf queue_id; //type: uint32
                                        YLeaf tail_drop_packets; //type: uint64
                                        YLeaf tail_drop_bytes; //type: uint64
                                        YLeaf atm_clp0_drop_packets; //type: uint64
                                        YLeaf atm_clp0_drop_bytes; //type: uint64
                                        YLeaf atm_clp1_drop_packets; //type: uint64
                                        YLeaf atm_clp1_drop_bytes; //type: uint64
                                        YLeaf queue_drop_threshold; //type: uint32
                                        YLeaf forced_wred_stats_display; //type: boolean
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32

                                    class QueueInstanceLength : public Entity
                                    {
                                        public:
                                            QueueInstanceLength();
                                            ~QueueInstanceLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                    class QueueAverageLength : public Entity
                                    {
                                        public:
                                            QueueAverageLength();
                                            ~QueueAverageLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                    class QueueMaxLength : public Entity
                                    {
                                        public:
                                            QueueMaxLength();
                                            ~QueueMaxLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                }; // Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray


                                class PoliceStatsArray : public Entity
                                {
                                    public:
                                        PoliceStatsArray();
                                        ~PoliceStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf violate_packets; //type: uint64
                                        YLeaf violate_bytes; //type: uint64
                                        YLeaf parent_drop_packets; //type: uint64
                                        YLeaf parent_drop_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32
                                        YLeaf violate_rate; //type: uint32

                                    class ColorClassStats : public Entity
                                    {
                                        public:
                                            ColorClassStats();
                                            ~ColorClassStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf conform_class_conform_packets; //type: uint64
                                            YLeaf conform_class_conform_bytes; //type: uint64
                                            YLeaf conform_class_conform_rate; //type: uint32
                                            YLeaf conform_class_exceed_packets; //type: uint64
                                            YLeaf conform_class_exceed_bytes; //type: uint64
                                            YLeaf conform_class_exceed_rate; //type: uint32
                                            YLeaf conform_class_violate_packets; //type: uint64
                                            YLeaf conform_class_violate_bytes; //type: uint64
                                            YLeaf conform_class_violate_rate; //type: uint32
                                            YLeaf exceed_class_exceed_packets; //type: uint64
                                            YLeaf exceed_class_exceed_bytes; //type: uint64
                                            YLeaf exceed_class_exceed_rate; //type: uint32
                                            YLeaf exceed_class_violate_packets; //type: uint64
                                            YLeaf exceed_class_violate_bytes; //type: uint64
                                            YLeaf exceed_class_violate_rate; //type: uint32
                                            YLeaf violate_class_violate_packets; //type: uint64
                                            YLeaf violate_class_violate_bytes; //type: uint64
                                            YLeaf violate_class_violate_rate; //type: uint32



                                    }; // Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                }; // Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::PoliceStatsArray


                                class WredStatsArray : public Entity
                                {
                                    public:
                                        WredStatsArray();
                                        ~WredStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf profile_title; //type: string
                                        YLeaf red_transmit_packets; //type: uint64
                                        YLeaf red_transmit_bytes; //type: uint64
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf red_ecn_marked_packets; //type: uint64
                                        YLeaf red_ecn_marked_bytes; //type: uint64

                                    class RedLabel : public Entity
                                    {
                                        public:
                                            RedLabel();
                                            ~RedLabel();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf wred_type; //type: WredEnum
                                            YLeaf value_; //type: uint8



                                    }; // Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                }; // Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::WredStatsArray


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::CacStats> cac_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                            }; // Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics::ClassStat> > class_stat;


                        }; // Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input::Statistics> statistics;


                    }; // Qos::InterfaceTable::Interface::Nodes::Node::Input


                    class Output : public Entity
                    {
                        public:
                            Output();
                            ~Output();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class Statistics : public Entity
                        {
                            public:
                                Statistics();
                                ~Statistics();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf policy_name; //type: string
                                YLeaf state; //type: PolicyStateEnum
                                YLeaf state_description; //type: string
                                YLeaf satid; //type: uint32

                            class ClassStat : public Entity
                            {
                                public:
                                    ClassStat();
                                    ~ClassStat();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf counter_validity_bitmask; //type: uint64
                                    YLeaf class_name; //type: string
                                    YLeaf shared_queue_id; //type: uint32
                                    YLeaf queue_descr; //type: string
                                    YLeaf cac_state; //type: CacStateEnum

                                class GeneralStats : public Entity
                                {
                                    public:
                                        GeneralStats();
                                        ~GeneralStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf transmit_packets; //type: uint64
                                        YLeaf transmit_bytes; //type: uint64
                                        YLeaf total_drop_packets; //type: uint64
                                        YLeaf total_drop_bytes; //type: uint64
                                        YLeaf total_drop_rate; //type: uint32
                                        YLeaf match_data_rate; //type: uint32
                                        YLeaf total_transmit_rate; //type: uint32
                                        YLeaf pre_policy_matched_packets; //type: uint64
                                        YLeaf pre_policy_matched_bytes; //type: uint64



                                }; // Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::GeneralStats


                                class IphcStats : public Entity
                                {
                                    public:
                                        IphcStats();
                                        ~IphcStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf non_tcp_total_out_packets; //type: uint64
                                        YLeaf non_tcp_total_out_bytes; //type: uint64
                                        YLeaf non_tcp_bytes_saved; //type: uint64
                                        YLeaf non_tcp_compressed_packets_out; //type: uint64
                                        YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                        YLeaf non_tcp_full_header_packets_out; //type: uint64
                                        YLeaf tcp_total_out_packets; //type: uint64
                                        YLeaf tcp_total_out_bytes; //type: uint64
                                        YLeaf tcp_bytes_saved; //type: uint64
                                        YLeaf tcp_compressed_packets_out; //type: uint64
                                        YLeaf tcp_bytes_sent_rate; //type: uint32
                                        YLeaf tcp_full_header_packets_out; //type: uint64



                                }; // Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::IphcStats


                                class ChildPolicy : public Entity
                                {
                                    public:
                                        ChildPolicy();
                                        ~ChildPolicy();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;





                                }; // Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::ChildPolicy


                                class CacStats : public Entity
                                {
                                    public:
                                        CacStats();
                                        ~CacStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf drop_rates; //type: uint32
                                        YLeaf admitpackets; //type: uint64
                                        YLeaf admit_bytes; //type: uint64
                                        YLeaf admit_rates; //type: uint32



                                }; // Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::CacStats


                                class QueueStatsArray : public Entity
                                {
                                    public:
                                        QueueStatsArray();
                                        ~QueueStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf queue_id; //type: uint32
                                        YLeaf tail_drop_packets; //type: uint64
                                        YLeaf tail_drop_bytes; //type: uint64
                                        YLeaf atm_clp0_drop_packets; //type: uint64
                                        YLeaf atm_clp0_drop_bytes; //type: uint64
                                        YLeaf atm_clp1_drop_packets; //type: uint64
                                        YLeaf atm_clp1_drop_bytes; //type: uint64
                                        YLeaf queue_drop_threshold; //type: uint32
                                        YLeaf forced_wred_stats_display; //type: boolean
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32

                                    class QueueInstanceLength : public Entity
                                    {
                                        public:
                                            QueueInstanceLength();
                                            ~QueueInstanceLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                    class QueueAverageLength : public Entity
                                    {
                                        public:
                                            QueueAverageLength();
                                            ~QueueAverageLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                    class QueueMaxLength : public Entity
                                    {
                                        public:
                                            QueueMaxLength();
                                            ~QueueMaxLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                }; // Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray


                                class PoliceStatsArray : public Entity
                                {
                                    public:
                                        PoliceStatsArray();
                                        ~PoliceStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf violate_packets; //type: uint64
                                        YLeaf violate_bytes; //type: uint64
                                        YLeaf parent_drop_packets; //type: uint64
                                        YLeaf parent_drop_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32
                                        YLeaf violate_rate; //type: uint32

                                    class ColorClassStats : public Entity
                                    {
                                        public:
                                            ColorClassStats();
                                            ~ColorClassStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf conform_class_conform_packets; //type: uint64
                                            YLeaf conform_class_conform_bytes; //type: uint64
                                            YLeaf conform_class_conform_rate; //type: uint32
                                            YLeaf conform_class_exceed_packets; //type: uint64
                                            YLeaf conform_class_exceed_bytes; //type: uint64
                                            YLeaf conform_class_exceed_rate; //type: uint32
                                            YLeaf conform_class_violate_packets; //type: uint64
                                            YLeaf conform_class_violate_bytes; //type: uint64
                                            YLeaf conform_class_violate_rate; //type: uint32
                                            YLeaf exceed_class_exceed_packets; //type: uint64
                                            YLeaf exceed_class_exceed_bytes; //type: uint64
                                            YLeaf exceed_class_exceed_rate; //type: uint32
                                            YLeaf exceed_class_violate_packets; //type: uint64
                                            YLeaf exceed_class_violate_bytes; //type: uint64
                                            YLeaf exceed_class_violate_rate; //type: uint32
                                            YLeaf violate_class_violate_packets; //type: uint64
                                            YLeaf violate_class_violate_bytes; //type: uint64
                                            YLeaf violate_class_violate_rate; //type: uint32



                                    }; // Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                }; // Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::PoliceStatsArray


                                class WredStatsArray : public Entity
                                {
                                    public:
                                        WredStatsArray();
                                        ~WredStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf profile_title; //type: string
                                        YLeaf red_transmit_packets; //type: uint64
                                        YLeaf red_transmit_bytes; //type: uint64
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf red_ecn_marked_packets; //type: uint64
                                        YLeaf red_ecn_marked_bytes; //type: uint64

                                    class RedLabel : public Entity
                                    {
                                        public:
                                            RedLabel();
                                            ~RedLabel();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf wred_type; //type: WredEnum
                                            YLeaf value_; //type: uint8



                                    }; // Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                }; // Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::WredStatsArray


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::CacStats> cac_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                            }; // Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics::ClassStat> > class_stat;


                        }; // Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output::Statistics> statistics;


                    }; // Qos::InterfaceTable::Interface::Nodes::Node::Output


                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Input> input;
                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node::Output> output;


                }; // Qos::InterfaceTable::Interface::Nodes::Node


                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes::Node> > node;


            }; // Qos::InterfaceTable::Interface::Nodes


            class MemberInterfaces : public Entity
            {
                public:
                    MemberInterfaces();
                    ~MemberInterfaces();

                    bool has_data() const override;
                    bool has_operation() const override;
                    EntityPath get_entity_path(Entity* parent) const override;
                    std::string get_segment_path() const override;
                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                    void set_value(const std::string & value_path, std::string value) override;
                    std::map<std::string, Entity*> & get_children() override;



                class MemberInterface : public Entity
                {
                    public:
                        MemberInterface();
                        ~MemberInterface();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;


                        YLeaf interface_name; //type: string

                    class SatelliteIds : public Entity
                    {
                        public:
                            SatelliteIds();
                            ~SatelliteIds();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class SatelliteId : public Entity
                        {
                            public:
                                SatelliteId();
                                ~SatelliteId();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf nv_satellite_id; //type: int32

                            class Input : public Entity
                            {
                                public:
                                    Input();
                                    ~Input();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;



                                class Statistics : public Entity
                                {
                                    public:
                                        Statistics();
                                        ~Statistics();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf policy_name; //type: string
                                        YLeaf state; //type: PolicyStateEnum
                                        YLeaf state_description; //type: string
                                        YLeaf satid; //type: uint32

                                    class ClassStat : public Entity
                                    {
                                        public:
                                            ClassStat();
                                            ~ClassStat();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf counter_validity_bitmask; //type: uint64
                                            YLeaf class_name; //type: string
                                            YLeaf shared_queue_id; //type: uint32
                                            YLeaf queue_descr; //type: string
                                            YLeaf cac_state; //type: CacStateEnum

                                        class GeneralStats : public Entity
                                        {
                                            public:
                                                GeneralStats();
                                                ~GeneralStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf transmit_packets; //type: uint64
                                                YLeaf transmit_bytes; //type: uint64
                                                YLeaf total_drop_packets; //type: uint64
                                                YLeaf total_drop_bytes; //type: uint64
                                                YLeaf total_drop_rate; //type: uint32
                                                YLeaf match_data_rate; //type: uint32
                                                YLeaf total_transmit_rate; //type: uint32
                                                YLeaf pre_policy_matched_packets; //type: uint64
                                                YLeaf pre_policy_matched_bytes; //type: uint64



                                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats


                                        class IphcStats : public Entity
                                        {
                                            public:
                                                IphcStats();
                                                ~IphcStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf non_tcp_total_out_packets; //type: uint64
                                                YLeaf non_tcp_total_out_bytes; //type: uint64
                                                YLeaf non_tcp_bytes_saved; //type: uint64
                                                YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                YLeaf tcp_total_out_packets; //type: uint64
                                                YLeaf tcp_total_out_bytes; //type: uint64
                                                YLeaf tcp_bytes_saved; //type: uint64
                                                YLeaf tcp_compressed_packets_out; //type: uint64
                                                YLeaf tcp_bytes_sent_rate; //type: uint32
                                                YLeaf tcp_full_header_packets_out; //type: uint64



                                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats


                                        class ChildPolicy : public Entity
                                        {
                                            public:
                                                ChildPolicy();
                                                ~ChildPolicy();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;





                                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy


                                        class CacStats : public Entity
                                        {
                                            public:
                                                CacStats();
                                                ~CacStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf drop_packets; //type: uint64
                                                YLeaf drop_bytes; //type: uint64
                                                YLeaf drop_rates; //type: uint32
                                                YLeaf admitpackets; //type: uint64
                                                YLeaf admit_bytes; //type: uint64
                                                YLeaf admit_rates; //type: uint32



                                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats


                                        class QueueStatsArray : public Entity
                                        {
                                            public:
                                                QueueStatsArray();
                                                ~QueueStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf queue_id; //type: uint32
                                                YLeaf tail_drop_packets; //type: uint64
                                                YLeaf tail_drop_bytes; //type: uint64
                                                YLeaf atm_clp0_drop_packets; //type: uint64
                                                YLeaf atm_clp0_drop_bytes; //type: uint64
                                                YLeaf atm_clp1_drop_packets; //type: uint64
                                                YLeaf atm_clp1_drop_bytes; //type: uint64
                                                YLeaf queue_drop_threshold; //type: uint32
                                                YLeaf forced_wred_stats_display; //type: boolean
                                                YLeaf random_drop_packets; //type: uint64
                                                YLeaf random_drop_bytes; //type: uint64
                                                YLeaf max_threshold_packets; //type: uint64
                                                YLeaf max_threshold_bytes; //type: uint64
                                                YLeaf conform_packets; //type: uint64
                                                YLeaf conform_bytes; //type: uint64
                                                YLeaf exceed_packets; //type: uint64
                                                YLeaf exceed_bytes; //type: uint64
                                                YLeaf conform_rate; //type: uint32
                                                YLeaf exceed_rate; //type: uint32

                                            class QueueInstanceLength : public Entity
                                            {
                                                public:
                                                    QueueInstanceLength();
                                                    ~QueueInstanceLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                            class QueueAverageLength : public Entity
                                            {
                                                public:
                                                    QueueAverageLength();
                                                    ~QueueAverageLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                            class QueueMaxLength : public Entity
                                            {
                                                public:
                                                    QueueMaxLength();
                                                    ~QueueMaxLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray


                                        class PoliceStatsArray : public Entity
                                        {
                                            public:
                                                PoliceStatsArray();
                                                ~PoliceStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf drop_packets; //type: uint64
                                                YLeaf drop_bytes; //type: uint64
                                                YLeaf conform_packets; //type: uint64
                                                YLeaf conform_bytes; //type: uint64
                                                YLeaf exceed_packets; //type: uint64
                                                YLeaf exceed_bytes; //type: uint64
                                                YLeaf violate_packets; //type: uint64
                                                YLeaf violate_bytes; //type: uint64
                                                YLeaf parent_drop_packets; //type: uint64
                                                YLeaf parent_drop_bytes; //type: uint64
                                                YLeaf conform_rate; //type: uint32
                                                YLeaf exceed_rate; //type: uint32
                                                YLeaf violate_rate; //type: uint32

                                            class ColorClassStats : public Entity
                                            {
                                                public:
                                                    ColorClassStats();
                                                    ~ColorClassStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf conform_class_conform_packets; //type: uint64
                                                    YLeaf conform_class_conform_bytes; //type: uint64
                                                    YLeaf conform_class_conform_rate; //type: uint32
                                                    YLeaf conform_class_exceed_packets; //type: uint64
                                                    YLeaf conform_class_exceed_bytes; //type: uint64
                                                    YLeaf conform_class_exceed_rate; //type: uint32
                                                    YLeaf conform_class_violate_packets; //type: uint64
                                                    YLeaf conform_class_violate_bytes; //type: uint64
                                                    YLeaf conform_class_violate_rate; //type: uint32
                                                    YLeaf exceed_class_exceed_packets; //type: uint64
                                                    YLeaf exceed_class_exceed_bytes; //type: uint64
                                                    YLeaf exceed_class_exceed_rate; //type: uint32
                                                    YLeaf exceed_class_violate_packets; //type: uint64
                                                    YLeaf exceed_class_violate_bytes; //type: uint64
                                                    YLeaf exceed_class_violate_rate; //type: uint32
                                                    YLeaf violate_class_violate_packets; //type: uint64
                                                    YLeaf violate_class_violate_bytes; //type: uint64
                                                    YLeaf violate_class_violate_rate; //type: uint32



                                            }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray


                                        class WredStatsArray : public Entity
                                        {
                                            public:
                                                WredStatsArray();
                                                ~WredStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf profile_title; //type: string
                                                YLeaf red_transmit_packets; //type: uint64
                                                YLeaf red_transmit_bytes; //type: uint64
                                                YLeaf random_drop_packets; //type: uint64
                                                YLeaf random_drop_bytes; //type: uint64
                                                YLeaf max_threshold_packets; //type: uint64
                                                YLeaf max_threshold_bytes; //type: uint64
                                                YLeaf red_ecn_marked_packets; //type: uint64
                                                YLeaf red_ecn_marked_bytes; //type: uint64

                                            class RedLabel : public Entity
                                            {
                                                public:
                                                    RedLabel();
                                                    ~RedLabel();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf wred_type; //type: WredEnum
                                                    YLeaf value_; //type: uint8



                                            }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats> cac_stats;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat> > class_stat;


                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input::Statistics> statistics;


                            }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input


                            class Output : public Entity
                            {
                                public:
                                    Output();
                                    ~Output();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;



                                class Statistics : public Entity
                                {
                                    public:
                                        Statistics();
                                        ~Statistics();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf policy_name; //type: string
                                        YLeaf state; //type: PolicyStateEnum
                                        YLeaf state_description; //type: string
                                        YLeaf satid; //type: uint32

                                    class ClassStat : public Entity
                                    {
                                        public:
                                            ClassStat();
                                            ~ClassStat();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf counter_validity_bitmask; //type: uint64
                                            YLeaf class_name; //type: string
                                            YLeaf shared_queue_id; //type: uint32
                                            YLeaf queue_descr; //type: string
                                            YLeaf cac_state; //type: CacStateEnum

                                        class GeneralStats : public Entity
                                        {
                                            public:
                                                GeneralStats();
                                                ~GeneralStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf transmit_packets; //type: uint64
                                                YLeaf transmit_bytes; //type: uint64
                                                YLeaf total_drop_packets; //type: uint64
                                                YLeaf total_drop_bytes; //type: uint64
                                                YLeaf total_drop_rate; //type: uint32
                                                YLeaf match_data_rate; //type: uint32
                                                YLeaf total_transmit_rate; //type: uint32
                                                YLeaf pre_policy_matched_packets; //type: uint64
                                                YLeaf pre_policy_matched_bytes; //type: uint64



                                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats


                                        class IphcStats : public Entity
                                        {
                                            public:
                                                IphcStats();
                                                ~IphcStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf non_tcp_total_out_packets; //type: uint64
                                                YLeaf non_tcp_total_out_bytes; //type: uint64
                                                YLeaf non_tcp_bytes_saved; //type: uint64
                                                YLeaf non_tcp_compressed_packets_out; //type: uint64
                                                YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                                YLeaf non_tcp_full_header_packets_out; //type: uint64
                                                YLeaf tcp_total_out_packets; //type: uint64
                                                YLeaf tcp_total_out_bytes; //type: uint64
                                                YLeaf tcp_bytes_saved; //type: uint64
                                                YLeaf tcp_compressed_packets_out; //type: uint64
                                                YLeaf tcp_bytes_sent_rate; //type: uint32
                                                YLeaf tcp_full_header_packets_out; //type: uint64



                                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats


                                        class ChildPolicy : public Entity
                                        {
                                            public:
                                                ChildPolicy();
                                                ~ChildPolicy();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;





                                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy


                                        class CacStats : public Entity
                                        {
                                            public:
                                                CacStats();
                                                ~CacStats();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf drop_packets; //type: uint64
                                                YLeaf drop_bytes; //type: uint64
                                                YLeaf drop_rates; //type: uint32
                                                YLeaf admitpackets; //type: uint64
                                                YLeaf admit_bytes; //type: uint64
                                                YLeaf admit_rates; //type: uint32



                                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats


                                        class QueueStatsArray : public Entity
                                        {
                                            public:
                                                QueueStatsArray();
                                                ~QueueStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf queue_id; //type: uint32
                                                YLeaf tail_drop_packets; //type: uint64
                                                YLeaf tail_drop_bytes; //type: uint64
                                                YLeaf atm_clp0_drop_packets; //type: uint64
                                                YLeaf atm_clp0_drop_bytes; //type: uint64
                                                YLeaf atm_clp1_drop_packets; //type: uint64
                                                YLeaf atm_clp1_drop_bytes; //type: uint64
                                                YLeaf queue_drop_threshold; //type: uint32
                                                YLeaf forced_wred_stats_display; //type: boolean
                                                YLeaf random_drop_packets; //type: uint64
                                                YLeaf random_drop_bytes; //type: uint64
                                                YLeaf max_threshold_packets; //type: uint64
                                                YLeaf max_threshold_bytes; //type: uint64
                                                YLeaf conform_packets; //type: uint64
                                                YLeaf conform_bytes; //type: uint64
                                                YLeaf exceed_packets; //type: uint64
                                                YLeaf exceed_bytes; //type: uint64
                                                YLeaf conform_rate; //type: uint32
                                                YLeaf exceed_rate; //type: uint32

                                            class QueueInstanceLength : public Entity
                                            {
                                                public:
                                                    QueueInstanceLength();
                                                    ~QueueInstanceLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                            class QueueAverageLength : public Entity
                                            {
                                                public:
                                                    QueueAverageLength();
                                                    ~QueueAverageLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                            class QueueMaxLength : public Entity
                                            {
                                                public:
                                                    QueueMaxLength();
                                                    ~QueueMaxLength();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf value_; //type: uint32
                                                    YLeaf unit; //type: PolicyParamUnitEnum



                                            }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray


                                        class PoliceStatsArray : public Entity
                                        {
                                            public:
                                                PoliceStatsArray();
                                                ~PoliceStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf drop_packets; //type: uint64
                                                YLeaf drop_bytes; //type: uint64
                                                YLeaf conform_packets; //type: uint64
                                                YLeaf conform_bytes; //type: uint64
                                                YLeaf exceed_packets; //type: uint64
                                                YLeaf exceed_bytes; //type: uint64
                                                YLeaf violate_packets; //type: uint64
                                                YLeaf violate_bytes; //type: uint64
                                                YLeaf parent_drop_packets; //type: uint64
                                                YLeaf parent_drop_bytes; //type: uint64
                                                YLeaf conform_rate; //type: uint32
                                                YLeaf exceed_rate; //type: uint32
                                                YLeaf violate_rate; //type: uint32

                                            class ColorClassStats : public Entity
                                            {
                                                public:
                                                    ColorClassStats();
                                                    ~ColorClassStats();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf conform_class_conform_packets; //type: uint64
                                                    YLeaf conform_class_conform_bytes; //type: uint64
                                                    YLeaf conform_class_conform_rate; //type: uint32
                                                    YLeaf conform_class_exceed_packets; //type: uint64
                                                    YLeaf conform_class_exceed_bytes; //type: uint64
                                                    YLeaf conform_class_exceed_rate; //type: uint32
                                                    YLeaf conform_class_violate_packets; //type: uint64
                                                    YLeaf conform_class_violate_bytes; //type: uint64
                                                    YLeaf conform_class_violate_rate; //type: uint32
                                                    YLeaf exceed_class_exceed_packets; //type: uint64
                                                    YLeaf exceed_class_exceed_bytes; //type: uint64
                                                    YLeaf exceed_class_exceed_rate; //type: uint32
                                                    YLeaf exceed_class_violate_packets; //type: uint64
                                                    YLeaf exceed_class_violate_bytes; //type: uint64
                                                    YLeaf exceed_class_violate_rate; //type: uint32
                                                    YLeaf violate_class_violate_packets; //type: uint64
                                                    YLeaf violate_class_violate_bytes; //type: uint64
                                                    YLeaf violate_class_violate_rate; //type: uint32



                                            }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray


                                        class WredStatsArray : public Entity
                                        {
                                            public:
                                                WredStatsArray();
                                                ~WredStatsArray();

                                                bool has_data() const override;
                                                bool has_operation() const override;
                                                EntityPath get_entity_path(Entity* parent) const override;
                                                std::string get_segment_path() const override;
                                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                void set_value(const std::string & value_path, std::string value) override;
                                                std::map<std::string, Entity*> & get_children() override;


                                                YLeaf profile_title; //type: string
                                                YLeaf red_transmit_packets; //type: uint64
                                                YLeaf red_transmit_bytes; //type: uint64
                                                YLeaf random_drop_packets; //type: uint64
                                                YLeaf random_drop_bytes; //type: uint64
                                                YLeaf max_threshold_packets; //type: uint64
                                                YLeaf max_threshold_bytes; //type: uint64
                                                YLeaf red_ecn_marked_packets; //type: uint64
                                                YLeaf red_ecn_marked_bytes; //type: uint64

                                            class RedLabel : public Entity
                                            {
                                                public:
                                                    RedLabel();
                                                    ~RedLabel();

                                                    bool has_data() const override;
                                                    bool has_operation() const override;
                                                    EntityPath get_entity_path(Entity* parent) const override;
                                                    std::string get_segment_path() const override;
                                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                                    void set_value(const std::string & value_path, std::string value) override;
                                                    std::map<std::string, Entity*> & get_children() override;


                                                    YLeaf wred_type; //type: WredEnum
                                                    YLeaf value_; //type: uint8



                                            }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray


                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats> cac_stats;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat> > class_stat;


                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output::Statistics> statistics;


                            }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output


                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Input> input;
                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId::Output> output;


                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId


                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds::SatelliteId> > satellite_id;


                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds


                    class Input : public Entity
                    {
                        public:
                            Input();
                            ~Input();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class Statistics : public Entity
                        {
                            public:
                                Statistics();
                                ~Statistics();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf policy_name; //type: string
                                YLeaf state; //type: PolicyStateEnum
                                YLeaf state_description; //type: string
                                YLeaf satid; //type: uint32

                            class ClassStat : public Entity
                            {
                                public:
                                    ClassStat();
                                    ~ClassStat();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf counter_validity_bitmask; //type: uint64
                                    YLeaf class_name; //type: string
                                    YLeaf shared_queue_id; //type: uint32
                                    YLeaf queue_descr; //type: string
                                    YLeaf cac_state; //type: CacStateEnum

                                class GeneralStats : public Entity
                                {
                                    public:
                                        GeneralStats();
                                        ~GeneralStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf transmit_packets; //type: uint64
                                        YLeaf transmit_bytes; //type: uint64
                                        YLeaf total_drop_packets; //type: uint64
                                        YLeaf total_drop_bytes; //type: uint64
                                        YLeaf total_drop_rate; //type: uint32
                                        YLeaf match_data_rate; //type: uint32
                                        YLeaf total_transmit_rate; //type: uint32
                                        YLeaf pre_policy_matched_packets; //type: uint64
                                        YLeaf pre_policy_matched_bytes; //type: uint64



                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::GeneralStats


                                class IphcStats : public Entity
                                {
                                    public:
                                        IphcStats();
                                        ~IphcStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf non_tcp_total_out_packets; //type: uint64
                                        YLeaf non_tcp_total_out_bytes; //type: uint64
                                        YLeaf non_tcp_bytes_saved; //type: uint64
                                        YLeaf non_tcp_compressed_packets_out; //type: uint64
                                        YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                        YLeaf non_tcp_full_header_packets_out; //type: uint64
                                        YLeaf tcp_total_out_packets; //type: uint64
                                        YLeaf tcp_total_out_bytes; //type: uint64
                                        YLeaf tcp_bytes_saved; //type: uint64
                                        YLeaf tcp_compressed_packets_out; //type: uint64
                                        YLeaf tcp_bytes_sent_rate; //type: uint32
                                        YLeaf tcp_full_header_packets_out; //type: uint64



                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::IphcStats


                                class ChildPolicy : public Entity
                                {
                                    public:
                                        ChildPolicy();
                                        ~ChildPolicy();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;





                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::ChildPolicy


                                class CacStats : public Entity
                                {
                                    public:
                                        CacStats();
                                        ~CacStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf drop_rates; //type: uint32
                                        YLeaf admitpackets; //type: uint64
                                        YLeaf admit_bytes; //type: uint64
                                        YLeaf admit_rates; //type: uint32



                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::CacStats


                                class QueueStatsArray : public Entity
                                {
                                    public:
                                        QueueStatsArray();
                                        ~QueueStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf queue_id; //type: uint32
                                        YLeaf tail_drop_packets; //type: uint64
                                        YLeaf tail_drop_bytes; //type: uint64
                                        YLeaf atm_clp0_drop_packets; //type: uint64
                                        YLeaf atm_clp0_drop_bytes; //type: uint64
                                        YLeaf atm_clp1_drop_packets; //type: uint64
                                        YLeaf atm_clp1_drop_bytes; //type: uint64
                                        YLeaf queue_drop_threshold; //type: uint32
                                        YLeaf forced_wred_stats_display; //type: boolean
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32

                                    class QueueInstanceLength : public Entity
                                    {
                                        public:
                                            QueueInstanceLength();
                                            ~QueueInstanceLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                    class QueueAverageLength : public Entity
                                    {
                                        public:
                                            QueueAverageLength();
                                            ~QueueAverageLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                    class QueueMaxLength : public Entity
                                    {
                                        public:
                                            QueueMaxLength();
                                            ~QueueMaxLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray


                                class PoliceStatsArray : public Entity
                                {
                                    public:
                                        PoliceStatsArray();
                                        ~PoliceStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf violate_packets; //type: uint64
                                        YLeaf violate_bytes; //type: uint64
                                        YLeaf parent_drop_packets; //type: uint64
                                        YLeaf parent_drop_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32
                                        YLeaf violate_rate; //type: uint32

                                    class ColorClassStats : public Entity
                                    {
                                        public:
                                            ColorClassStats();
                                            ~ColorClassStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf conform_class_conform_packets; //type: uint64
                                            YLeaf conform_class_conform_bytes; //type: uint64
                                            YLeaf conform_class_conform_rate; //type: uint32
                                            YLeaf conform_class_exceed_packets; //type: uint64
                                            YLeaf conform_class_exceed_bytes; //type: uint64
                                            YLeaf conform_class_exceed_rate; //type: uint32
                                            YLeaf conform_class_violate_packets; //type: uint64
                                            YLeaf conform_class_violate_bytes; //type: uint64
                                            YLeaf conform_class_violate_rate; //type: uint32
                                            YLeaf exceed_class_exceed_packets; //type: uint64
                                            YLeaf exceed_class_exceed_bytes; //type: uint64
                                            YLeaf exceed_class_exceed_rate; //type: uint32
                                            YLeaf exceed_class_violate_packets; //type: uint64
                                            YLeaf exceed_class_violate_bytes; //type: uint64
                                            YLeaf exceed_class_violate_rate; //type: uint32
                                            YLeaf violate_class_violate_packets; //type: uint64
                                            YLeaf violate_class_violate_bytes; //type: uint64
                                            YLeaf violate_class_violate_rate; //type: uint32



                                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray


                                class WredStatsArray : public Entity
                                {
                                    public:
                                        WredStatsArray();
                                        ~WredStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf profile_title; //type: string
                                        YLeaf red_transmit_packets; //type: uint64
                                        YLeaf red_transmit_bytes; //type: uint64
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf red_ecn_marked_packets; //type: uint64
                                        YLeaf red_ecn_marked_bytes; //type: uint64

                                    class RedLabel : public Entity
                                    {
                                        public:
                                            RedLabel();
                                            ~RedLabel();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf wred_type; //type: WredEnum
                                            YLeaf value_; //type: uint8



                                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::CacStats> cac_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                            }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics::ClassStat> > class_stat;


                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input::Statistics> statistics;


                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input


                    class Output : public Entity
                    {
                        public:
                            Output();
                            ~Output();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class Statistics : public Entity
                        {
                            public:
                                Statistics();
                                ~Statistics();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf policy_name; //type: string
                                YLeaf state; //type: PolicyStateEnum
                                YLeaf state_description; //type: string
                                YLeaf satid; //type: uint32

                            class ClassStat : public Entity
                            {
                                public:
                                    ClassStat();
                                    ~ClassStat();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf counter_validity_bitmask; //type: uint64
                                    YLeaf class_name; //type: string
                                    YLeaf shared_queue_id; //type: uint32
                                    YLeaf queue_descr; //type: string
                                    YLeaf cac_state; //type: CacStateEnum

                                class GeneralStats : public Entity
                                {
                                    public:
                                        GeneralStats();
                                        ~GeneralStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf transmit_packets; //type: uint64
                                        YLeaf transmit_bytes; //type: uint64
                                        YLeaf total_drop_packets; //type: uint64
                                        YLeaf total_drop_bytes; //type: uint64
                                        YLeaf total_drop_rate; //type: uint32
                                        YLeaf match_data_rate; //type: uint32
                                        YLeaf total_transmit_rate; //type: uint32
                                        YLeaf pre_policy_matched_packets; //type: uint64
                                        YLeaf pre_policy_matched_bytes; //type: uint64



                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::GeneralStats


                                class IphcStats : public Entity
                                {
                                    public:
                                        IphcStats();
                                        ~IphcStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf non_tcp_total_out_packets; //type: uint64
                                        YLeaf non_tcp_total_out_bytes; //type: uint64
                                        YLeaf non_tcp_bytes_saved; //type: uint64
                                        YLeaf non_tcp_compressed_packets_out; //type: uint64
                                        YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                        YLeaf non_tcp_full_header_packets_out; //type: uint64
                                        YLeaf tcp_total_out_packets; //type: uint64
                                        YLeaf tcp_total_out_bytes; //type: uint64
                                        YLeaf tcp_bytes_saved; //type: uint64
                                        YLeaf tcp_compressed_packets_out; //type: uint64
                                        YLeaf tcp_bytes_sent_rate; //type: uint32
                                        YLeaf tcp_full_header_packets_out; //type: uint64



                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::IphcStats


                                class ChildPolicy : public Entity
                                {
                                    public:
                                        ChildPolicy();
                                        ~ChildPolicy();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;





                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::ChildPolicy


                                class CacStats : public Entity
                                {
                                    public:
                                        CacStats();
                                        ~CacStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf drop_rates; //type: uint32
                                        YLeaf admitpackets; //type: uint64
                                        YLeaf admit_bytes; //type: uint64
                                        YLeaf admit_rates; //type: uint32



                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::CacStats


                                class QueueStatsArray : public Entity
                                {
                                    public:
                                        QueueStatsArray();
                                        ~QueueStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf queue_id; //type: uint32
                                        YLeaf tail_drop_packets; //type: uint64
                                        YLeaf tail_drop_bytes; //type: uint64
                                        YLeaf atm_clp0_drop_packets; //type: uint64
                                        YLeaf atm_clp0_drop_bytes; //type: uint64
                                        YLeaf atm_clp1_drop_packets; //type: uint64
                                        YLeaf atm_clp1_drop_bytes; //type: uint64
                                        YLeaf queue_drop_threshold; //type: uint32
                                        YLeaf forced_wred_stats_display; //type: boolean
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32

                                    class QueueInstanceLength : public Entity
                                    {
                                        public:
                                            QueueInstanceLength();
                                            ~QueueInstanceLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                    class QueueAverageLength : public Entity
                                    {
                                        public:
                                            QueueAverageLength();
                                            ~QueueAverageLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                    class QueueMaxLength : public Entity
                                    {
                                        public:
                                            QueueMaxLength();
                                            ~QueueMaxLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray


                                class PoliceStatsArray : public Entity
                                {
                                    public:
                                        PoliceStatsArray();
                                        ~PoliceStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf violate_packets; //type: uint64
                                        YLeaf violate_bytes; //type: uint64
                                        YLeaf parent_drop_packets; //type: uint64
                                        YLeaf parent_drop_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32
                                        YLeaf violate_rate; //type: uint32

                                    class ColorClassStats : public Entity
                                    {
                                        public:
                                            ColorClassStats();
                                            ~ColorClassStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf conform_class_conform_packets; //type: uint64
                                            YLeaf conform_class_conform_bytes; //type: uint64
                                            YLeaf conform_class_conform_rate; //type: uint32
                                            YLeaf conform_class_exceed_packets; //type: uint64
                                            YLeaf conform_class_exceed_bytes; //type: uint64
                                            YLeaf conform_class_exceed_rate; //type: uint32
                                            YLeaf conform_class_violate_packets; //type: uint64
                                            YLeaf conform_class_violate_bytes; //type: uint64
                                            YLeaf conform_class_violate_rate; //type: uint32
                                            YLeaf exceed_class_exceed_packets; //type: uint64
                                            YLeaf exceed_class_exceed_bytes; //type: uint64
                                            YLeaf exceed_class_exceed_rate; //type: uint32
                                            YLeaf exceed_class_violate_packets; //type: uint64
                                            YLeaf exceed_class_violate_bytes; //type: uint64
                                            YLeaf exceed_class_violate_rate; //type: uint32
                                            YLeaf violate_class_violate_packets; //type: uint64
                                            YLeaf violate_class_violate_bytes; //type: uint64
                                            YLeaf violate_class_violate_rate; //type: uint32



                                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray


                                class WredStatsArray : public Entity
                                {
                                    public:
                                        WredStatsArray();
                                        ~WredStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf profile_title; //type: string
                                        YLeaf red_transmit_packets; //type: uint64
                                        YLeaf red_transmit_bytes; //type: uint64
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf red_ecn_marked_packets; //type: uint64
                                        YLeaf red_ecn_marked_bytes; //type: uint64

                                    class RedLabel : public Entity
                                    {
                                        public:
                                            RedLabel();
                                            ~RedLabel();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf wred_type; //type: WredEnum
                                            YLeaf value_; //type: uint8



                                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::CacStats> cac_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                            }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics::ClassStat> > class_stat;


                        }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output::Statistics> statistics;


                    }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output


                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Input> input;
                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::Output> output;
                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface::SatelliteIds> satellite_ids;


                }; // Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface


                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces::MemberInterface> > member_interface;


            }; // Qos::InterfaceTable::Interface::MemberInterfaces


            class SatelliteIds : public Entity
            {
                public:
                    SatelliteIds();
                    ~SatelliteIds();

                    bool has_data() const override;
                    bool has_operation() const override;
                    EntityPath get_entity_path(Entity* parent) const override;
                    std::string get_segment_path() const override;
                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                    void set_value(const std::string & value_path, std::string value) override;
                    std::map<std::string, Entity*> & get_children() override;



                class SatelliteId : public Entity
                {
                    public:
                        SatelliteId();
                        ~SatelliteId();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;


                        YLeaf nv_satellite_id; //type: int32

                    class Input : public Entity
                    {
                        public:
                            Input();
                            ~Input();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class Statistics : public Entity
                        {
                            public:
                                Statistics();
                                ~Statistics();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf policy_name; //type: string
                                YLeaf state; //type: PolicyStateEnum
                                YLeaf state_description; //type: string
                                YLeaf satid; //type: uint32

                            class ClassStat : public Entity
                            {
                                public:
                                    ClassStat();
                                    ~ClassStat();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf counter_validity_bitmask; //type: uint64
                                    YLeaf class_name; //type: string
                                    YLeaf shared_queue_id; //type: uint32
                                    YLeaf queue_descr; //type: string
                                    YLeaf cac_state; //type: CacStateEnum

                                class GeneralStats : public Entity
                                {
                                    public:
                                        GeneralStats();
                                        ~GeneralStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf transmit_packets; //type: uint64
                                        YLeaf transmit_bytes; //type: uint64
                                        YLeaf total_drop_packets; //type: uint64
                                        YLeaf total_drop_bytes; //type: uint64
                                        YLeaf total_drop_rate; //type: uint32
                                        YLeaf match_data_rate; //type: uint32
                                        YLeaf total_transmit_rate; //type: uint32
                                        YLeaf pre_policy_matched_packets; //type: uint64
                                        YLeaf pre_policy_matched_bytes; //type: uint64



                                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats


                                class IphcStats : public Entity
                                {
                                    public:
                                        IphcStats();
                                        ~IphcStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf non_tcp_total_out_packets; //type: uint64
                                        YLeaf non_tcp_total_out_bytes; //type: uint64
                                        YLeaf non_tcp_bytes_saved; //type: uint64
                                        YLeaf non_tcp_compressed_packets_out; //type: uint64
                                        YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                        YLeaf non_tcp_full_header_packets_out; //type: uint64
                                        YLeaf tcp_total_out_packets; //type: uint64
                                        YLeaf tcp_total_out_bytes; //type: uint64
                                        YLeaf tcp_bytes_saved; //type: uint64
                                        YLeaf tcp_compressed_packets_out; //type: uint64
                                        YLeaf tcp_bytes_sent_rate; //type: uint32
                                        YLeaf tcp_full_header_packets_out; //type: uint64



                                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats


                                class ChildPolicy : public Entity
                                {
                                    public:
                                        ChildPolicy();
                                        ~ChildPolicy();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;





                                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy


                                class CacStats : public Entity
                                {
                                    public:
                                        CacStats();
                                        ~CacStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf drop_rates; //type: uint32
                                        YLeaf admitpackets; //type: uint64
                                        YLeaf admit_bytes; //type: uint64
                                        YLeaf admit_rates; //type: uint32



                                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats


                                class QueueStatsArray : public Entity
                                {
                                    public:
                                        QueueStatsArray();
                                        ~QueueStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf queue_id; //type: uint32
                                        YLeaf tail_drop_packets; //type: uint64
                                        YLeaf tail_drop_bytes; //type: uint64
                                        YLeaf atm_clp0_drop_packets; //type: uint64
                                        YLeaf atm_clp0_drop_bytes; //type: uint64
                                        YLeaf atm_clp1_drop_packets; //type: uint64
                                        YLeaf atm_clp1_drop_bytes; //type: uint64
                                        YLeaf queue_drop_threshold; //type: uint32
                                        YLeaf forced_wred_stats_display; //type: boolean
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32

                                    class QueueInstanceLength : public Entity
                                    {
                                        public:
                                            QueueInstanceLength();
                                            ~QueueInstanceLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                    class QueueAverageLength : public Entity
                                    {
                                        public:
                                            QueueAverageLength();
                                            ~QueueAverageLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                    class QueueMaxLength : public Entity
                                    {
                                        public:
                                            QueueMaxLength();
                                            ~QueueMaxLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray


                                class PoliceStatsArray : public Entity
                                {
                                    public:
                                        PoliceStatsArray();
                                        ~PoliceStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf violate_packets; //type: uint64
                                        YLeaf violate_bytes; //type: uint64
                                        YLeaf parent_drop_packets; //type: uint64
                                        YLeaf parent_drop_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32
                                        YLeaf violate_rate; //type: uint32

                                    class ColorClassStats : public Entity
                                    {
                                        public:
                                            ColorClassStats();
                                            ~ColorClassStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf conform_class_conform_packets; //type: uint64
                                            YLeaf conform_class_conform_bytes; //type: uint64
                                            YLeaf conform_class_conform_rate; //type: uint32
                                            YLeaf conform_class_exceed_packets; //type: uint64
                                            YLeaf conform_class_exceed_bytes; //type: uint64
                                            YLeaf conform_class_exceed_rate; //type: uint32
                                            YLeaf conform_class_violate_packets; //type: uint64
                                            YLeaf conform_class_violate_bytes; //type: uint64
                                            YLeaf conform_class_violate_rate; //type: uint32
                                            YLeaf exceed_class_exceed_packets; //type: uint64
                                            YLeaf exceed_class_exceed_bytes; //type: uint64
                                            YLeaf exceed_class_exceed_rate; //type: uint32
                                            YLeaf exceed_class_violate_packets; //type: uint64
                                            YLeaf exceed_class_violate_bytes; //type: uint64
                                            YLeaf exceed_class_violate_rate; //type: uint32
                                            YLeaf violate_class_violate_packets; //type: uint64
                                            YLeaf violate_class_violate_bytes; //type: uint64
                                            YLeaf violate_class_violate_rate; //type: uint32



                                    }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray


                                class WredStatsArray : public Entity
                                {
                                    public:
                                        WredStatsArray();
                                        ~WredStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf profile_title; //type: string
                                        YLeaf red_transmit_packets; //type: uint64
                                        YLeaf red_transmit_bytes; //type: uint64
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf red_ecn_marked_packets; //type: uint64
                                        YLeaf red_ecn_marked_bytes; //type: uint64

                                    class RedLabel : public Entity
                                    {
                                        public:
                                            RedLabel();
                                            ~RedLabel();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf wred_type; //type: WredEnum
                                            YLeaf value_; //type: uint8



                                    }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::CacStats> cac_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::GeneralStats> general_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                            }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics::ClassStat> > class_stat;


                        }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input::Statistics> statistics;


                    }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input


                    class Output : public Entity
                    {
                        public:
                            Output();
                            ~Output();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;



                        class Statistics : public Entity
                        {
                            public:
                                Statistics();
                                ~Statistics();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf policy_name; //type: string
                                YLeaf state; //type: PolicyStateEnum
                                YLeaf state_description; //type: string
                                YLeaf satid; //type: uint32

                            class ClassStat : public Entity
                            {
                                public:
                                    ClassStat();
                                    ~ClassStat();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf counter_validity_bitmask; //type: uint64
                                    YLeaf class_name; //type: string
                                    YLeaf shared_queue_id; //type: uint32
                                    YLeaf queue_descr; //type: string
                                    YLeaf cac_state; //type: CacStateEnum

                                class GeneralStats : public Entity
                                {
                                    public:
                                        GeneralStats();
                                        ~GeneralStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf transmit_packets; //type: uint64
                                        YLeaf transmit_bytes; //type: uint64
                                        YLeaf total_drop_packets; //type: uint64
                                        YLeaf total_drop_bytes; //type: uint64
                                        YLeaf total_drop_rate; //type: uint32
                                        YLeaf match_data_rate; //type: uint32
                                        YLeaf total_transmit_rate; //type: uint32
                                        YLeaf pre_policy_matched_packets; //type: uint64
                                        YLeaf pre_policy_matched_bytes; //type: uint64



                                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats


                                class IphcStats : public Entity
                                {
                                    public:
                                        IphcStats();
                                        ~IphcStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf non_tcp_total_out_packets; //type: uint64
                                        YLeaf non_tcp_total_out_bytes; //type: uint64
                                        YLeaf non_tcp_bytes_saved; //type: uint64
                                        YLeaf non_tcp_compressed_packets_out; //type: uint64
                                        YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                        YLeaf non_tcp_full_header_packets_out; //type: uint64
                                        YLeaf tcp_total_out_packets; //type: uint64
                                        YLeaf tcp_total_out_bytes; //type: uint64
                                        YLeaf tcp_bytes_saved; //type: uint64
                                        YLeaf tcp_compressed_packets_out; //type: uint64
                                        YLeaf tcp_bytes_sent_rate; //type: uint32
                                        YLeaf tcp_full_header_packets_out; //type: uint64



                                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats


                                class ChildPolicy : public Entity
                                {
                                    public:
                                        ChildPolicy();
                                        ~ChildPolicy();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;





                                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy


                                class CacStats : public Entity
                                {
                                    public:
                                        CacStats();
                                        ~CacStats();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf drop_rates; //type: uint32
                                        YLeaf admitpackets; //type: uint64
                                        YLeaf admit_bytes; //type: uint64
                                        YLeaf admit_rates; //type: uint32



                                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats


                                class QueueStatsArray : public Entity
                                {
                                    public:
                                        QueueStatsArray();
                                        ~QueueStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf queue_id; //type: uint32
                                        YLeaf tail_drop_packets; //type: uint64
                                        YLeaf tail_drop_bytes; //type: uint64
                                        YLeaf atm_clp0_drop_packets; //type: uint64
                                        YLeaf atm_clp0_drop_bytes; //type: uint64
                                        YLeaf atm_clp1_drop_packets; //type: uint64
                                        YLeaf atm_clp1_drop_bytes; //type: uint64
                                        YLeaf queue_drop_threshold; //type: uint32
                                        YLeaf forced_wred_stats_display; //type: boolean
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32

                                    class QueueInstanceLength : public Entity
                                    {
                                        public:
                                            QueueInstanceLength();
                                            ~QueueInstanceLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                                    class QueueAverageLength : public Entity
                                    {
                                        public:
                                            QueueAverageLength();
                                            ~QueueAverageLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                                    class QueueMaxLength : public Entity
                                    {
                                        public:
                                            QueueMaxLength();
                                            ~QueueMaxLength();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf value_; //type: uint32
                                            YLeaf unit; //type: PolicyParamUnitEnum



                                    }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray


                                class PoliceStatsArray : public Entity
                                {
                                    public:
                                        PoliceStatsArray();
                                        ~PoliceStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf drop_packets; //type: uint64
                                        YLeaf drop_bytes; //type: uint64
                                        YLeaf conform_packets; //type: uint64
                                        YLeaf conform_bytes; //type: uint64
                                        YLeaf exceed_packets; //type: uint64
                                        YLeaf exceed_bytes; //type: uint64
                                        YLeaf violate_packets; //type: uint64
                                        YLeaf violate_bytes; //type: uint64
                                        YLeaf parent_drop_packets; //type: uint64
                                        YLeaf parent_drop_bytes; //type: uint64
                                        YLeaf conform_rate; //type: uint32
                                        YLeaf exceed_rate; //type: uint32
                                        YLeaf violate_rate; //type: uint32

                                    class ColorClassStats : public Entity
                                    {
                                        public:
                                            ColorClassStats();
                                            ~ColorClassStats();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf conform_class_conform_packets; //type: uint64
                                            YLeaf conform_class_conform_bytes; //type: uint64
                                            YLeaf conform_class_conform_rate; //type: uint32
                                            YLeaf conform_class_exceed_packets; //type: uint64
                                            YLeaf conform_class_exceed_bytes; //type: uint64
                                            YLeaf conform_class_exceed_rate; //type: uint32
                                            YLeaf conform_class_violate_packets; //type: uint64
                                            YLeaf conform_class_violate_bytes; //type: uint64
                                            YLeaf conform_class_violate_rate; //type: uint32
                                            YLeaf exceed_class_exceed_packets; //type: uint64
                                            YLeaf exceed_class_exceed_bytes; //type: uint64
                                            YLeaf exceed_class_exceed_rate; //type: uint32
                                            YLeaf exceed_class_violate_packets; //type: uint64
                                            YLeaf exceed_class_violate_bytes; //type: uint64
                                            YLeaf exceed_class_violate_rate; //type: uint32
                                            YLeaf violate_class_violate_packets; //type: uint64
                                            YLeaf violate_class_violate_bytes; //type: uint64
                                            YLeaf violate_class_violate_rate; //type: uint32



                                    }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray


                                class WredStatsArray : public Entity
                                {
                                    public:
                                        WredStatsArray();
                                        ~WredStatsArray();

                                        bool has_data() const override;
                                        bool has_operation() const override;
                                        EntityPath get_entity_path(Entity* parent) const override;
                                        std::string get_segment_path() const override;
                                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                        void set_value(const std::string & value_path, std::string value) override;
                                        std::map<std::string, Entity*> & get_children() override;


                                        YLeaf profile_title; //type: string
                                        YLeaf red_transmit_packets; //type: uint64
                                        YLeaf red_transmit_bytes; //type: uint64
                                        YLeaf random_drop_packets; //type: uint64
                                        YLeaf random_drop_bytes; //type: uint64
                                        YLeaf max_threshold_packets; //type: uint64
                                        YLeaf max_threshold_bytes; //type: uint64
                                        YLeaf red_ecn_marked_packets; //type: uint64
                                        YLeaf red_ecn_marked_bytes; //type: uint64

                                    class RedLabel : public Entity
                                    {
                                        public:
                                            RedLabel();
                                            ~RedLabel();

                                            bool has_data() const override;
                                            bool has_operation() const override;
                                            EntityPath get_entity_path(Entity* parent) const override;
                                            std::string get_segment_path() const override;
                                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                            void set_value(const std::string & value_path, std::string value) override;
                                            std::map<std::string, Entity*> & get_children() override;


                                            YLeaf wred_type; //type: WredEnum
                                            YLeaf value_; //type: uint8



                                    }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray


                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::CacStats> cac_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::GeneralStats> general_stats;
                                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                            }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics::ClassStat> > class_stat;


                        }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output::Statistics> statistics;


                    }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output


                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Input> input;
                        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId::Output> output;


                }; // Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId


                    std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds::SatelliteId> > satellite_id;


            }; // Qos::InterfaceTable::Interface::SatelliteIds


            class Input : public Entity
            {
                public:
                    Input();
                    ~Input();

                    bool has_data() const override;
                    bool has_operation() const override;
                    EntityPath get_entity_path(Entity* parent) const override;
                    std::string get_segment_path() const override;
                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                    void set_value(const std::string & value_path, std::string value) override;
                    std::map<std::string, Entity*> & get_children() override;



                class Statistics : public Entity
                {
                    public:
                        Statistics();
                        ~Statistics();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;


                        YLeaf policy_name; //type: string
                        YLeaf state; //type: PolicyStateEnum
                        YLeaf state_description; //type: string
                        YLeaf satid; //type: uint32

                    class ClassStat : public Entity
                    {
                        public:
                            ClassStat();
                            ~ClassStat();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;


                            YLeaf counter_validity_bitmask; //type: uint64
                            YLeaf class_name; //type: string
                            YLeaf shared_queue_id; //type: uint32
                            YLeaf queue_descr; //type: string
                            YLeaf cac_state; //type: CacStateEnum

                        class GeneralStats : public Entity
                        {
                            public:
                                GeneralStats();
                                ~GeneralStats();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf transmit_packets; //type: uint64
                                YLeaf transmit_bytes; //type: uint64
                                YLeaf total_drop_packets; //type: uint64
                                YLeaf total_drop_bytes; //type: uint64
                                YLeaf total_drop_rate; //type: uint32
                                YLeaf match_data_rate; //type: uint32
                                YLeaf total_transmit_rate; //type: uint32
                                YLeaf pre_policy_matched_packets; //type: uint64
                                YLeaf pre_policy_matched_bytes; //type: uint64



                        }; // Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::GeneralStats


                        class IphcStats : public Entity
                        {
                            public:
                                IphcStats();
                                ~IphcStats();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf non_tcp_total_out_packets; //type: uint64
                                YLeaf non_tcp_total_out_bytes; //type: uint64
                                YLeaf non_tcp_bytes_saved; //type: uint64
                                YLeaf non_tcp_compressed_packets_out; //type: uint64
                                YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                YLeaf non_tcp_full_header_packets_out; //type: uint64
                                YLeaf tcp_total_out_packets; //type: uint64
                                YLeaf tcp_total_out_bytes; //type: uint64
                                YLeaf tcp_bytes_saved; //type: uint64
                                YLeaf tcp_compressed_packets_out; //type: uint64
                                YLeaf tcp_bytes_sent_rate; //type: uint32
                                YLeaf tcp_full_header_packets_out; //type: uint64



                        }; // Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::IphcStats


                        class ChildPolicy : public Entity
                        {
                            public:
                                ChildPolicy();
                                ~ChildPolicy();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;





                        }; // Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::ChildPolicy


                        class CacStats : public Entity
                        {
                            public:
                                CacStats();
                                ~CacStats();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf drop_packets; //type: uint64
                                YLeaf drop_bytes; //type: uint64
                                YLeaf drop_rates; //type: uint32
                                YLeaf admitpackets; //type: uint64
                                YLeaf admit_bytes; //type: uint64
                                YLeaf admit_rates; //type: uint32



                        }; // Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::CacStats


                        class QueueStatsArray : public Entity
                        {
                            public:
                                QueueStatsArray();
                                ~QueueStatsArray();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf queue_id; //type: uint32
                                YLeaf tail_drop_packets; //type: uint64
                                YLeaf tail_drop_bytes; //type: uint64
                                YLeaf atm_clp0_drop_packets; //type: uint64
                                YLeaf atm_clp0_drop_bytes; //type: uint64
                                YLeaf atm_clp1_drop_packets; //type: uint64
                                YLeaf atm_clp1_drop_bytes; //type: uint64
                                YLeaf queue_drop_threshold; //type: uint32
                                YLeaf forced_wred_stats_display; //type: boolean
                                YLeaf random_drop_packets; //type: uint64
                                YLeaf random_drop_bytes; //type: uint64
                                YLeaf max_threshold_packets; //type: uint64
                                YLeaf max_threshold_bytes; //type: uint64
                                YLeaf conform_packets; //type: uint64
                                YLeaf conform_bytes; //type: uint64
                                YLeaf exceed_packets; //type: uint64
                                YLeaf exceed_bytes; //type: uint64
                                YLeaf conform_rate; //type: uint32
                                YLeaf exceed_rate; //type: uint32

                            class QueueInstanceLength : public Entity
                            {
                                public:
                                    QueueInstanceLength();
                                    ~QueueInstanceLength();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf value_; //type: uint32
                                    YLeaf unit; //type: PolicyParamUnitEnum



                            }; // Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                            class QueueAverageLength : public Entity
                            {
                                public:
                                    QueueAverageLength();
                                    ~QueueAverageLength();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf value_; //type: uint32
                                    YLeaf unit; //type: PolicyParamUnitEnum



                            }; // Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                            class QueueMaxLength : public Entity
                            {
                                public:
                                    QueueMaxLength();
                                    ~QueueMaxLength();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf value_; //type: uint32
                                    YLeaf unit; //type: PolicyParamUnitEnum



                            }; // Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                        }; // Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray


                        class PoliceStatsArray : public Entity
                        {
                            public:
                                PoliceStatsArray();
                                ~PoliceStatsArray();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf drop_packets; //type: uint64
                                YLeaf drop_bytes; //type: uint64
                                YLeaf conform_packets; //type: uint64
                                YLeaf conform_bytes; //type: uint64
                                YLeaf exceed_packets; //type: uint64
                                YLeaf exceed_bytes; //type: uint64
                                YLeaf violate_packets; //type: uint64
                                YLeaf violate_bytes; //type: uint64
                                YLeaf parent_drop_packets; //type: uint64
                                YLeaf parent_drop_bytes; //type: uint64
                                YLeaf conform_rate; //type: uint32
                                YLeaf exceed_rate; //type: uint32
                                YLeaf violate_rate; //type: uint32

                            class ColorClassStats : public Entity
                            {
                                public:
                                    ColorClassStats();
                                    ~ColorClassStats();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf conform_class_conform_packets; //type: uint64
                                    YLeaf conform_class_conform_bytes; //type: uint64
                                    YLeaf conform_class_conform_rate; //type: uint32
                                    YLeaf conform_class_exceed_packets; //type: uint64
                                    YLeaf conform_class_exceed_bytes; //type: uint64
                                    YLeaf conform_class_exceed_rate; //type: uint32
                                    YLeaf conform_class_violate_packets; //type: uint64
                                    YLeaf conform_class_violate_bytes; //type: uint64
                                    YLeaf conform_class_violate_rate; //type: uint32
                                    YLeaf exceed_class_exceed_packets; //type: uint64
                                    YLeaf exceed_class_exceed_bytes; //type: uint64
                                    YLeaf exceed_class_exceed_rate; //type: uint32
                                    YLeaf exceed_class_violate_packets; //type: uint64
                                    YLeaf exceed_class_violate_bytes; //type: uint64
                                    YLeaf exceed_class_violate_rate; //type: uint32
                                    YLeaf violate_class_violate_packets; //type: uint64
                                    YLeaf violate_class_violate_bytes; //type: uint64
                                    YLeaf violate_class_violate_rate; //type: uint32



                            }; // Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                        }; // Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::PoliceStatsArray


                        class WredStatsArray : public Entity
                        {
                            public:
                                WredStatsArray();
                                ~WredStatsArray();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf profile_title; //type: string
                                YLeaf red_transmit_packets; //type: uint64
                                YLeaf red_transmit_bytes; //type: uint64
                                YLeaf random_drop_packets; //type: uint64
                                YLeaf random_drop_bytes; //type: uint64
                                YLeaf max_threshold_packets; //type: uint64
                                YLeaf max_threshold_bytes; //type: uint64
                                YLeaf red_ecn_marked_packets; //type: uint64
                                YLeaf red_ecn_marked_bytes; //type: uint64

                            class RedLabel : public Entity
                            {
                                public:
                                    RedLabel();
                                    ~RedLabel();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf wred_type; //type: WredEnum
                                    YLeaf value_; //type: uint8



                            }; // Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::WredStatsArray::RedLabel


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                        }; // Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::WredStatsArray


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::CacStats> cac_stats;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::ChildPolicy> child_policy;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::GeneralStats> general_stats;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::IphcStats> iphc_stats;
                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                    }; // Qos::InterfaceTable::Interface::Input::Statistics::ClassStat


                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input::Statistics::ClassStat> > class_stat;


                }; // Qos::InterfaceTable::Interface::Input::Statistics


                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input::Statistics> statistics;


            }; // Qos::InterfaceTable::Interface::Input


            class Output : public Entity
            {
                public:
                    Output();
                    ~Output();

                    bool has_data() const override;
                    bool has_operation() const override;
                    EntityPath get_entity_path(Entity* parent) const override;
                    std::string get_segment_path() const override;
                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                    void set_value(const std::string & value_path, std::string value) override;
                    std::map<std::string, Entity*> & get_children() override;



                class Statistics : public Entity
                {
                    public:
                        Statistics();
                        ~Statistics();

                        bool has_data() const override;
                        bool has_operation() const override;
                        EntityPath get_entity_path(Entity* parent) const override;
                        std::string get_segment_path() const override;
                        Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                        void set_value(const std::string & value_path, std::string value) override;
                        std::map<std::string, Entity*> & get_children() override;


                        YLeaf policy_name; //type: string
                        YLeaf state; //type: PolicyStateEnum
                        YLeaf state_description; //type: string
                        YLeaf satid; //type: uint32

                    class ClassStat : public Entity
                    {
                        public:
                            ClassStat();
                            ~ClassStat();

                            bool has_data() const override;
                            bool has_operation() const override;
                            EntityPath get_entity_path(Entity* parent) const override;
                            std::string get_segment_path() const override;
                            Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                            void set_value(const std::string & value_path, std::string value) override;
                            std::map<std::string, Entity*> & get_children() override;


                            YLeaf counter_validity_bitmask; //type: uint64
                            YLeaf class_name; //type: string
                            YLeaf shared_queue_id; //type: uint32
                            YLeaf queue_descr; //type: string
                            YLeaf cac_state; //type: CacStateEnum

                        class GeneralStats : public Entity
                        {
                            public:
                                GeneralStats();
                                ~GeneralStats();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf transmit_packets; //type: uint64
                                YLeaf transmit_bytes; //type: uint64
                                YLeaf total_drop_packets; //type: uint64
                                YLeaf total_drop_bytes; //type: uint64
                                YLeaf total_drop_rate; //type: uint32
                                YLeaf match_data_rate; //type: uint32
                                YLeaf total_transmit_rate; //type: uint32
                                YLeaf pre_policy_matched_packets; //type: uint64
                                YLeaf pre_policy_matched_bytes; //type: uint64



                        }; // Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::GeneralStats


                        class IphcStats : public Entity
                        {
                            public:
                                IphcStats();
                                ~IphcStats();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf non_tcp_total_out_packets; //type: uint64
                                YLeaf non_tcp_total_out_bytes; //type: uint64
                                YLeaf non_tcp_bytes_saved; //type: uint64
                                YLeaf non_tcp_compressed_packets_out; //type: uint64
                                YLeaf non_tcp_bytes_sent_rate; //type: uint32
                                YLeaf non_tcp_full_header_packets_out; //type: uint64
                                YLeaf tcp_total_out_packets; //type: uint64
                                YLeaf tcp_total_out_bytes; //type: uint64
                                YLeaf tcp_bytes_saved; //type: uint64
                                YLeaf tcp_compressed_packets_out; //type: uint64
                                YLeaf tcp_bytes_sent_rate; //type: uint32
                                YLeaf tcp_full_header_packets_out; //type: uint64



                        }; // Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::IphcStats


                        class ChildPolicy : public Entity
                        {
                            public:
                                ChildPolicy();
                                ~ChildPolicy();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;





                        }; // Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::ChildPolicy


                        class CacStats : public Entity
                        {
                            public:
                                CacStats();
                                ~CacStats();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf drop_packets; //type: uint64
                                YLeaf drop_bytes; //type: uint64
                                YLeaf drop_rates; //type: uint32
                                YLeaf admitpackets; //type: uint64
                                YLeaf admit_bytes; //type: uint64
                                YLeaf admit_rates; //type: uint32



                        }; // Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::CacStats


                        class QueueStatsArray : public Entity
                        {
                            public:
                                QueueStatsArray();
                                ~QueueStatsArray();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf queue_id; //type: uint32
                                YLeaf tail_drop_packets; //type: uint64
                                YLeaf tail_drop_bytes; //type: uint64
                                YLeaf atm_clp0_drop_packets; //type: uint64
                                YLeaf atm_clp0_drop_bytes; //type: uint64
                                YLeaf atm_clp1_drop_packets; //type: uint64
                                YLeaf atm_clp1_drop_bytes; //type: uint64
                                YLeaf queue_drop_threshold; //type: uint32
                                YLeaf forced_wred_stats_display; //type: boolean
                                YLeaf random_drop_packets; //type: uint64
                                YLeaf random_drop_bytes; //type: uint64
                                YLeaf max_threshold_packets; //type: uint64
                                YLeaf max_threshold_bytes; //type: uint64
                                YLeaf conform_packets; //type: uint64
                                YLeaf conform_bytes; //type: uint64
                                YLeaf exceed_packets; //type: uint64
                                YLeaf exceed_bytes; //type: uint64
                                YLeaf conform_rate; //type: uint32
                                YLeaf exceed_rate; //type: uint32

                            class QueueInstanceLength : public Entity
                            {
                                public:
                                    QueueInstanceLength();
                                    ~QueueInstanceLength();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf value_; //type: uint32
                                    YLeaf unit; //type: PolicyParamUnitEnum



                            }; // Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength


                            class QueueAverageLength : public Entity
                            {
                                public:
                                    QueueAverageLength();
                                    ~QueueAverageLength();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf value_; //type: uint32
                                    YLeaf unit; //type: PolicyParamUnitEnum



                            }; // Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength


                            class QueueMaxLength : public Entity
                            {
                                public:
                                    QueueMaxLength();
                                    ~QueueMaxLength();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf value_; //type: uint32
                                    YLeaf unit; //type: PolicyParamUnitEnum



                            }; // Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueAverageLength> > queue_average_length;
                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueInstanceLength> > queue_instance_length;
                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray::QueueMaxLength> > queue_max_length;


                        }; // Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray


                        class PoliceStatsArray : public Entity
                        {
                            public:
                                PoliceStatsArray();
                                ~PoliceStatsArray();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf drop_packets; //type: uint64
                                YLeaf drop_bytes; //type: uint64
                                YLeaf conform_packets; //type: uint64
                                YLeaf conform_bytes; //type: uint64
                                YLeaf exceed_packets; //type: uint64
                                YLeaf exceed_bytes; //type: uint64
                                YLeaf violate_packets; //type: uint64
                                YLeaf violate_bytes; //type: uint64
                                YLeaf parent_drop_packets; //type: uint64
                                YLeaf parent_drop_bytes; //type: uint64
                                YLeaf conform_rate; //type: uint32
                                YLeaf exceed_rate; //type: uint32
                                YLeaf violate_rate; //type: uint32

                            class ColorClassStats : public Entity
                            {
                                public:
                                    ColorClassStats();
                                    ~ColorClassStats();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf conform_class_conform_packets; //type: uint64
                                    YLeaf conform_class_conform_bytes; //type: uint64
                                    YLeaf conform_class_conform_rate; //type: uint32
                                    YLeaf conform_class_exceed_packets; //type: uint64
                                    YLeaf conform_class_exceed_bytes; //type: uint64
                                    YLeaf conform_class_exceed_rate; //type: uint32
                                    YLeaf conform_class_violate_packets; //type: uint64
                                    YLeaf conform_class_violate_bytes; //type: uint64
                                    YLeaf conform_class_violate_rate; //type: uint32
                                    YLeaf exceed_class_exceed_packets; //type: uint64
                                    YLeaf exceed_class_exceed_bytes; //type: uint64
                                    YLeaf exceed_class_exceed_rate; //type: uint32
                                    YLeaf exceed_class_violate_packets; //type: uint64
                                    YLeaf exceed_class_violate_bytes; //type: uint64
                                    YLeaf exceed_class_violate_rate; //type: uint32
                                    YLeaf violate_class_violate_packets; //type: uint64
                                    YLeaf violate_class_violate_bytes; //type: uint64
                                    YLeaf violate_class_violate_rate; //type: uint32



                            }; // Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats


                                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::PoliceStatsArray::ColorClassStats> color_class_stats;


                        }; // Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::PoliceStatsArray


                        class WredStatsArray : public Entity
                        {
                            public:
                                WredStatsArray();
                                ~WredStatsArray();

                                bool has_data() const override;
                                bool has_operation() const override;
                                EntityPath get_entity_path(Entity* parent) const override;
                                std::string get_segment_path() const override;
                                Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                void set_value(const std::string & value_path, std::string value) override;
                                std::map<std::string, Entity*> & get_children() override;


                                YLeaf profile_title; //type: string
                                YLeaf red_transmit_packets; //type: uint64
                                YLeaf red_transmit_bytes; //type: uint64
                                YLeaf random_drop_packets; //type: uint64
                                YLeaf random_drop_bytes; //type: uint64
                                YLeaf max_threshold_packets; //type: uint64
                                YLeaf max_threshold_bytes; //type: uint64
                                YLeaf red_ecn_marked_packets; //type: uint64
                                YLeaf red_ecn_marked_bytes; //type: uint64

                            class RedLabel : public Entity
                            {
                                public:
                                    RedLabel();
                                    ~RedLabel();

                                    bool has_data() const override;
                                    bool has_operation() const override;
                                    EntityPath get_entity_path(Entity* parent) const override;
                                    std::string get_segment_path() const override;
                                    Entity* get_child_by_name(const std::string & yang_name, const std::string & segment_path) override;
                                    void set_value(const std::string & value_path, std::string value) override;
                                    std::map<std::string, Entity*> & get_children() override;


                                    YLeaf wred_type; //type: WredEnum
                                    YLeaf value_; //type: uint8



                            }; // Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::WredStatsArray::RedLabel


                                std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::WredStatsArray::RedLabel> > red_label;


                        }; // Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::WredStatsArray


                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::CacStats> cac_stats;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::ChildPolicy> child_policy;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::GeneralStats> general_stats;
                            std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::IphcStats> iphc_stats;
                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::PoliceStatsArray> > police_stats_array;
                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::QueueStatsArray> > queue_stats_array;
                            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output::Statistics::ClassStat::WredStatsArray> > wred_stats_array;


                    }; // Qos::InterfaceTable::Interface::Output::Statistics::ClassStat


                        std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output::Statistics::ClassStat> > class_stat;


                }; // Qos::InterfaceTable::Interface::Output::Statistics


                    std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output::Statistics> statistics;


            }; // Qos::InterfaceTable::Interface::Output


                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Input> input;
                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::MemberInterfaces> member_interfaces;
                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Nodes> nodes;
                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::Output> output;
                std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface::SatelliteIds> satellite_ids;


        }; // Qos::InterfaceTable::Interface


            std::vector<std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable::Interface> > interface;


    }; // Qos::InterfaceTable


        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::InterfaceTable> interface_table;
        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::Nodes> nodes;
        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvInterfaceTable> nv_interface_table;
        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::NvSatellite> nv_satellite;
        std::unique_ptr<Cisco_IOS_XR_qos_ma_oper::Qos::QosGlobal> qos_global;


}; // Qos


class WredEnum : public Enum
{
    public:
        static const Enum::YLeaf wred_cos_cmd;
        static const Enum::YLeaf wred_dscp_cmd;
        static const Enum::YLeaf wred_precedence_cmd;
        static const Enum::YLeaf wred_discard_class_cmd;
        static const Enum::YLeaf wred_mpls_exp_cmd;
        static const Enum::YLeaf red_with_user_min_max;
        static const Enum::YLeaf red_with_default_min_max;
        static const Enum::YLeaf wred_dei_cmd;
        static const Enum::YLeaf wred_ecn_cmd;
        static const Enum::YLeaf wred_invalid_cmd;

};

class PolicyParamUnitEnum : public Enum
{
    public:
        static const Enum::YLeaf policy_param_unit_invalid;
        static const Enum::YLeaf policy_param_unit_bytes;
        static const Enum::YLeaf policy_param_unit_kbytes;
        static const Enum::YLeaf policy_param_unit_mbytes;
        static const Enum::YLeaf policy_param_unit_gbytes;
        static const Enum::YLeaf policy_param_unit_bitsps;
        static const Enum::YLeaf policy_param_unit_kbitsps;
        static const Enum::YLeaf policy_param_unit_mbitsps;
        static const Enum::YLeaf policy_param_unit_gbitsps;
        static const Enum::YLeaf policy_param_unit_cells_ps;
        static const Enum::YLeaf policy_param_unit_packets_ps;
        static const Enum::YLeaf policy_param_unit_us;
        static const Enum::YLeaf policy_param_unit_ms;
        static const Enum::YLeaf policy_param_unit_seconds;
        static const Enum::YLeaf policy_param_unit_packets;
        static const Enum::YLeaf policy_param_unit_cells;
        static const Enum::YLeaf policy_param_unit_percent;
        static const Enum::YLeaf policy_param_unit_per_thousand;
        static const Enum::YLeaf policy_param_unit_per_million;
        static const Enum::YLeaf policy_param_unit_hz;
        static const Enum::YLeaf policy_param_unit_khz;
        static const Enum::YLeaf policy_param_unit_mhz;
        static const Enum::YLeaf policy_param_unit_ratio;
        static const Enum::YLeaf policy_param_unit_max;

};

class QosCapsOperationEnumEnum : public Enum
{
    public:
        static const Enum::YLeaf add;
        static const Enum::YLeaf remove;
        static const Enum::YLeaf replace;
        static const Enum::YLeaf modify;
        static const Enum::YLeaf unknown;

};

class CacStateEnum : public Enum
{
    public:
        static const Enum::YLeaf unknown;
        static const Enum::YLeaf admit;
        static const Enum::YLeaf redirect;
        static const Enum::YLeaf ubrl;

};

class QosMaSatCapsTypeEnumEnum : public Enum
{
    public:
        static const Enum::YLeaf input;
        static const Enum::YLeaf output;
        static const Enum::YLeaf unknown;

};

class PolicyStateEnum : public Enum
{
    public:
        static const Enum::YLeaf active;
        static const Enum::YLeaf suspended;

};


}
}

#endif /* _CISCO_IOS_XR_QOS_MA_OPER_ */

