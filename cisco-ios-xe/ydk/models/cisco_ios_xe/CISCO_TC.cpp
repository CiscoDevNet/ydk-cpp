
#include <sstream>
#include <iostream>
#include <ydk/entity_util.hpp>
#include "bundle_info.hpp"
#include "generated_entity_lookup.hpp"
#include "CISCO_TC.hpp"

using namespace ydk;

namespace cisco_ios_xe {
namespace CISCO_TC {

const Enum::YLeaf CiscoRowOperStatus::active {1, "active"};
const Enum::YLeaf CiscoRowOperStatus::activeDependencies {2, "activeDependencies"};
const Enum::YLeaf CiscoRowOperStatus::inactiveDependency {3, "inactiveDependency"};
const Enum::YLeaf CiscoRowOperStatus::missingDependency {4, "missingDependency"};

const Enum::YLeaf CiscoAlarmSeverity::cleared {1, "cleared"};
const Enum::YLeaf CiscoAlarmSeverity::indeterminate {2, "indeterminate"};
const Enum::YLeaf CiscoAlarmSeverity::critical {3, "critical"};
const Enum::YLeaf CiscoAlarmSeverity::major {4, "major"};
const Enum::YLeaf CiscoAlarmSeverity::minor {5, "minor"};
const Enum::YLeaf CiscoAlarmSeverity::warning {6, "warning"};
const Enum::YLeaf CiscoAlarmSeverity::info {7, "info"};

const Enum::YLeaf CiscoPortListRange::oneto2k {1, "oneto2k"};
const Enum::YLeaf CiscoPortListRange::twoKto4K {2, "twoKto4K"};
const Enum::YLeaf CiscoPortListRange::fourKto6K {3, "fourKto6K"};
const Enum::YLeaf CiscoPortListRange::sixKto8K {4, "sixKto8K"};
const Enum::YLeaf CiscoPortListRange::eightKto10K {5, "eightKto10K"};
const Enum::YLeaf CiscoPortListRange::tenKto12K {6, "tenKto12K"};
const Enum::YLeaf CiscoPortListRange::twelveKto14K {7, "twelveKto14K"};
const Enum::YLeaf CiscoPortListRange::fourteenKto16K {8, "fourteenKto16K"};

const Enum::YLeaf IfOperStatusReason::other {1, "other"};
const Enum::YLeaf IfOperStatusReason::none {2, "none"};
const Enum::YLeaf IfOperStatusReason::hwFailure {3, "hwFailure"};
const Enum::YLeaf IfOperStatusReason::loopbackDiagFailure {4, "loopbackDiagFailure"};
const Enum::YLeaf IfOperStatusReason::errorDisabled {5, "errorDisabled"};
const Enum::YLeaf IfOperStatusReason::swFailure {6, "swFailure"};
const Enum::YLeaf IfOperStatusReason::linkFailure {7, "linkFailure"};
const Enum::YLeaf IfOperStatusReason::offline {8, "offline"};
const Enum::YLeaf IfOperStatusReason::nonParticipating {9, "nonParticipating"};
const Enum::YLeaf IfOperStatusReason::initializing {10, "initializing"};
const Enum::YLeaf IfOperStatusReason::vsanInactive {11, "vsanInactive"};
const Enum::YLeaf IfOperStatusReason::adminDown {12, "adminDown"};
const Enum::YLeaf IfOperStatusReason::channelAdminDown {13, "channelAdminDown"};
const Enum::YLeaf IfOperStatusReason::channelOperSuspended {14, "channelOperSuspended"};
const Enum::YLeaf IfOperStatusReason::channelConfigurationInProgress {15, "channelConfigurationInProgress"};
const Enum::YLeaf IfOperStatusReason::rcfInProgress {16, "rcfInProgress"};
const Enum::YLeaf IfOperStatusReason::elpFailureIsolation {17, "elpFailureIsolation"};
const Enum::YLeaf IfOperStatusReason::escFailureIsolation {18, "escFailureIsolation"};
const Enum::YLeaf IfOperStatusReason::domainOverlapIsolation {19, "domainOverlapIsolation"};
const Enum::YLeaf IfOperStatusReason::domainAddrAssignFailureIsolation {20, "domainAddrAssignFailureIsolation"};
const Enum::YLeaf IfOperStatusReason::domainOtherSideEportIsolation {21, "domainOtherSideEportIsolation"};
const Enum::YLeaf IfOperStatusReason::domainInvalidRcfReceived {22, "domainInvalidRcfReceived"};
const Enum::YLeaf IfOperStatusReason::domainManagerDisabled {23, "domainManagerDisabled"};
const Enum::YLeaf IfOperStatusReason::zoneMergeFailureIsolation {24, "zoneMergeFailureIsolation"};
const Enum::YLeaf IfOperStatusReason::vsanMismatchIsolation {25, "vsanMismatchIsolation"};
const Enum::YLeaf IfOperStatusReason::parentDown {26, "parentDown"};
const Enum::YLeaf IfOperStatusReason::srcPortNotBound {27, "srcPortNotBound"};
const Enum::YLeaf IfOperStatusReason::interfaceRemoved {28, "interfaceRemoved"};
const Enum::YLeaf IfOperStatusReason::fcotNotPresent {29, "fcotNotPresent"};
const Enum::YLeaf IfOperStatusReason::fcotVendorNotSupported {30, "fcotVendorNotSupported"};
const Enum::YLeaf IfOperStatusReason::incompatibleAdminMode {31, "incompatibleAdminMode"};
const Enum::YLeaf IfOperStatusReason::incompatibleAdminSpeed {32, "incompatibleAdminSpeed"};
const Enum::YLeaf IfOperStatusReason::suspendedByMode {33, "suspendedByMode"};
const Enum::YLeaf IfOperStatusReason::suspendedBySpeed {34, "suspendedBySpeed"};
const Enum::YLeaf IfOperStatusReason::suspendedByWWN {35, "suspendedByWWN"};
const Enum::YLeaf IfOperStatusReason::domainMaxReTxFailure {36, "domainMaxReTxFailure"};
const Enum::YLeaf IfOperStatusReason::eppFailure {37, "eppFailure"};
const Enum::YLeaf IfOperStatusReason::portVsanMismatchIsolation {38, "portVsanMismatchIsolation"};
const Enum::YLeaf IfOperStatusReason::loopbackIsolation {39, "loopbackIsolation"};
const Enum::YLeaf IfOperStatusReason::upgradeInProgress {40, "upgradeInProgress"};
const Enum::YLeaf IfOperStatusReason::incompatibleAdminRxBbCredit {41, "incompatibleAdminRxBbCredit"};
const Enum::YLeaf IfOperStatusReason::incompatibleAdminRxBufferSize {42, "incompatibleAdminRxBufferSize"};
const Enum::YLeaf IfOperStatusReason::portChannelMembersDown {43, "portChannelMembersDown"};
const Enum::YLeaf IfOperStatusReason::zoneRemoteNoRespIsolation {44, "zoneRemoteNoRespIsolation"};
const Enum::YLeaf IfOperStatusReason::firstPortUpAsEport {45, "firstPortUpAsEport"};
const Enum::YLeaf IfOperStatusReason::firstPortNotUp {46, "firstPortNotUp"};
const Enum::YLeaf IfOperStatusReason::peerFCIPPortClosedConnection {47, "peerFCIPPortClosedConnection"};
const Enum::YLeaf IfOperStatusReason::peerFCIPPortResetConnection {48, "peerFCIPPortResetConnection"};
const Enum::YLeaf IfOperStatusReason::fcipPortMaxReTx {49, "fcipPortMaxReTx"};
const Enum::YLeaf IfOperStatusReason::fcipPortKeepAliveTimerExpire {50, "fcipPortKeepAliveTimerExpire"};
const Enum::YLeaf IfOperStatusReason::fcipPortPersistTimerExpire {51, "fcipPortPersistTimerExpire"};
const Enum::YLeaf IfOperStatusReason::fcipPortSrcLinkDown {52, "fcipPortSrcLinkDown"};
const Enum::YLeaf IfOperStatusReason::fcipPortSrcAdminDown {53, "fcipPortSrcAdminDown"};
const Enum::YLeaf IfOperStatusReason::fcipPortAdminCfgChange {54, "fcipPortAdminCfgChange"};
const Enum::YLeaf IfOperStatusReason::fcipSrcPortRemoved {55, "fcipSrcPortRemoved"};
const Enum::YLeaf IfOperStatusReason::fcipSrcModuleNotOnline {56, "fcipSrcModuleNotOnline"};
const Enum::YLeaf IfOperStatusReason::invalidConfig {57, "invalidConfig"};
const Enum::YLeaf IfOperStatusReason::portBindFailure {58, "portBindFailure"};
const Enum::YLeaf IfOperStatusReason::portFabricBindFailure {59, "portFabricBindFailure"};
const Enum::YLeaf IfOperStatusReason::noCommonVsanIsolation {60, "noCommonVsanIsolation"};
const Enum::YLeaf IfOperStatusReason::ficonVsanDown {61, "ficonVsanDown"};
const Enum::YLeaf IfOperStatusReason::invalidAttachment {62, "invalidAttachment"};
const Enum::YLeaf IfOperStatusReason::portBlocked {63, "portBlocked"};
const Enum::YLeaf IfOperStatusReason::incomAdminRxBbCreditPerBuf {64, "incomAdminRxBbCreditPerBuf"};
const Enum::YLeaf IfOperStatusReason::tooManyInvalidFlogis {65, "tooManyInvalidFlogis"};
const Enum::YLeaf IfOperStatusReason::deniedDueToPortBinding {66, "deniedDueToPortBinding"};
const Enum::YLeaf IfOperStatusReason::elpFailureRevMismatch {67, "elpFailureRevMismatch"};
const Enum::YLeaf IfOperStatusReason::elpFailureClassFParamErr {68, "elpFailureClassFParamErr"};
const Enum::YLeaf IfOperStatusReason::elpFailureClassNParamErr {69, "elpFailureClassNParamErr"};
const Enum::YLeaf IfOperStatusReason::elpFailureUnknownFlowCtlCode {70, "elpFailureUnknownFlowCtlCode"};
const Enum::YLeaf IfOperStatusReason::elpFailureInvalidFlowCtlParam {71, "elpFailureInvalidFlowCtlParam"};
const Enum::YLeaf IfOperStatusReason::elpFailureInvalidPortName {72, "elpFailureInvalidPortName"};
const Enum::YLeaf IfOperStatusReason::elpFailureInvalidSwitchName {73, "elpFailureInvalidSwitchName"};
const Enum::YLeaf IfOperStatusReason::elpFailureRatovEdtovMismatch {74, "elpFailureRatovEdtovMismatch"};
const Enum::YLeaf IfOperStatusReason::elpFailureLoopbackDetected {75, "elpFailureLoopbackDetected"};
const Enum::YLeaf IfOperStatusReason::elpFailureInvalidTxBbCredit {76, "elpFailureInvalidTxBbCredit"};
const Enum::YLeaf IfOperStatusReason::elpFailureInvalidPayloadSize {77, "elpFailureInvalidPayloadSize"};
const Enum::YLeaf IfOperStatusReason::bundleMisCfg {78, "bundleMisCfg"};
const Enum::YLeaf IfOperStatusReason::bitErrRuntimeThreshExceeded {79, "bitErrRuntimeThreshExceeded"};
const Enum::YLeaf IfOperStatusReason::linkFailLinkReset {80, "linkFailLinkReset"};
const Enum::YLeaf IfOperStatusReason::linkFailPortInitFail {81, "linkFailPortInitFail"};
const Enum::YLeaf IfOperStatusReason::linkFailPortUnusable {82, "linkFailPortUnusable"};
const Enum::YLeaf IfOperStatusReason::linkFailLossOfSignal {83, "linkFailLossOfSignal"};
const Enum::YLeaf IfOperStatusReason::linkFailLossOfSync {84, "linkFailLossOfSync"};
const Enum::YLeaf IfOperStatusReason::linkFailNosRcvd {85, "linkFailNosRcvd"};
const Enum::YLeaf IfOperStatusReason::linkFailOLSRcvd {86, "linkFailOLSRcvd"};
const Enum::YLeaf IfOperStatusReason::linkFailDebounceTimeout {87, "linkFailDebounceTimeout"};
const Enum::YLeaf IfOperStatusReason::linkFailLrRcvd {88, "linkFailLrRcvd"};
const Enum::YLeaf IfOperStatusReason::linkFailCreditLoss {89, "linkFailCreditLoss"};
const Enum::YLeaf IfOperStatusReason::linkFailRxQOverflow {90, "linkFailRxQOverflow"};
const Enum::YLeaf IfOperStatusReason::linkFailTooManyInterrupts {91, "linkFailTooManyInterrupts"};
const Enum::YLeaf IfOperStatusReason::linkFailLipRcvdBb {92, "linkFailLipRcvdBb"};
const Enum::YLeaf IfOperStatusReason::linkFailBbCreditLoss {93, "linkFailBbCreditLoss"};
const Enum::YLeaf IfOperStatusReason::linkFailOpenPrimSignalTimeout {94, "linkFailOpenPrimSignalTimeout"};
const Enum::YLeaf IfOperStatusReason::linkFailOpenPrimSignalReturned {95, "linkFailOpenPrimSignalReturned"};
const Enum::YLeaf IfOperStatusReason::linkFailLipF8Rcvd {96, "linkFailLipF8Rcvd"};
const Enum::YLeaf IfOperStatusReason::linkFailLineCardPortShutdown {97, "linkFailLineCardPortShutdown"};
const Enum::YLeaf IfOperStatusReason::fcspAuthenfailure {98, "fcspAuthenfailure"};
const Enum::YLeaf IfOperStatusReason::fcotChecksumError {99, "fcotChecksumError"};
const Enum::YLeaf IfOperStatusReason::ohmsExtLoopbackTest {100, "ohmsExtLoopbackTest"};
const Enum::YLeaf IfOperStatusReason::invalidFabricBindExchange {101, "invalidFabricBindExchange"};
const Enum::YLeaf IfOperStatusReason::tovMismatch {102, "tovMismatch"};
const Enum::YLeaf IfOperStatusReason::ficonNotEnabled {103, "ficonNotEnabled"};
const Enum::YLeaf IfOperStatusReason::ficonNoPortNumber {104, "ficonNoPortNumber"};
const Enum::YLeaf IfOperStatusReason::ficonBeingEnabled {105, "ficonBeingEnabled"};
const Enum::YLeaf IfOperStatusReason::ePortProhibited {106, "ePortProhibited"};
const Enum::YLeaf IfOperStatusReason::portGracefulShutdown {107, "portGracefulShutdown"};
const Enum::YLeaf IfOperStatusReason::trunkNotFullyActive {108, "trunkNotFullyActive"};
const Enum::YLeaf IfOperStatusReason::fabricBindingSwitchWwnNotFound {109, "fabricBindingSwitchWwnNotFound"};
const Enum::YLeaf IfOperStatusReason::fabricBindingDomainInvalid {110, "fabricBindingDomainInvalid"};
const Enum::YLeaf IfOperStatusReason::fabricBindingDbMismatch {111, "fabricBindingDbMismatch"};
const Enum::YLeaf IfOperStatusReason::fabricBindingNoRspFromPeer {112, "fabricBindingNoRspFromPeer"};
const Enum::YLeaf IfOperStatusReason::dpvmVsanSuspended {113, "dpvmVsanSuspended"};
const Enum::YLeaf IfOperStatusReason::dpvmVsanNotFound {114, "dpvmVsanNotFound"};
const Enum::YLeaf IfOperStatusReason::trackedPortDown {115, "trackedPortDown"};
const Enum::YLeaf IfOperStatusReason::ecSuspendedOnLoop {116, "ecSuspendedOnLoop"};
const Enum::YLeaf IfOperStatusReason::isolateBundleMisCfg {117, "isolateBundleMisCfg"};
const Enum::YLeaf IfOperStatusReason::noPeerBundleSupport {118, "noPeerBundleSupport"};
const Enum::YLeaf IfOperStatusReason::portBringupIsolation {119, "portBringupIsolation"};
const Enum::YLeaf IfOperStatusReason::domainNotAllowedIsolated {120, "domainNotAllowedIsolated"};
const Enum::YLeaf IfOperStatusReason::virtualIvrDomainOverlapIsolation {121, "virtualIvrDomainOverlapIsolation"};
const Enum::YLeaf IfOperStatusReason::outOfService {122, "outOfService"};
const Enum::YLeaf IfOperStatusReason::portAuthFailed {123, "portAuthFailed"};
const Enum::YLeaf IfOperStatusReason::bundleStandby {124, "bundleStandby"};
const Enum::YLeaf IfOperStatusReason::portConnectorTypeErr {125, "portConnectorTypeErr"};
const Enum::YLeaf IfOperStatusReason::errorDisabledReInitLmtReached {126, "errorDisabledReInitLmtReached"};
const Enum::YLeaf IfOperStatusReason::ficonDupPortNum {127, "ficonDupPortNum"};
const Enum::YLeaf IfOperStatusReason::localRcf {128, "localRcf"};
const Enum::YLeaf IfOperStatusReason::twoSwitchesWithSameWWN {129, "twoSwitchesWithSameWWN"};
const Enum::YLeaf IfOperStatusReason::invalidOtherSidePrincEFPReqRecd {130, "invalidOtherSidePrincEFPReqRecd"};
const Enum::YLeaf IfOperStatusReason::domainOther {131, "domainOther"};
const Enum::YLeaf IfOperStatusReason::elpFailureAllZeroPeerWWNRcvd {132, "elpFailureAllZeroPeerWWNRcvd"};
const Enum::YLeaf IfOperStatusReason::preferredPathIsolation {133, "preferredPathIsolation"};
const Enum::YLeaf IfOperStatusReason::fcRedirectIsolation {134, "fcRedirectIsolation"};
const Enum::YLeaf IfOperStatusReason::portActLicenseNotAvailable {135, "portActLicenseNotAvailable"};
const Enum::YLeaf IfOperStatusReason::sdmIsolation {136, "sdmIsolation"};
const Enum::YLeaf IfOperStatusReason::fcidAllocationFailed {137, "fcidAllocationFailed"};
const Enum::YLeaf IfOperStatusReason::externallyDisabled {138, "externallyDisabled"};
const Enum::YLeaf IfOperStatusReason::unavailableNPVUpstreamPort {139, "unavailableNPVUpstreamPort"};
const Enum::YLeaf IfOperStatusReason::unavailableNPVPrefUpstreamPort {140, "unavailableNPVPrefUpstreamPort"};
const Enum::YLeaf IfOperStatusReason::sfpReadError {141, "sfpReadError"};
const Enum::YLeaf IfOperStatusReason::stickyDownOnLinkFailure {142, "stickyDownOnLinkFailure"};
const Enum::YLeaf IfOperStatusReason::tooManyLinkFlapsErr {143, "tooManyLinkFlapsErr"};
const Enum::YLeaf IfOperStatusReason::unidirectionalUDLD {144, "unidirectionalUDLD"};
const Enum::YLeaf IfOperStatusReason::txRxLoopUDLD {145, "txRxLoopUDLD"};
const Enum::YLeaf IfOperStatusReason::neighborMismatchUDLD {146, "neighborMismatchUDLD"};
const Enum::YLeaf IfOperStatusReason::authzPending {147, "authzPending"};
const Enum::YLeaf IfOperStatusReason::hotStdbyInBundle {148, "hotStdbyInBundle"};
const Enum::YLeaf IfOperStatusReason::incompleteConfig {149, "incompleteConfig"};
const Enum::YLeaf IfOperStatusReason::incompleteTunnelCfg {150, "incompleteTunnelCfg"};
const Enum::YLeaf IfOperStatusReason::hwProgrammingFailed {151, "hwProgrammingFailed"};
const Enum::YLeaf IfOperStatusReason::tunnelDstUnreachable {152, "tunnelDstUnreachable"};
const Enum::YLeaf IfOperStatusReason::suspendByMtu {153, "suspendByMtu"};
const Enum::YLeaf IfOperStatusReason::sfpInvalid {154, "sfpInvalid"};
const Enum::YLeaf IfOperStatusReason::sfpAbsent {155, "sfpAbsent"};
const Enum::YLeaf IfOperStatusReason::portCapabilitiesUnknown {156, "portCapabilitiesUnknown"};
const Enum::YLeaf IfOperStatusReason::channelErrDisabled {157, "channelErrDisabled"};
const Enum::YLeaf IfOperStatusReason::vrfMismatch {158, "vrfMismatch"};
const Enum::YLeaf IfOperStatusReason::vrfForwardReferencing {159, "vrfForwardReferencing"};
const Enum::YLeaf IfOperStatusReason::dupTunnelConfigDetected {160, "dupTunnelConfigDetected"};
const Enum::YLeaf IfOperStatusReason::primaryVLANDown {161, "primaryVLANDown"};
const Enum::YLeaf IfOperStatusReason::vrfUnusable {162, "vrfUnusable"};
const Enum::YLeaf IfOperStatusReason::errDisableHandShkFailure {163, "errDisableHandShkFailure"};
const Enum::YLeaf IfOperStatusReason::errDisabledBPDUGuard {164, "errDisabledBPDUGuard"};
const Enum::YLeaf IfOperStatusReason::dot1xSecViolationErrDisabled {165, "dot1xSecViolationErrDisabled"};
const Enum::YLeaf IfOperStatusReason::emptyEchoUDLD {166, "emptyEchoUDLD"};
const Enum::YLeaf IfOperStatusReason::vfTaggingCapErr {167, "vfTaggingCapErr"};
const Enum::YLeaf IfOperStatusReason::portDisabled {168, "portDisabled"};
const Enum::YLeaf IfOperStatusReason::tunnelModeNotConfigured {169, "tunnelModeNotConfigured"};
const Enum::YLeaf IfOperStatusReason::tunnelSrcNotConfigured {170, "tunnelSrcNotConfigured"};
const Enum::YLeaf IfOperStatusReason::tunnelDstNotConfigured {171, "tunnelDstNotConfigured"};
const Enum::YLeaf IfOperStatusReason::tunnelUnableToResolveSrcIP {172, "tunnelUnableToResolveSrcIP"};
const Enum::YLeaf IfOperStatusReason::tunnelUnableToResolveDstIP {173, "tunnelUnableToResolveDstIP"};
const Enum::YLeaf IfOperStatusReason::tunnelVrfDown {174, "tunnelVrfDown"};
const Enum::YLeaf IfOperStatusReason::sifAdminDown {175, "sifAdminDown"};
const Enum::YLeaf IfOperStatusReason::phyIntfDown {176, "phyIntfDown"};
const Enum::YLeaf IfOperStatusReason::ifSifLimitExceeded {177, "ifSifLimitExceeded"};
const Enum::YLeaf IfOperStatusReason::sifHoldDown {178, "sifHoldDown"};
const Enum::YLeaf IfOperStatusReason::noFcoe {179, "noFcoe"};
const Enum::YLeaf IfOperStatusReason::dcxCompatMismatch {180, "dcxCompatMismatch"};
const Enum::YLeaf IfOperStatusReason::isolateBundleLimitExceeded {181, "isolateBundleLimitExceeded"};
const Enum::YLeaf IfOperStatusReason::sifNotBound {182, "sifNotBound"};
const Enum::YLeaf IfOperStatusReason::errDisabledLacpMiscfg {183, "errDisabledLacpMiscfg"};
const Enum::YLeaf IfOperStatusReason::satFabricIfDown {184, "satFabricIfDown"};
const Enum::YLeaf IfOperStatusReason::invalidSatFabricIf {185, "invalidSatFabricIf"};
const Enum::YLeaf IfOperStatusReason::noRemoteChassis {186, "noRemoteChassis"};
const Enum::YLeaf IfOperStatusReason::vicEnableNotReceived {187, "vicEnableNotReceived"};
const Enum::YLeaf IfOperStatusReason::vicDisableReceived {188, "vicDisableReceived"};
const Enum::YLeaf IfOperStatusReason::vlanVsanMappingNotEnabled {189, "vlanVsanMappingNotEnabled"};
const Enum::YLeaf IfOperStatusReason::stpNotFwdingInFcoeMappedVlan {190, "stpNotFwdingInFcoeMappedVlan"};
const Enum::YLeaf IfOperStatusReason::moduleOffline {191, "moduleOffline"};
const Enum::YLeaf IfOperStatusReason::udldAggModeLinkFailure {192, "udldAggModeLinkFailure"};
const Enum::YLeaf IfOperStatusReason::stpInconsVpcPeerDisabled {193, "stpInconsVpcPeerDisabled"};
const Enum::YLeaf IfOperStatusReason::setPortStateFailed {194, "setPortStateFailed"};
const Enum::YLeaf IfOperStatusReason::suspendedByVpc {195, "suspendedByVpc"};
const Enum::YLeaf IfOperStatusReason::vpcCfgInProgress {196, "vpcCfgInProgress"};
const Enum::YLeaf IfOperStatusReason::vpcPeerLinkDown {197, "vpcPeerLinkDown"};
const Enum::YLeaf IfOperStatusReason::vpcNoRspFromPeer {198, "vpcNoRspFromPeer"};
const Enum::YLeaf IfOperStatusReason::protoPortSuspend {199, "protoPortSuspend"};
const Enum::YLeaf IfOperStatusReason::tunnelSrcDown {200, "tunnelSrcDown"};
const Enum::YLeaf IfOperStatusReason::cdpInfoUnavailable {201, "cdpInfoUnavailable"};
const Enum::YLeaf IfOperStatusReason::fexSfpInvalid {202, "fexSfpInvalid"};
const Enum::YLeaf IfOperStatusReason::errDisabledIpConflict {203, "errDisabledIpConflict"};
const Enum::YLeaf IfOperStatusReason::fcotClkRateMismatch {204, "fcotClkRateMismatch"};
const Enum::YLeaf IfOperStatusReason::portGuardTrustSecViolation {205, "portGuardTrustSecViolation"};
const Enum::YLeaf IfOperStatusReason::sdpTimeout {206, "sdpTimeout"};
const Enum::YLeaf IfOperStatusReason::satIncompatTopo {207, "satIncompatTopo"};
const Enum::YLeaf IfOperStatusReason::waitForFlogi {208, "waitForFlogi"};
const Enum::YLeaf IfOperStatusReason::satNotConfigured {209, "satNotConfigured"};
const Enum::YLeaf IfOperStatusReason::npivNotEnabledInUpstream {210, "npivNotEnabledInUpstream"};
const Enum::YLeaf IfOperStatusReason::vsanMismatchWithUpstreamSwPort {211, "vsanMismatchWithUpstreamSwPort"};
const Enum::YLeaf IfOperStatusReason::portGuardBitErrRate {212, "portGuardBitErrRate"};
const Enum::YLeaf IfOperStatusReason::portGuardSigLoss {213, "portGuardSigLoss"};
const Enum::YLeaf IfOperStatusReason::portGuardSyncLoss {214, "portGuardSyncLoss"};
const Enum::YLeaf IfOperStatusReason::portGuardLinkReset {215, "portGuardLinkReset"};
const Enum::YLeaf IfOperStatusReason::portGuardCreditLoss {216, "portGuardCreditLoss"};
const Enum::YLeaf IfOperStatusReason::ipQosMgrPolicyAppFailure {217, "ipQosMgrPolicyAppFailure"};
const Enum::YLeaf IfOperStatusReason::pauseRateLimitErrDisabled {218, "pauseRateLimitErrDisabled"};
const Enum::YLeaf IfOperStatusReason::lstGrpUplinkDown {219, "lstGrpUplinkDown"};
const Enum::YLeaf IfOperStatusReason::stickyDnLinkFailure {220, "stickyDnLinkFailure"};
const Enum::YLeaf IfOperStatusReason::routerMacFailure {221, "routerMacFailure"};
const Enum::YLeaf IfOperStatusReason::dcxMultipleMsapIds {222, "dcxMultipleMsapIds"};
const Enum::YLeaf IfOperStatusReason::dcxHundredPdusRcvdNoAck {223, "dcxHundredPdusRcvdNoAck"};
const Enum::YLeaf IfOperStatusReason::enmSatIncompatibleUplink {224, "enmSatIncompatibleUplink"};
const Enum::YLeaf IfOperStatusReason::enmLoopDetected {225, "enmLoopDetected"};
const Enum::YLeaf IfOperStatusReason::nonStickyExternallyDisabled {226, "nonStickyExternallyDisabled"};
const Enum::YLeaf IfOperStatusReason::subGroupIdNotAssigned {227, "subGroupIdNotAssigned"};
const Enum::YLeaf IfOperStatusReason::vemUnlicensed {228, "vemUnlicensed"};
const Enum::YLeaf IfOperStatusReason::profileNotFound {229, "profileNotFound"};
const Enum::YLeaf IfOperStatusReason::nonExistentVlan {230, "nonExistentVlan"};
const Enum::YLeaf IfOperStatusReason::vlanInvalidType {231, "vlanInvalidType"};
const Enum::YLeaf IfOperStatusReason::vlanDown {232, "vlanDown"};
const Enum::YLeaf IfOperStatusReason::vpcPeerUpgrade {233, "vpcPeerUpgrade"};
const Enum::YLeaf IfOperStatusReason::ipQosDcbxpCompatFailure {234, "ipQosDcbxpCompatFailure"};
const Enum::YLeaf IfOperStatusReason::nonCiscoHbaVfTag {235, "nonCiscoHbaVfTag"};
const Enum::YLeaf IfOperStatusReason::domainIdConfigMismatch {236, "domainIdConfigMismatch"};
const Enum::YLeaf IfOperStatusReason::sfpSpeedMismatch {237, "sfpSpeedMismatch"};
const Enum::YLeaf IfOperStatusReason::xcvrInitializing {238, "xcvrInitializing"};
const Enum::YLeaf IfOperStatusReason::xcvrAbsent {239, "xcvrAbsent"};
const Enum::YLeaf IfOperStatusReason::xcvrInvalid {240, "xcvrInvalid"};
const Enum::YLeaf IfOperStatusReason::vfcBindingInvalid {241, "vfcBindingInvalid"};
const Enum::YLeaf IfOperStatusReason::vlanNotFcoeEnabled {242, "vlanNotFcoeEnabled"};
const Enum::YLeaf IfOperStatusReason::pvlanNativeVlanErr {243, "pvlanNativeVlanErr"};
const Enum::YLeaf IfOperStatusReason::ethL2VlanDown {244, "ethL2VlanDown"};
const Enum::YLeaf IfOperStatusReason::ethIntfInvalidBinding {245, "ethIntfInvalidBinding"};
const Enum::YLeaf IfOperStatusReason::pmonFailure {246, "pmonFailure"};
const Enum::YLeaf IfOperStatusReason::l3NotReady {247, "l3NotReady"};
const Enum::YLeaf IfOperStatusReason::speedMismatch {248, "speedMismatch"};
const Enum::YLeaf IfOperStatusReason::flowControlMismatch {249, "flowControlMismatch"};
const Enum::YLeaf IfOperStatusReason::vdcMode {250, "vdcMode"};
const Enum::YLeaf IfOperStatusReason::suspendedDueToMinLinks {251, "suspendedDueToMinLinks"};
const Enum::YLeaf IfOperStatusReason::enmPinFailLinkDown {252, "enmPinFailLinkDown"};
const Enum::YLeaf IfOperStatusReason::inactiveM1PortFpathActiveVlan {253, "inactiveM1PortFpathActiveVlan"};
const Enum::YLeaf IfOperStatusReason::parentPortDown {254, "parentPortDown"};
const Enum::YLeaf IfOperStatusReason::moduleRemoved {255, "moduleRemoved"};
const Enum::YLeaf IfOperStatusReason::corePortMct {256, "corePortMct"};
const Enum::YLeaf IfOperStatusReason::nonCorePortMct {257, "nonCorePortMct"};
const Enum::YLeaf IfOperStatusReason::ficonInorderNotActive {258, "ficonInorderNotActive"};
const Enum::YLeaf IfOperStatusReason::invalidEncapsulation {259, "invalidEncapsulation"};
const Enum::YLeaf IfOperStatusReason::modemLineDeasserted {260, "modemLineDeasserted"};
const Enum::YLeaf IfOperStatusReason::ipSecHndshkInProgress {261, "ipSecHndshkInProgress"};
const Enum::YLeaf IfOperStatusReason::sfpEthCompliantErr {262, "sfpEthCompliantErr"};
const Enum::YLeaf IfOperStatusReason::cellularModemUnattached {263, "cellularModemUnattached"};
const Enum::YLeaf IfOperStatusReason::outOfGlblRxBuffers {264, "outOfGlblRxBuffers"};
const Enum::YLeaf IfOperStatusReason::sfpFcCompliantErr {265, "sfpFcCompliantErr"};
const Enum::YLeaf IfOperStatusReason::ethIntfNotLicensed {266, "ethIntfNotLicensed"};
const Enum::YLeaf IfOperStatusReason::domainIdsInvalid {267, "domainIdsInvalid"};
const Enum::YLeaf IfOperStatusReason::fabricNameInvalid {268, "fabricNameInvalid"};

const Enum::YLeaf CiscoNetworkProtocol::ip {1, "ip"};
const Enum::YLeaf CiscoNetworkProtocol::decnet {2, "decnet"};
const Enum::YLeaf CiscoNetworkProtocol::pup {3, "pup"};
const Enum::YLeaf CiscoNetworkProtocol::chaos {4, "chaos"};
const Enum::YLeaf CiscoNetworkProtocol::xns {5, "xns"};
const Enum::YLeaf CiscoNetworkProtocol::x121 {6, "x121"};
const Enum::YLeaf CiscoNetworkProtocol::appletalk {7, "appletalk"};
const Enum::YLeaf CiscoNetworkProtocol::clns {8, "clns"};
const Enum::YLeaf CiscoNetworkProtocol::lat {9, "lat"};
const Enum::YLeaf CiscoNetworkProtocol::vines {10, "vines"};
const Enum::YLeaf CiscoNetworkProtocol::cons {11, "cons"};
const Enum::YLeaf CiscoNetworkProtocol::apollo {12, "apollo"};
const Enum::YLeaf CiscoNetworkProtocol::stun {13, "stun"};
const Enum::YLeaf CiscoNetworkProtocol::novell {14, "novell"};
const Enum::YLeaf CiscoNetworkProtocol::qllc {15, "qllc"};
const Enum::YLeaf CiscoNetworkProtocol::snapshot {16, "snapshot"};
const Enum::YLeaf CiscoNetworkProtocol::atmIlmi {17, "atmIlmi"};
const Enum::YLeaf CiscoNetworkProtocol::bstun {18, "bstun"};
const Enum::YLeaf CiscoNetworkProtocol::x25pvc {19, "x25pvc"};
const Enum::YLeaf CiscoNetworkProtocol::ipv6 {20, "ipv6"};
const Enum::YLeaf CiscoNetworkProtocol::cdm {21, "cdm"};
const Enum::YLeaf CiscoNetworkProtocol::nbf {22, "nbf"};
const Enum::YLeaf CiscoNetworkProtocol::bpxIgx {23, "bpxIgx"};
const Enum::YLeaf CiscoNetworkProtocol::clnsPfx {24, "clnsPfx"};
const Enum::YLeaf CiscoNetworkProtocol::http {25, "http"};
const Enum::YLeaf CiscoNetworkProtocol::unknown {65535, "unknown"};

const Enum::YLeaf CiscoLocationClass::chassis {1, "chassis"};
const Enum::YLeaf CiscoLocationClass::shelf {2, "shelf"};
const Enum::YLeaf CiscoLocationClass::slot {3, "slot"};
const Enum::YLeaf CiscoLocationClass::subSlot {4, "subSlot"};
const Enum::YLeaf CiscoLocationClass::port {5, "port"};
const Enum::YLeaf CiscoLocationClass::subPort {6, "subPort"};
const Enum::YLeaf CiscoLocationClass::channel {7, "channel"};
const Enum::YLeaf CiscoLocationClass::subChannel {8, "subChannel"};


}
}

